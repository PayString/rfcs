<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2818 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml">
<!ENTITY RFC8446 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
<!ENTITY RFC7258 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7258.xml">
<!ENTITY RFC7231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7231.xml">
<!ENTITY RFC4732 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4732.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-aanchal-payid-protocol-01" category="std">

  <front>
    <title>PayID Protocol</title>

    <author initials="A." surname="Malhotra" fullname="Aanchal Malhotra">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>amalhotra@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>
    <author initials="D." surname="Schwartz" fullname="David Schwartz">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>david@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="June" day="16"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID protocol - an application-layer protocol, which can be used to interact with a PayID-enabled service provider. The primary use-case is to discover payment account information along with optional metadata identified by a PayID <xref target="PAYID-URI"></xref>. The protocol is based on HTTP transfer of PayID protocol messages over a secure transport.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a part of the <eref target="https://payid.org/">PayID Protocol</eref> work.
 Feedback related to this specification should be sent to <eref target="mailto:payid@ripple.com">payid@ripple.com</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="terminology" title="Terminology">
<t>This protocol can be referred to as <spanx style="verb">Basic PayID Protocol</spanx> or <spanx style="verb">PayID Protocol</spanx>. The following terminology is used by this specification.</t>

<t><list style="symbols">
  <t>Endpoint: either the client or the server of the connection.
  <list style="symbols">
      <t>Sending Endpoint: sending side of the transaction (wallet or exchange).</t>
      <t>Receiving Endpoint: receiving side of the transaction (wallet or exchange).</t>
    </list></t>
  <t>PayID client: The endpoint that initiates PayID protocol.</t>
  <t>PayID owner: The owner of the PayID URI as described in <xref target="PAYID-URI"></xref>.</t>
  <t>PayID server: The endpoint that returns payment account information.</t>
</list></t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> and [RFC9174][].</t>

</section>
<section anchor="introduction" title="Introduction">
<t><xref target="PAYID-URI"></xref> describes a URI scheme to identify payment account(s) at a service provider. <xref target="PAYID-DISCOVERY"></xref>, on the other hand, defines how to transform a PayID URI into a PayID URL that can be used by other protocols to interact with a PayID-enabled service provider but does not define protocol(s) to do so.</t>

<t>This document specifies PayID protocol - an application-layer protocol which can be used to interact with a PayID-enabled service provider identified by PayID URL using standard HTTP methods over a secure transport. In its most basic mode, a PayID protocol resource returns a JavaScript Object Notation (JSON) object representing the payment account(s) information along with optional metadata corresponding to the queried PayID URI <xref target="PAYID-URI"></xref>. The protocol defines new media formatting types for requests and responses but uses normal HTTP content negotiation mechanisms for selecting alternatives that the PayID client and server may prefer in anticipation of serving new use cases.</t>

<section anchor="design-goals" title="Design Goals">

<t><list style="symbols">
  <t>Extensibility</t>
</list></t>

<t>Although the primary use-case for the payment account(s) information resource returned via Basic PayID protocol is assumed to be for making payments, the PayID protocol is designed to be easily extensible to facilitate creation and retrieval of other resources about the PayID owner, PayID client and/or PayID server that might be required for making payments.</t>

<t><list style="symbols">
  <t>Neutrality: Currency and Network Agnostic</t>
</list></t>

<t>PayID protocol is designed to be a fundamentally neutral protocol. PayID protocol is capable of returning a PayID owner's payment account(s) information for any network that they (or their service) support. This makes PayID protocol a network and currency agnostic protocol, capable of enabling payments in BTC, XRP, ERC-20 tokens, Lightning, ILP, or even fiat networks like ACH.</t>

<t><list style="symbols">
  <t>Decentralized &amp; Peer-to-Peer</t>
</list></t>

<t>Just like email servers, anyone can run their own PayID server or use third-party hosted services. If self-hosted, PayID protocol introduces no new counterparty risk or changes to a service’s security or privacy model. PayID protocol doesn’t require new, complex, and potentially unreliable peer discovery protocols, instead establishing direct peer-to-peer connections between communicating parties from the start.
   PayID is built on the most successful decentralized network: the web. There is no designated centralized authority, or a risk of a patchwork of different standards in different jurisdictions that make a global solution impossibly complex.</t>

<t><list style="symbols">
  <t>Service Sovereignty</t>
</list></t>

<t>Each service provider that uses PayID for their users maintains full control of its PayID URL space, PayID service and has the ability to incorporate any policy they choose, including privacy, authentication, and security.  They also have full sovereignty over users on their domain, just like in email. PayID is highly generalized and does not prescribe any particular solution outside of the standardized communication, which makes it compatible with existing compliance and user management tools and philosophies.</t>

</section>
</section>
<section anchor="payid-server-discovery" title="PayID Server Discovery">
<t>To support PayID protocol, the PayID client needs to discover the PayID URL corresponding to the PayID URI <xref target="PAYID-URI"></xref>. This can be obtained either using mechanisms described in <xref target="PAYID-DISCOVERY"></xref> or could be entered manually.</t>

</section>
<section anchor="json-format-design" title="JSON Format Design">
<t>JSON as described in [RFC8259][], defines a test format for serializing structured data. Objects are serialized as an unordered collection of name/value pairs. JSON does not define any semantics around the name/value pairs that make up an object. PayID protocol's JSON format defines name/value pairs that annotate a JSON object, property or array for PayID protocol resources.</t>

<t>The PayID client MUST request PayID response in JSON format through the <spanx style="verb">Accept</spanx> header with the media type as defined below, optionally followed by format parameters. One of the optional parameters is the case insensitive <spanx style="verb">q</spanx> value as described in Section 5.3.1 of <xref target="RFC7231"></xref>.</t>

<t>Each message body is represented as a single JSON object. This object contains name/value pair whose value is the correct representation for a primitive value as described in [RFC8259][], or an array or object as described in section below.</t>

<t>If the PayID server does not support JSON format, it MUST reply with an appropriate error response.</t>

<section anchor="http-method" title="HTTP Method">
<t>The PayID protocol payment account(s) information resource is requested using the HTTP GET method.</t>

<t>Following are the media types to request the payment account(s) information resource on different payment-networks and environments.</t>

</section>
<section anchor="media-type-of-payment-accounts-information-resource" title="Media Type of Payment Account(s) Information Resource">
<t>The media type for payment account information resource is <spanx style="verb">application/* + json</spanx>.</t>

</section>
<section anchor="response-for-application-json" title="Response for application/* + json">
<t>The response body for <spanx style="verb">application/* + json</spanx> is a JSON object with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  {  
   optional string payId,
   required Address[] addresses, 
   optional string memo,
   optional string identity,
   optional ProofOfControlSignature proofOfControlSignature
  }
]]></artwork></figure>

<section anchor="payid" title="payId">
<t>The value of <spanx style="verb">payId</spanx> field is the PayID URI in the client request that identifies the payment account information that the JSON object describes.</t>

<t>The <spanx style="verb">payId</spanx> field is an optional field in the response.</t>

</section>
<section anchor="addresses" title="addresses">
<t>The value of <spanx style="verb">addresses</spanx> field is a JSON array of type <spanx style="verb">Address</spanx> of one or more JSON objects with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  { 
   required string paymentNetwork,
   optional string environment, 
   required string addressDetailsType,
   required addressDetailsType addressDetails
  }
]]></artwork></figure>

<t><list style="symbols">
  <t>paymentNetwork: The value of payment-network as specified in the client request's <spanx style="verb">Accept</spanx> header</t>
  <t>environment: The value of environment as specified in the client request's <spanx style="verb">Accept</spanx> header</t>
  <t>addressDetailsType: The value of <spanx style="verb">addressDetailsType</spanx> is JSON object of one of the following types.
  <list style="symbols">
      <t>CryptoAddressDetails</t>
      <t>ACHAddressDetails</t>
    </list></t>
  <t>addressDetails: The value of <spanx style="verb">addressDetails</spanx> is the address information necessary to send payment on a specific payment-netowrk and environment.</t>
</list></t>

<t>The <spanx style="verb">addresses</spanx> field MUST be present in the response.</t>

<section anchor="addressdetailstype" title="addressDetailsType">
<t>We define the following two types of payment address types.</t>

<t><list style="symbols">
  <t>CryptoAddressDetails: This is a JSON object with the following name/value pairs.  <vspace blankLines='1'/>
{
  required string address,
  optional string tag
}  <list style="symbols">
      <t>address: The value of <spanx style="verb">address</spanx> field contains the on-ledger address corresponding.</t>
      <t>tag: The value of <spanx style="verb">tag</spanx> field is the tag value used by some cryptocurrencies to distinguish accounts contained within a singular address. E.g XRP's destination tag.</t>
    </list></t>
  <t>ACHAddressDetails: This is a JSON object with the following name/value pairs.  <vspace blankLines='1'/>
{
  required string accountNumber,
  required string routingNumber
}  <list style="symbols">
      <t>accountNumber: The value of <spanx style="verb">accountNumber</spanx> is the ACH account number.</t>
      <t>routingNumber: The value of <spanx style="verb">routingNumber</spanx> is the ACH routing number.</t>
    </list></t>
</list></t>

</section>
</section>
<section anchor="memo" title="memo">
<t>The <spanx style="verb">memo</spanx> string may specify additional metadata corresponding to a payment.</t>

<t>The <spanx style="verb">memo</spanx> string is an OPTIONAL field in the response.</t>

</section>
<section anchor="identity" title="identity">
<t>The <spanx style="verb">identity</spanx> string may specify any additional identity information about the PayID owner or PayID server.</t>

<t>The <spanx style="verb">identity</spanx> string is an OPTIONAL field in the response.</t>

</section>
<section anchor="proofofcontrolsignature" title="proofOfControlSignature">
<t>The value of <spanx style="verb">proofOfControlSignature</spanx> field is a JSON object of type <spanx style="verb">ProofOfControlSignature</spanx> with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  {
   required string publicKey,
   required string payID, 
   required string hashAlgorithm,
   required string signature
  }
]]></artwork></figure>

<t><list style="symbols">
  <t>publicKey: On-ledger public key of the Receiving Endpoint</t>
  <t>payID: PayID URI of the PayID owner</t>
  <t>hashAlgorithm: Hash algorithms used to hash the entire contents of the <spanx style="verb">ProofOfControlSignature</spanx> message.</t>
  <t>signature: Digital signature over the hash of the entire contents of the <spanx style="verb">ProofOfControlSignature</spanx> message using the private key corresponding to the public key in <spanx style="verb">publicKey</spanx>. This is a proof that the Receiving Endpoint is the owner of the on-ledger public key in <spanx style="verb">publicKey</spanx>.</t>
</list></t>

<t>The <spanx style="verb">proofOfControlSignature</spanx> is an OPTIONAL field in the response.</t>

</section>
</section>
<section anchor="meaning-of-media-type-application-json" title="Meaning of Media Type application/* + json">
<t><spanx style="verb">*</spanx> may represent different payment-networks and environments. In this document, we propose standards with the media types specific to XRP, ILP, and ACH payment networks. We also propose media type that returns all addresses across all payment networks. Other payment networks MUST establish standard media types for their networks at IANA.</t>

<t><list style="symbols">
  <t>Accept: application/payid-json
  Returns all payment account(s) information correspnding to the requested PayID URI</t>
  <t>Accept: application/xrpl-mainnet+json</t>
</list></t>

<t>Returns XRPL mainnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/xrpl-testnet+json</t>
</list></t>

<t>Returns XRPL testnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/xrpl-devnet+json</t>
</list></t>

<t>Returns XRPL devnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/interledger-testnet+json</t>
</list></t>

<t>Returns mainnet payment pointer to initiate SPSP request</t>

<t><list style="symbols">
  <t>Accept: application/interledger-devnet+json</t>
</list></t>

<t>Returns testnet payment pointer to initiate SPSP request</t>

<t><list style="symbols">
  <t>Accept: application/ach+json</t>
</list></t>

<t>Returns account and routing number</t>

<t>The PayID client MAY specify more than one media types along with the preference parameter. The server MUST respond as described in the Content Negotiation section below.</t>

</section>
</section>
<section anchor="header-fields" title="Header Fields">
<t>PayID protocol defines semantics around the following request and response headers. Additional headers MAY be defined, but have no unique semantics defined in the PayID protocol.</t>

<section anchor="common-headers" title="Common Headers">
<t>The following headers are common between PayID requests and responses.</t>

<section anchor="header-content-type" title="Header Content-Type">
<t>PayID requests and responses with a JSON message body MUST have a <spanx style="verb">Content-Type</spanx> header value of <spanx style="verb">application-json</spanx>.</t>

</section>
<section anchor="header-content-length" title="Header Content-Length">
<t>As defined in [RFC7230][], a request or response SHOULD include a <spanx style="verb">Content-Length</spanx> header when the message's length can be determined prior to being transferred. PayID protocol does not add any additional requirements over HTTP for writing Content-Length.</t>

</section>
<section anchor="header-payid-version-todo" title="Header PayID-version (TODO)">
<t>The PayID client MUST include the PayID version request header field to specify the version of the PayID protocol used to generate the request.</t>

<t>If present on a request, the PayID server MUST interpret the request according to the rules defined in the specified version of the PayID protocol or fail the request with an appropriate error response code.</t>

<t>If not specified in a request, the PayID server MUST fail the request with an appropriate error code.</t>

</section>
</section>
<section anchor="request-headers" title="Request Headers">
<t>In addition to common Headers, the PayID client MUST specify the following request header.</t>

<section anchor="header-accept" title="Header Accept">
<t>The PayID client MUST specify the <spanx style="verb">Accept</spanx> request header field with at least one of the registered media types (Section X). The purpose of this header is to indicate what type of content can be understood in the response. It specifies the <spanx style="verb">payment-network</spanx> and <spanx style="verb">environment</spanx> of the payment account and its representation format for which the PayID client wants to receive information. The representation format is always JSON.</t>

<t>PayID server MUST reject formats that specify unknown or unsupported format parameters.</t>

</section>
</section>
<section anchor="response-headers" title="Response Headers">
<t>In addition to the Common Headers, the PayID server MUST specify the following response header.</t>

<section anchor="header-cache-control" title="Header Cache-Control">
<t>PayID server MUST include the <spanx style="verb">Cache-Control</spanx> header with the max-age limit of 0. The intermediate hops or PayID client MUST not cache the responses.</t>

</section>
</section>
</section>
<section anchor="extensibility" title="Extensibility">

<section anchor="payload-extensibility" title="Payload Extensibility">
<t>PayID protocol supports extensibility in the payload, according to the specific format.</t>

<t>Regardless of the format, additional content MUST NOT be present if it needs to be understood by the receiver in order to correctly interpret the payload according to the specified PayID-Version header. Thus, clients MUST be prepared to handle or safely ignore any content not specifically defined in the version of the payload specified by the PayID-version header.</t>

</section>
<section anchor="header-field-extensibility" title="Header Field Extensibility">
<t>PayID protocol defines semantics around certain HTTP request and response headers. Services that support a version of PayID protocol conform to the processing requirements for the headers defined by this specification for that version.</t>

<t>Individual services MAY define custom headers. These headers MUST NOT begin with PayID. Custom headers SHOULD be optional when making requests to the service. A service MUST NOT require the PayID client to understand custom headers to accurately interpret the response.</t>

</section>
<section anchor="format-extensibility" title="Format Extensibility">
<t>A PayID service MUST support JSON format as described above and MAY support additional formats response bodies.</t>

</section>
</section>
<section anchor="basic-payid-protocol" title="Basic PayID Protocol">
<t>Basic PayID protocol is used to request payment account(s) information resource identified by a PayID URI from a PayID-enabled service provider identified by a PayID URL using HTTP over secure transport. When successful, PayID protocol always returns the JSON representation of payment account(s) information resource along with optional metadata. This information can be used for any purposes outside the scope of this document.</t>

<t>Basic PayID protocol comprise of request and response messages, each of which is defined in more detail below. The following is a visual representation of the basic protocol flow:</t>

<figure><artwork><![CDATA[
PayID client                                         PayID server
   |                                                          |
   |              1.) GET request to PayID URL                |
   |--------------------------------------------------------->|
   |                                                          | |                                                          |
   |              2.) 200 Ok                                  |
   |                  Payment account information response    |
   |<---------------------------------------------------------|
   |                                                          |
   |                                                          | 
]]></artwork></figure>

<section anchor="step-1-http-request-to-payid-url-using-http-get-method" title="Step 1: HTTP Request to PayID URL using HTTP GET Method">
<t>A basic PayID client issues a query using the HTTP GET method to the PayID URL without any query parameters and body.</t>

<t>The PayID client MUST query the PayID server using HTTPS only. <xref target="RFC2818"></xref> defines how HTTPS verifies the PayID server's identity. If the HTTPS connection cannot be established for any reason, then the PayID client MUST accept that the PayID request has failed and MUST NOT attempt to reissue the PayID request using HTTP over a non-secure connection.</t>

</section>
<section anchor="step-2-payment-account-information-response" title="Step 2: Payment Account Information Response">
<t>In response, the PayID server returns a JSON object representation of the payment account(s) information resource for the payment-network and environment requested by PayID client in the request <spanx style="verb">Accept</spanx> header field along with other required and/or optional meta data.</t>

<t>PayID servers MUST be able to process <spanx style="verb">application/payid+json</spanx> header type.</t>

<t>If the PayID server does not contain the payment account information corresponding to the request, the PayID server MUST respond with an appropriate error message.</t>

<t>A PayID server MAY redirect the PayID client; if it does, the redirection MUST only be to an <spanx style="verb">https</spanx> URI and the PayID client MUST perform certificate validation again when redirected.</t>

</section>
<section anchor="step-3-parse-payment-account-information-response" title="Step 3: Parse Payment Account Information Response">
<t>If the PayID server returns a valid response, the response will contain one or more of fields defined above.</t>

</section>
</section>
<section anchor="example-use-of-basic-payid-protocol" title="Example Use of Basic PayID Protocol">
<t>This section shows sample use of Basic PayID protocol in several
   hypothetical scenarios.</t>

<section anchor="basic-payid-protocol-by-a-wallet" title="Basic PayID Protocol by a Wallet">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet provider that Alice has an account on. Alice would log-in to the wallet provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the wallet UI to start the payment. 
   The Wallet application would first discover the PayID URL for the PayID service-provider using one of the mechanisms described in PayID discovery <xref target="PAYID-DISCOVERY"></xref> protocol.</t>

<t>The Wallet application would then issue an HTTPS GET request:</t>

<figure><artwork><![CDATA[
 GET /users/bob HTTP/1.1
 Host: www.receiver.example.com
 Accept: application/payid+json
 PayID-version: 1.0
]]></artwork></figure>

<t>The PayID server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Content-Type: application/json
 Content-Length: 403
 PayID-version: 1.0
 Cache-Control: max-age=0
 Server: Apache/1.3.11
 {
   "payId" : "bob$receiver.example.com",
   "addresses" :
   [
     {  
       "paymentNetwork" : "xrpl",
       "environment" : "testnet",
       "addressDetailsType" : "CryptoAddressDetails",
       "addressDetails" : {
                    "address" : "XTVQWr6BhgBLW2jbFyqqufgq8T9eN7KresB684ZSHKQ3oDth"
            }
      },
     {
       "paymentNetwork" : "ach",
       "environment" : "mainnet",
       "addressDetailsType" : "ACHAddressDetails",
       "addressDetails" : {
                    "accountNumber" : "5674536253",
                    "routingNumber" : "aYJTDFGLKAJD"
            }
      }
    ],
    "memo" : "Additional optional Information"
 }
]]></artwork></figure>

<t>In the above example we see that the PayID server returned a list of payment accounts identified by PayID <spanx style="verb">bob$receiver.example.com</spanx>. This is because Alice's Wallet asked for all the payment accounts corresponding to the PayID in the <spanx style="verb">Accept</spanx> header. 
  Alice's Wallet MAY then use the payment account information to make payments.</t>

<t>Another example:</t>

<figure><artwork><![CDATA[
 GET /users/bob HTTP/1.1
 Host: www.receiver.example.com
 Accept: application/xrpl-testnet+json; q=0.4,
         application/ach+json; q=0.1
 PayID-version= 1.0
]]></artwork></figure>

<t>The PayID server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Content-Type: application/json
 Content-Length: 403
 PayID-version: 1.0
 Cache-Control: max-age=0
 Server: Apache/1.3.11
 {
   "payId" : "bob$receiver.example.com",
   "addresses" :
   [
     {  
       "paymentNetwork" : "xrpl",
       "environment" : "testnet",
       "addressDetailsType" : "CryptoAddressDetails",
       "addressDetails" : {
                    "address" : "XTVQWr6BhgBLW2jbFyqqufgq8T9eN7KresB684ZSHKQ3oDth"
            }
      }
    ]
 }
]]></artwork></figure>

</section>
</section>
<section anchor="common-response-status-codes-todo" title="Common Response Status Codes (TODO)">
<t>A PayID server MAY respond to request using any valid HTTP response code appropriate for the request. The PayID server SHOULD be as specific as possible in its choice of an HTTP specific status code.</t>

<section anchor="success-responses" title="Success Responses">
<t>The following response codes represent successful requests.</t>

<section anchor="response-code-200-ok" title="Response Code 200 OK">
<t>A request that does not create a resource returns 200 OK if it is completed successfully and the value of the resource is not null. null. In this case, the response body MUST contain the value of the resource specified in the request URL.</t>

</section>
<section anchor="response-code-3xx-redirection" title="Response Code 3xx Redirection">
<t>As per <xref target="RFC7231"></xref>, a 3xx Redirection indicates that further action needs to be taken by the client in order to fulfill the request. In this case, the response SHOULD include a Location header, as appropriate, with the URL from which the result can be obtained; it MAY include a Retry-After header.</t>

</section>
</section>
<section anchor="client-error-responses" title="Client Error Responses">
<t>Error codes in the 4xx range indicate a client error, such as a malformed request. 
  In the case that a response body is defined for the error code, the body of the error is as defined for the appropriate format.</t>

</section>
</section>
<section anchor="content-negotiation" title="Content Negotiation">

<t>The PayID client MAY choose to query for all possible payment addresses corresponding to a PayID URI</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/all+json                 
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with all payment account(s) information associated with the queried PayID.</t>

<t>Alternatively, the PayID client MAY choose to query for a subset payment account(s) information in the order of preference.</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/xrpl-testnet+json; q=0.4,
         application/xrpl-mainnet+json; q= 0.1
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with the payment account(s) information corresponding to one of the payment-network and environment mentioned in the <spanx style="verb">Accept</spanx> header in the order of client request preference. If none of those exist, PayID server MUST send an appropriate error response.</t>

<t>Alternatively, the PayID client MAY combine the above two approaches.</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/xrpl-testnet+json; q=0.4,
         application/xrpl-mainnet+json; q= 0.1,
         application/payid+json
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with the payment account information corresponding to one of the payment-network and environment mentioned in the <spanx style="verb">Accept</spanx> header in the order of PayID client's preference. If none of those exist, then the PayID server MUST respond with payment account(s) information corresponding to all payment accounts associated with the queried PayID URI.</t>

</section>
<section anchor="versioningtodo" title="Versioning(TODO)">

<t>Versioning enables clients and servers to evolve independently. PayID protocol defines semantics for protocol versioning.</t>

<t>PayID requests and responses are versioned according to the PayID-version header.
 PayID clients include the PayID-version header in order to specify the maximum acceptable response version. PayID servers respond with the maximum supported version that is less than or equal to the requested <spanx style="verb">major</spanx></t>

</section>
<section anchor="security-considerations" title="Security Considerations">
<t>This security considerations section only considers PayID clients and servers bound to implementations as defined in this document. Such implementations have the following characteristics:</t>

<t><list style="symbols">
  <t>PayID URIs are static and well-known to the PayID client; PayID server URLs can be static or discovered.</t>
</list></t>

<t>The following is considered out-of-scope:</t>

<t><list style="symbols">
  <t>Communication between the PayID owner and the wallet or exchange (which acts as PayID server) for PayID URI registration, etc.</t>
  <t>Communication between the sender of the transaction and PayID client to transfer information such as PayID URI and other transaction details, etc.</t>
  <t>PayID server URL discovery by PayID client. Implementations using PayID-Discovery <xref target="PAYID-DISCOVERY"></xref> MUST consider the security considerations in the corresponding document.</t>
  <t>PayID server URL resolution by PayID client. Implementations using DNS, DNSSEC, DoH, DoT, etc. MUST consider the security considerations of the corresponding documents.</t>
</list></t>

<section anchor="network-attacks" title="Network Attacks">
<t>Basic PayID protocol's security model assumes the following network attackers:</t>

<t><list style="symbols">
  <t>Off-path attacker: An off-path attacker can be anywhere on the network. She can inject and spoof packets but can not observe, or tamper with the legitimate traffic between the PayID client and the server.</t>
  <t>On-path attacker: An on-path attacker can eavesdrop, inject, spoof and replay packets, but can not drop, delay or tamper with the legitimate traffic.</t>
  <t>In-path or Man-in-the-middle (MiTM) attacker: An MiTM is the most powerful network attacker. An MiTM has full access to the communication path between the PayID client and the server. She can observe, modify, delay and drop network packets.</t>
</list></t>

<t>Additionally we assume that the attacker has enough resources to mount an attack but can not break the security guarantees provided by the cryptographic primitives of the underlying secure transport.</t>

<t>The basic PayID protocol runs over HTTPS and thus relies on the security of the underlying transport. Implementations utilizing TLS 1.3 benefit from the TLS security profile defined in [RFC 8446][] against all the above network attackers.</t>

<section anchor="denial-of-service-dos-attacks" title="Denial-of-Service (DoS) attacks">
<t>As such cryptography can not defend against DoS attacks because any attacker can stop/interrupt the PayID protocol by:
  * Dropping network packets, 
  * Exhaustion of resources either at the network level or at PayID client and/or server.</t>

<t>The PayID servers are recommended to follow general best network configuration practices to defend against such attacks <xref target="RFC4732"></xref>.</t>

</section>
</section>
<section anchor="information-integrity" title="Information Integrity">
<t>The HTTPS connection provides transport security for the interaction between PayID client and server but does not provide the response integrity of the data provided by PayID server. A PayID client has no way of knowing if data provided in the payment account information resource has been manipulated at the PayID server, either due to malicious behaviour on the part of PayID server administrator or as a result of being compromised by an attacker. As with any information service available on the Internet, PayID clients should be wary of the information received from untrusted sources.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">
<t>The PayID client and server should be aware that placing information on the Internet means that any one can access that information. While PayID protocol is an extremely useful tool to discovering payment account(s) information corresponding to a human-rememberable PayID URI, PayID owners should also understand the associated privacy risks. The easy access to payment account information via PayID protocol was a design goal of the protocol, not a limitation.</t>

<section anchor="access-control" title="Access Control">
<t>PayID protocol MUST not be used to provide payment account(s) information corresponding to a PayID URI unless providing that data via PayID protocol by the relevant PayID server was explicitly authorized by the PayID owner. If PayID owner wishes to limit access to information, PayID servers MAY provide an interface by which PayID owners can select which information is exposed through the PayID server interface. For example, PayID servers MAY allow PayID owners to mark certain data as <spanx style="verb">public</spanx> and then utilize that marking as a means of determining what information to expose via PayID protocol. The PayID servers MAY also allow PayID owners to provide a whitelist of users who are authorized to access the specific information. In such a case, the PayID server MUST authenticate the PayID client.</t>

</section>
<section anchor="payment-address-rotation" title="Payment Address Rotation">
<t>The power of PayID protocol comes from providing a single place where others can find payment account(s) information correspondong to a PayID URI, but PayID owners should be aware of how easily payment account information that one might publish can be used in unintended ways. As one example, one might query a PayID server only to see if a given PayID URI is valid and if so, get the list of associated payment account information. If the PayID server uses the same payment address each time, it becomes easy for third-party to track one's entire payment history. The PayID server SHOULD follow the best practice of payment address rotation for every query to mitigate this privacy concern.</t>

</section>
<section anchor="on-the-wire" title="On the Wire">
<t>PayID protocol over HTTPS encrypts the traffic and requires mutual authentication of the PayID client and the PayID server. This mitigates both passive surveillance <xref target="RFC7258"></xref> and the active attacks that attempt to divert PayID protocol queries to rogue servers.</t>

<t>Additionally, the use of the HTTPS default port 443 and the ability
  to mix PayID protocol traffic with other HTTPS traffic on the same connection can deter unprivileged on-path devices from interfering with PayID operations and make PayID traffic analysis more difficult.</t>

</section>
<section anchor="in-the-payid-server" title="In the PayID Server">
<t>The Basic PayID protocol data contains no information about the PayID client; however, various transports of PayID queries and responses do provide data that can be used to correlate requests. A Basic PayID protocol implementation is built on IP, TCP, TLS and HTTP. Each layer contains one or more common features that can be used to correlate queries to the same identity.</t>

<t>At the IP level, the PayID client address provides obvious correlation information. This can be mitigated by usee of NAT, proxy, VPN, or simple address rotation over time. It may be aggravated  by use of a PayID server that can correlate real-time addressing information with other identifiers, such as when PayID server and other services are operated by the same entity.</t>

<t>PayID client implementations that use one TCP connection for multiple PayID requests directly group those requests. Long-lived connections have better performance behaviours than short-lived connections; however they group more requests, which can expose more information to correlation and consolidation. TCP-based solutions may also seek performance through the use of TCP Fast Open [RFC7413][]. The cookies used in TCP Fast open may allow PayID servers to correlate TLS connections together.</t>

<t>TCP-based implementations often achieve better handshake performance throught the use of some form of session resumption mechanism, such as Section 2.2 of <xref target="RFC8446"></xref>. Session resumption creates trivial mechanism for a server to correlate TLS connections together.</t>

<t>HTTP's feature set can also be used for identification and tracking in a number of ways. For example, Authentication request header fields explicitly identify profiles in use, and HTTP cookies are designed as an explicit state-tracking mechanism and are often used as an authentication mechanism.</t>

<t>Additionally, the <spanx style="verb">User-Agent</spanx> and <spanx style="verb">Accept-Language</spanx> request header fields often convey specific information about the PayID client version or locale. This allows for content-negotiation and operational work-arounds for implementation bugs. Request header fields that control caching can expose state information about a subset of the client's history. Mixing PayID queries with other HTTP requests on the same connection also provides an opportunity for richer data correlation.</t>

<t>The PayID protocol design allows implementations to fully leverage the HTTP ecosystem, including features that are not enumerated in this document. Utilizing the full set of HTTP featurees enables PayID to be more than HTTP tunnel, but it is at the cost of opening up implementations to the full set of privacy considerations of HTTP.</t>

<t>Implementations of PayID clients and servers need to consider the benefits and privacy impacts of these fetaures, and their deployment context, when deciding whether or not to enable them. Implementations are advised to expose the minimal set of data needed to achieve the desired feature set.</t>

<t>Determining whether or not PayID client implementation requires HTTP cookie [RFC6265][] support is particularly important because HTTP cookies are the primary state tracking mechanism in HTTP, HTTP cookies SHOULD NOT be accepted by PayID clients unless they are explicitly required by a use case.</t>

<t>Overall, the PayID protocol does not introduce privacy concerns beyond those associated with using the underlying IP, TCP, TLS and HTTP layers.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">
<t>This document defines registries for PayID protocol version and application/* +json media types.</t>

<section anchor="header-field-registration" title="Header Field Registration">
<t>Header field name: PayID-version: major.minor</t>

<t>Applicable Protocol: "PayID protocol"</t>

<t>Status: <spanx style="verb">standard</spanx></t>

<t>Author/Change controller: Refer to the contact details of the authors in this document.</t>

<t>Specification Document: <spanx style="verb">PayID protocol</spanx></t>

</section>
<section anchor="media-type-registration" title="Media Type Registration">
<t>This document registers multiple media types, listed in Table 1.</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Subtype</ttcol>
      <ttcol align='left'>Specification</ttcol>
      <c>application</c>
      <c>xrpl-mainnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>xrpl-testnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>xrpl-devnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>ach+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>interledger-mainnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>interledger-testnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>payid+json</c>
      <c>&#160;</c>
</texttable>

<t>Type Name: application</t>

<t>Subtype name: This document registers multiple subtypes as listed in table 1</t>

<t>Required parameters: n/a</t>

<t>Optional parameters: n/a</t>

<t>Encoding considerations:  Encoding considerations are identical to those specified for the "application/json" media type. See[RFC7159][].</t>

<t>Security considerations: Security considerations relating to the generation and consumption of PayID protocol messages are discussed in Section X.</t>

<t>Interoperability considerations:  This document specifies format of conforming messages and the interpretation thereof.</t>

<t>Published specification: This document is the specification for these media types; see Table 1 for the section documenting each media type.</t>

<t>Applications that use this media type:  PayID servers and PayID clients.</t>

<t>Additional information:</t>

<t>Magic number(s):  n/a</t>

<t>File extension(s):  This document uses the mime type to refer to protocol messages and thus does not require a file extension.</t>

<t>Macintosh file type code(s):  n/a</t>

<t>Person &amp; email address to contact for further information:  See Authors' Addresses section.</t>

<t>Intended usage:  COMMON</t>

<t>Restrictions on usage:  n/a</t>

<t>Author:  See Authors' Addresses section.</t>

<t>Change controller:  Internet Engineering Task Force (mailto:iesg@ietf.org).</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2818;
&RFC8446;
&RFC7258;
&RFC7231;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-DISCOVERY" >
  <front>
    <title>PayID Discovery</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC4732;


    </references>



  </back>

<!-- ##markdown-source:
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
AA==

-->

</rfc>

