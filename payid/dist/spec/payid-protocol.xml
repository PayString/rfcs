<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2818 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml">
<!ENTITY RFC8446 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
<!ENTITY RFC7258 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7258.xml">
<!ENTITY RFC7231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7231.xml">
<!ENTITY RFC4732 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4732.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-aanchal-payid-protocol-01" category="std">

  <front>
    <title>PayID Protocol</title>

    <author initials="A." surname="Malhotra" fullname="Aanchal Malhotra">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>amalhotra@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>
    <author initials="D." surname="Schwartz" fullname="David Schwartz">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>david@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="May" day="28"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID protocol - an application-layer protocol, which can be used to interact with a PayID-enabled service provider. The primary use-case is to discover payment account information along with optional metadata identified by a PayID <xref target="PAYID-URI"></xref>. The protocol is based on HTTP transfer of PayID protocol messages over a secure transport.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a part of the <eref target="https://payid.org/">PayID Protocol</eref> work.
 Feedback related to this specification should be sent to <eref target="mailto:payid@ripple.com">payid@ripple.com</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="terminology" title="Terminology">
<t>This protocol can be referred to as <spanx style="verb">Basic PayID Protocol</spanx> or <spanx style="verb">PayID Protocol</spanx>. The following terminology is used by this specification.</t>

<t><list style="symbols">
  <t>Endpoint: either the client or the server of the connection.
  <list style="symbols">
      <t>Sending Endpoint: sending side of the transaction (wallet or exchange).</t>
      <t>Receiving Endpoint: receiving side of the transaction (wallet or exchange).</t>
    </list></t>
  <t>PayID client: The endpoint that initiates PayID protocol.</t>
  <t>PayID owner: The owner of the PayID URI as described in <xref target="PAYID-URI"></xref>.</t>
  <t>PayID server: The endpoint that returns payment account information.</t>
</list></t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> and [RFC9174][].</t>

</section>
<section anchor="introduction" title="Introduction">
<t><xref target="PAYID-URI"></xref> describes a URI scheme to identify payment account(s) at a service provider. <xref target="PAYID-DISCOVERY"></xref>, on the other hand, defines how to transform a PayID URI into a PayID URL that can be used by other protocols to interact with a PayID-enabled service provider but does not define protocol(s) to do so.</t>

<t>This document specifies PayID protocol - an application-layer protocol which can be used to interact with a PayID-enabled service provider identified by PayID URL using standard HTTP methods over a secure transport. In its most basic mode, a PayID protocol resource returns a JavaScript Object Notation (JSON) object representing the payment account(s) information along with optional metadata corresponding to the queried PayID URI <xref target="PAYID-URI"></xref>. The protocol defines new media formatting types for requests and responses but uses normal HTTP content negotiation mechanisms for selecting alternatives that the PayID client and server may prefer in anticipation of serving new use cases.</t>

<section anchor="design-goals" title="Design Goals">

<t><list style="symbols">
  <t>Extensibility</t>
</list></t>

<t>Although the primary use-case for the payment account(s) information resource returned via Basic PayID protocol is assumed to be for making payments, the PayID protocol is designed to be easily extensible to facilitate creation and retrieval of other resources about the PayID owner, PayID client and/or PayID server that might be required for making payments.</t>

<t><list style="symbols">
  <t>Neutrality: Currency and Network Agnostic</t>
</list></t>

<t>PayID protocol is designed to be a fundamentally neutral protocol. PayID protocol is capable of returning a PayID owner's payment account(s) information for any network that they (or their service) support. This makes PayID protocol a network and currency agnostic protocol, capable of enabling payments in BTC, XRP, ERC-20 tokens, Lightning, ILP, or even fiat networks like ACH.</t>

<t><list style="symbols">
  <t>Decentralized &amp; Peer-to-Peer</t>
</list></t>

<t>Just like email servers, anyone can run their own PayID server or use third-party hosted services. If self-hosted, PayID protocol introduces no new counterparty risk or changes to a service’s security or privacy model. PayID protocol doesn’t require new, complex, and potentially unreliable peer discovery protocols, instead establishing direct peer-to-peer connections between communicating parties from the start.
   PayID is built on the most successful decentralized network: the web. There is no designated centralized authority, or a risk of a patchwork of different standards in different jurisdictions that make a global solution impossibly complex.</t>

<t><list style="symbols">
  <t>Service Sovereignty</t>
</list></t>

<t>Each service provider that uses PayID for their users maintains full control of its PayID URL space, PayID service and has the ability to incorporate any policy they choose, including privacy, authentication, and security.  They also have full sovereignty over users on their domain, just like in email. PayID is highly generalized and does not prescribe any particular solution outside of the standardized communication, which makes it compatible with existing compliance and user management tools and philosophies.</t>

</section>
</section>
<section anchor="payid-server-discovery" title="PayID Server Discovery">
<t>To support PayID protocol, the PayID client needs to discover the PayID URL corresponding to the PayID URI <xref target="PAYID-URI"></xref>. This can be obtained either using mechanisms described in <xref target="PAYID-DISCOVERY"></xref> or could be entered manually.</t>

</section>
<section anchor="json-format-design" title="JSON Format Design">
<t>JSON as described in [RFC8259][], defines a test format for serializing structured data. Objects are serialized as an unordered collection of name/value pairs. JSON does not define any semantics around the name/value pairs that make up an object. PayID protocol's JSON format defines name/value pairs that annotate a JSON object, property or array for PayID protocol resources.</t>

<t>The PayID client MUST request PayID response in JSON format through the <spanx style="verb">Accept</spanx> header with the media type as defined below, optionally followed by format parameters. One of the optional parameters is the case insensitive <spanx style="verb">q</spanx> value as described in Section 5.3.1 of <xref target="RFC7231"></xref>.</t>

<t>Each message body is represented as a single JSON object. This object contains name/value pair whose value is the correct representation for a primitive value as described in [RFC8259][], or an array or object as described in section below.</t>

<t>If the PayID server does not support JSON format, it MUST reply with an appropriate error response.</t>

<section anchor="http-method" title="HTTP Method">
<t>The PayID protocol payment account(s) information resource is requested using the HTTP GET method.</t>

<t>Following are the media types to request the payment account(s) information resource on different payment-networks and environments.</t>

</section>
<section anchor="media-type-of-payment-accounts-information-resource" title="Media Type of Payment Account(s) Information Resource">
<t>The media type for payment account information resource is <spanx style="verb">application/* + json</spanx>.</t>

</section>
<section anchor="response-for-application-json" title="Response for application/* + json">
<t>The response body for <spanx style="verb">application/* + json</spanx> is a JSON object with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  {  
   optional string payId,
   required Address[] addresses, 
   optional string memo,
   optional string identity,
   optional ProofOfControlSignature proofOfControlSignature
  }
]]></artwork></figure>

<section anchor="payid" title="payId">
<t>The value of <spanx style="verb">payId</spanx> field is the PayID URI in the client request that identifies the payment account information that the JSON object describes.</t>

<t>The <spanx style="verb">payId</spanx> field is an optional field in the response.</t>

</section>
<section anchor="addresses" title="addresses">
<t>The value of <spanx style="verb">addresses</spanx> field is a JSON array of type <spanx style="verb">Address</spanx> of one or more JSON objects with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  { 
   required string paymentNetwork,
   optional string environment, 
   required string addressDetailsType,
   required addressDetailsType addressDetails
  }
]]></artwork></figure>

<t><list style="symbols">
  <t>paymentNetwork: The value of payment-network as specified in the client request's <spanx style="verb">Accept</spanx> header</t>
  <t>environment: The value of environment as specified in the client request's <spanx style="verb">Accept</spanx> header</t>
  <t>addressDetailsType: The value of <spanx style="verb">addressDetailsType</spanx> is JSON object of one of the following types.
  <list style="symbols">
      <t>CryptoAddressDetails</t>
      <t>ACHAddressDetails</t>
    </list></t>
  <t>addressDetails: The value of <spanx style="verb">addressDetails</spanx> is the address information necessary to send payment on a specific payment-netowrk and environment.</t>
</list></t>

<t>The <spanx style="verb">addresses</spanx> field MUST be present in the response.</t>

<section anchor="addressdetailstype" title="addressDetailsType">
<t>We define the following two types of payment address types.</t>

<t><list style="symbols">
  <t>CryptoAddressDetails: This is a JSON object with the following name/value pairs.  <vspace blankLines='1'/>
{
  required string address,
  optional string tag
}  <list style="symbols">
      <t>address: The value of <spanx style="verb">address</spanx> field contains the on-ledger address corresponding.</t>
      <t>tag: The value of <spanx style="verb">tag</spanx> field is the tag value used by some cryptocurrencies to distinguish accounts contained within a singular address. E.g XRP's destination tag.</t>
    </list></t>
  <t>ACHAddressDetails: This is a JSON object with the following name/value pairs.  <vspace blankLines='1'/>
{
  required string accountNumber,
  required string routingNumber
}  <list style="symbols">
      <t>accountNumber: The value of <spanx style="verb">accountNumber</spanx> is the ACH account number.</t>
      <t>routingNumber: The value of <spanx style="verb">routingNumber</spanx> is the ACH routing number.</t>
    </list></t>
</list></t>

</section>
</section>
<section anchor="memo" title="memo">
<t>The <spanx style="verb">memo</spanx> string may specify additional metadata corresponding to a payment.</t>

<t>The <spanx style="verb">memo</spanx> string is an OPTIONAL field in the response.</t>

</section>
<section anchor="identity" title="identity">
<t>The <spanx style="verb">identity</spanx> string may specify any additional identity information about the PayID owner or PayID server.</t>

<t>The <spanx style="verb">identity</spanx> string is an OPTIONAL field in the response.</t>

</section>
<section anchor="proofofcontrolsignature" title="proofOfControlSignature">
<t>The value of <spanx style="verb">proofOfControlSignature</spanx> field is a JSON object of type <spanx style="verb">ProofOfControlSignature</spanx> with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  {
   required string publicKey,
   required string payID, 
   required string hashAlgorithm,
   required string signature
  }
]]></artwork></figure>

<t><list style="symbols">
  <t>publicKey: On-ledger public key of the Receiving Endpoint</t>
  <t>payID: PayID URI of the PayID owner</t>
  <t>hashAlgorithm: Hash algorithms used to hash the entire contents of the <spanx style="verb">ProofOfControlSignature</spanx> message.</t>
  <t>signature: Digital signature over the hash of the entire contents of the <spanx style="verb">ProofOfControlSignature</spanx> message using the private key corresponding to the public key in <spanx style="verb">publicKey</spanx>. This is a proof that the Receiving Endpoint is the owner of the on-ledger public key in <spanx style="verb">publicKey</spanx>.</t>
</list></t>

<t>The <spanx style="verb">proofOfControlSignature</spanx> is an OPTIONAL field in the response.</t>

</section>
</section>
<section anchor="meaning-of-media-type-application-json" title="Meaning of Media Type application/* + json">
<t><spanx style="verb">*</spanx> may represent different payment-networks and environments. In this document, we propose standards with the media types specific to XRP, ILP, and ACH payment networks. We also propose media type that returns all addresses across all payment networks. Other payment networks MUST establish standard media types for their networks at IANA.</t>

<t><list style="symbols">
  <t>Accept: application/payid-json
  Returns all payment account(s) information correspnding to the requested PayID URI</t>
  <t>Accept: application/xrpl-mainnet+json</t>
</list></t>

<t>Returns XRPL mainnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/xrpl-testnet+json</t>
</list></t>

<t>Returns XRPL testnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/xrpl-devnet+json</t>
</list></t>

<t>Returns XRPL devnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/interledger-testnet+json</t>
</list></t>

<t>Returns mainnet payment pointer to initiate SPSP request</t>

<t><list style="symbols">
  <t>Accept: application/interledger-devnet+json</t>
</list></t>

<t>Returns testnet payment pointer to initiate SPSP request</t>

<t><list style="symbols">
  <t>Accept: application/ach+json</t>
</list></t>

<t>Returns account and routing number</t>

<t>The PayID client MAY specify more than one media types along with the preference parameter. The server MUST respond as described in the Content Negotiation section below.</t>

</section>
</section>
<section anchor="header-fields" title="Header Fields">
<t>PayID protocol defines semantics around the following request and response headers. Additional headers MAY be defined, but have no unique semantics defined in the PayID protocol.</t>

<section anchor="common-headers" title="Common Headers">
<t>The following headers are common between PayID requests and responses.</t>

<section anchor="header-content-type" title="Header Content-Type">
<t>PayID requests and responses with a JSON message body MUST have a <spanx style="verb">Content-Type</spanx> header value of <spanx style="verb">application-json</spanx>.</t>

</section>
<section anchor="header-content-length" title="Header Content-Length">
<t>As defined in [RFC7230][], a request or response SHOULD include a <spanx style="verb">Content-Length</spanx> header when the message's length can be determined prior to being transferred. PayID protocol does not add any additional requirements over HTTP for writing Content-Length.</t>

</section>
<section anchor="header-payid-version-todo" title="Header PayID-version (TODO)">
<t>The PayID client MUST include the PayID version request header field to specify the version of the PayID protocol used to generate the request.</t>

<t>If present on a request, the PayID server MUST interpret the request according to the rules defined in the specified version of the PayID protocol or fail the request with an appropriate error response code.</t>

<t>If not specified in a request, the PayID server MUST fail the request with an appropriate error code.</t>

</section>
</section>
<section anchor="request-headers" title="Request Headers">
<t>In addition to common Headers, the PayID client MUST specify the following request header.</t>

<section anchor="header-accept" title="Header Accept">
<t>The PayID client MUST specify the <spanx style="verb">Accept</spanx> request header field with at least one of the registered media types (Section X). The purpose of this header is to indicate what type of content can be understood in the response. It specifies the <spanx style="verb">payment-network</spanx> and <spanx style="verb">environment</spanx> of the payment account and its representation format for which the PayID client wants to receive information. The representation format is always JSON.</t>

<t>PayID server MUST reject formats that specify unknown or unsupported format parameters.</t>

</section>
</section>
<section anchor="response-headers" title="Response Headers">
<t>In addition to the Common Headers, the PayID server MUST specify the following response header.</t>

<section anchor="header-cache-control" title="Header Cache-Control">
<t>PayID server MUST include the <spanx style="verb">Cache-Control</spanx> header with the max-age limit of 0. The intermediate hops or PayID client MUST not cache the responses.</t>

</section>
</section>
</section>
<section anchor="basic-payid-protocol" title="Basic PayID Protocol">
<t>Basic PayID protocol is used to request payment account(s) information resource identified by a PayID URI from a PayID-enabled service provider identified by a PayID URL using HTTP over secure transport. When successful, PayID protocol always returns the JSON representation of payment account(s) information resource along with optional metadata. This information can be used for any purposes outside the scope of this document.</t>

<t>Basic PayID protocol comprise of request and response messages, each of which is defined in more detail below. The following is a visual representation of the basic protocol flow:</t>

<figure><artwork><![CDATA[
PayID client                                         PayID server
   |                                                          |
   |              1.) GET request to PayID URL                |
   |--------------------------------------------------------->|
   |                                                          | |                                                          |
   |              2.) 200 Ok                                  |
   |                  Payment account information response    |
   |<---------------------------------------------------------|
   |                                                          |
   |                                                          | 
]]></artwork></figure>

<section anchor="step-1-http-request-to-payid-url-using-http-get-method" title="Step 1: HTTP Request to PayID URL using HTTP GET Method">
<t>A basic PayID client issues a query using the HTTP GET method to the PayID URL without any query parameters and body.</t>

<t>The PayID client MUST query the PayID server using HTTPS only. <xref target="RFC2818"></xref> defines how HTTPS verifies the PayID server's identity. If the HTTPS connection cannot be established for any reason, then the PayID client MUST accept that the PayID request has failed and MUST NOT attempt to reissue the PayID request using HTTP over a non-secure connection.</t>

</section>
<section anchor="step-2-payment-account-information-response" title="Step 2: Payment Account Information Response">
<t>In response, the PayID server returns a JSON object representation of the payment account(s) information resource for the payment-network and environment requested by PayID client in the request <spanx style="verb">Accept</spanx> header field along with other required and/or optional meta data.</t>

<t>PayID servers MUST be able to process <spanx style="verb">application/payid+json</spanx> header type.</t>

<t>If the PayID server does not contain the payment account information corresponding to the request, the PayID server MUST respond with an appropriate error message.</t>

<t>A PayID server MAY redirect the PayID client; if it does, the redirection MUST only be to an <spanx style="verb">https</spanx> URI and the PayID client MUST perform certificate validation again when redirected.</t>

</section>
<section anchor="step-3-parse-payment-account-information-response" title="Step 3: Parse Payment Account Information Response">
<t>If the PayID server returns a valid response, the response will contain one or more of fields defined above.</t>

</section>
</section>
<section anchor="example-use-of-basic-payid-protocol" title="Example Use of Basic PayID Protocol">
<t>This section shows sample use of Basic PayID protocol in several
   hypothetical scenarios.</t>

<section anchor="basic-payid-protocol-by-a-wallet" title="Basic PayID Protocol by a Wallet">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet provider that Alice has an account on. Alice would log-in to the wallet provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the wallet UI to start the payment. 
   The Wallet application would first discover the PayID URL for the PayID service-provider using one of the mechanisms described in PayID discovery <xref target="PAYID-DISCOVERY"></xref> protocol.</t>

<t>The Wallet application would then issue an HTTPS GET request:</t>

<figure><artwork><![CDATA[
 GET /users/bob HTTP/1.1
 Host: www.receiver.example.com
 Accept: application/payid+json
 PayID-version: 0.1
]]></artwork></figure>

<t>The PayID server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Content-Type: application/json
 Content-Length: 403
 PayID-version: 0.1
 Cache-Control: max-age=0
 Server: Apache/1.3.11
 {
   "payId" : "bob$receiver.example.com",
   "addresses" :
   [
     {  
       "paymentNetwork" : "xrpl",
       "environment" : "testnet",
       "addressDetailsType" : "CryptoAddressDetails",
       "addressDetails" : {
                    "address" : "XTVQWr6BhgBLW2jbFyqqufgq8T9eN7KresB684ZSHKQ3oDth"
            }
      },
     {
       "paymentNetwork" : "ach",
       "environment" : "mainnet",
       "addressDetailsType" : "ACHAddressDetails",
       "addressDetails" : {
                    "accountNumber" : "5674536253",
                    "routingNumber" : "aYJTDFGLKAJD"
            }
      }
    ],
    "memo" : "Additional optional Information"
 }
]]></artwork></figure>

<t>In the above example we see that the PayID server returned a list of payment accounts identified by PayID <spanx style="verb">bob$receiver.example.com</spanx>. This is because Alice's Wallet asked for all the payment accounts corresponding to the PayID in the <spanx style="verb">Accept</spanx> header. 
  Alice's Wallet MAY then use the payment account information to make payments.</t>

<t>Another example:</t>

<figure><artwork><![CDATA[
 GET /users/bob HTTP/1.1
 Host: www.receiver.example.com
 Accept: application/xrpl-testnet+json; q=0.4,
         application/ach+json; q=0.1
 PayID-version= 0.1
]]></artwork></figure>

<t>The PayID server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Content-Type: application/json
 Content-Length: 403
 PayID-version: 0.1
 Cache-Control: max-age=0
 Server: Apache/1.3.11
 {
   "payId" : "bob$receiver.example.com",
   "addresses" :
   [
     {  
       "paymentNetwork" : "xrpl",
       "environment" : "testnet",
       "addressDetailsType" : "CryptoAddressDetails",
       "addressDetails" : {
                    "address" : "XTVQWr6BhgBLW2jbFyqqufgq8T9eN7KresB684ZSHKQ3oDth"
            }
      }
    ]
 }
]]></artwork></figure>

</section>
</section>
<section anchor="common-response-status-codes-todo" title="Common Response Status Codes (TODO)">
<t>A PayID server MAY respond to request using any valid HTTP response code appropriate for the request. The PayID server SHOULD be as specific as possible in its choice of an HTTP specific status code.</t>

<section anchor="success-responses" title="Success Responses">
<t>The following response codes represent successful requests.</t>

<section anchor="response-code-200-ok" title="Response Code 200 OK">
<t>A request that does not create a resource returns 200 OK if it is completed successfully and the value of the resource is not null. null. In this case, the response body MUST contain the value of the resource specified in the request URL.</t>

</section>
<section anchor="response-code-3xx-redirection" title="Response Code 3xx Redirection">
<t>As per <xref target="RFC7231"></xref>, a 3xx Redirection indicates that further action needs to be taken by the client in order to fulfill the request. In this case, the response SHOULD include a Location header, as appropriate, with the URL from which the result can be obtained; it MAY include a Retry-After header.</t>

</section>
</section>
<section anchor="client-error-responses" title="Client Error Responses">
<t>Error codes in the 4xx range indicate a client error, such as a malformed request. 
  In the case that a response body is defined for the error code, the body of the error is as defined for the appropriate format.</t>

</section>
</section>
<section anchor="content-negotiation" title="Content Negotiation">

<t>The PayID client MAY choose to query for all possible payment addresses corresponding to a PayID URI</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/all+json                 
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with all payment account(s) information associated with the queried PayID.</t>

<t>Alternatively, the PayID client MAY choose to query for a subset payment account(s) information in the order of preference.</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/xrpl-testnet+json; q=0.4,
         application/xrpl-mainnet+json; q= 0.1
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with the payment account(s) information corresponding to one of the payment-network and environment mentioned in the <spanx style="verb">Accept</spanx> header in the order of client request preference. If none of those exist, PayID server MUST send an appropriate error response.</t>

<t>Alternatively, the PayID client MAY combine the above two approaches.</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/xrpl-testnet+json; q=0.4,
         application/xrpl-mainnet+json; q= 0.1,
         application/payid+json
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with the payment account information corresponding to one of the payment-network and environment mentioned in the <spanx style="verb">Accept</spanx> header in the order of PayID client's preference. If none of those exist, then the PayID server MUST respond with payment account(s) information corresponding to all payment accounts associated with the queried PayID URI.</t>

</section>
<section anchor="versioningtodo" title="Versioning(TODO)">

<t>Versioning enables clients and servers to evolve independently. PayID protocol defines semantics for protocol versioning.</t>

<t>PayID requests and responses are versioned according to the PayID-version header.
 PayID clients include the PayID-version header in order to specify the maximum acceptable response version. PayID servers respond with the maximum supported version that is less than or equal to the requested <spanx style="verb">major</spanx></t>

</section>
<section anchor="security-considerations" title="Security Considerations">
<t>This security considerations section only considers PayID clients and servers bound to implementations as defined in this document. Such implementations have the following characteristics:</t>

<t><list style="symbols">
  <t>PayID URIs are static and well-known to the PayID client; PayID server URLs can be static or discovered.</t>
</list></t>

<t>The following is considered out-of-scope:</t>

<t><list style="symbols">
  <t>Communication between the PayID owner and the wallet or exchange (which acts as PayID server) for PayID URI registration, etc.</t>
  <t>Communication between the sender of the transaction and PayID client to transfer information such as PayID URI and other transaction details, etc.</t>
  <t>PayID server URL discovery by PayID client. Implementations using PayID-Discovery <xref target="PAYID-DISCOVERY"></xref> MUST consider the security considerations in the corresponding document.</t>
  <t>PayID server URL resolution by PayID client. Implementations using DNS, DNSSEC, DoH, DoT, etc. MUST consider the security considerations of the corresponding documents.</t>
</list></t>

<section anchor="network-attacks" title="Network Attacks">
<t>Basic PayID protocol's security model assumes the following network attackers:</t>

<t><list style="symbols">
  <t>Off-path attacker: An off-path attacker can be anywhere on the network. She can inject and spoof packets but can not observe, or tamper with the legitimate traffic between the PayID client and the server.</t>
  <t>On-path attacker: An on-path attacker can eavesdrop, inject, spoof and replay packets, but can not drop, delay or tamper with the legitimate traffic.</t>
  <t>In-path or Man-in-the-middle (MiTM) attacker: An MiTM is the most powerful network attacker. An MiTM has full access to the communication path between the PayID client and the server. She can observe, modify, delay and drop network packets.</t>
</list></t>

<t>Additionally we assume that the attacker has enough resources to mount an attack but can not break the security guarantees provided by the cryptographic primitives of the underlying secure transport.</t>

<t>The basic PayID protocol runs over HTTPS and thus relies on the security of the underlying transport. Implementations utilizing TLS 1.3 benefit from the TLS security profile defined in [RFC 8446][] against all the above network attackers.</t>

<section anchor="denial-of-service-dos-attacks" title="Denial-of-Service (DoS) attacks">
<t>As such cryptography can not defend against DoS attacks because any attacker can stop/interrupt the PayID protocol by:
  * Dropping network packets, 
  * Exhaustion of resources either at the network level or at PayID client and/or server.</t>

<t>The PayID servers are recommended to follow general best network configuration practices to defend against such attacks <xref target="RFC4732"></xref>.</t>

</section>
</section>
<section anchor="information-integrity" title="Information Integrity">
<t>The HTTPS connection provides transport security for the interaction between PayID client and server but does not provide the response integrity of the data provided by PayID server. A PayID client has no way of knowing if data provided in the payment account information resource has been manipulated at the PayID server, either due to malicious behaviour on the part of PayID server administrator or as a result of being compromised by an attacker. As with any information service available on the Internet, PayID clients should be wary of the information received from untrusted sources.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">
<t>The PayID client and server should be aware that placing information on the Internet means that any one can access that information. While PayID protocol is an extremely useful tool to discovering payment account(s) information corresponding to a human-rememberable PayID URI, PayID owners should also understand the associated privacy risks. The easy access to payment account information via PayID protocol was a design goal of the protocol, not a limitation.</t>

<section anchor="access-control" title="Access Control">
<t>PayID protocol MUST not be used to provide payment account(s) information corresponding to a PayID URI unless providing that data via PayID protocol by the relevant PayID server was explicitly authorized by the PayID owner. If PayID owner wishes to limit access to information, PayID servers MAY provide an interface by which PayID owners can select which information is exposed through the PayID server interface. For example, PayID servers MAY allow PayID owners to mark certain data as <spanx style="verb">public</spanx> and then utilize that marking as a means of determining what information to expose via PayID protocol. The PayID servers MAY also allow PayID owners to provide a whitelist of users who are authorized to access the specific information. In such a case, the PayID server MUST authenticate the PayID client.</t>

</section>
<section anchor="payment-address-rotation" title="Payment Address Rotation">
<t>The power of PayID protocol comes from providing a single place where others can find payment account(s) information correspondong to a PayID URI, but PayID owners should be aware of how easily payment account information that one might publish can be used in unintended ways. As one example, one might query a PayID server only to see if a given PayID URI is valid and if so, get the list of associated payment account information. If the PayID server uses the same payment address each time, it becomes easy for third-party to track one's entire payment history. The PayID server SHOULD follow the best practice of payment address rotation for every query to mitigate this privacy concern.</t>

</section>
<section anchor="on-the-wire" title="On the Wire">
<t>PayID protocol over HTTPS encrypts the traffic and requires mutual authentication of the PayID client and the PayID server. This mitigates both passive surveillance <xref target="RFC7258"></xref> and the active attacks that attempt to divert PayID protocol queries to rogue servers.</t>

<t>Additionally, the use of the HTTPS default port 443 and the ability
  to mix PayID protocol traffic with other HTTPS traffic on the same connection can deter unprivileged on-path devices from interfering with PayID operations and make PayID traffic analysis more difficult.</t>

</section>
<section anchor="in-the-payid-server" title="In the PayID Server">
<t>The Basic PayID protocol data contains no information about the PayID client; however, various transports of PayID queries and responses do provide data that can be used to correlate requests. A Basic PayID protocol implementation is built on IP, TCP, TLS and HTTP. Each layer contains one or more common features that can be used to correlate queries to the same identity.</t>

<t>At the IP level, the PayID client address provides obvious correlation information. This can be mitigated by usee of NAT, proxy, VPN, or simple address rotation over time. It may be aggravated  by use of a PayID server that can correlate real-time addressing information with other identifiers, such as when PayID server and other services are operated by the same entity.</t>

<t>PayID client implementations that use one TCP connection for multiple PayID requests directly group those requests. Long-lived connections have better performance behaviours than short-lived connections; however they group more requests, which can expose more information to correlation and consolidation. TCP-based solutions may also seek performance through the use of TCP Fast Open [RFC7413][]. The cookies used in TCP Fast open may allow PayID servers to correlate TLS connections together.</t>

<t>TCP-based implementations often achieve better handshake performance throught the use of some form of session resumption mechanism, such as Section 2.2 of <xref target="RFC8446"></xref>. Session resumption creates trivial mechanism for a server to correlate TLS connections together.</t>

<t>HTTP's feature set can also be used for identification and tracking in a number of ways. For example, Authentication request header fields explicitly identify profiles in use, and HTTP cookies are designed as an explicit state-tracking mechanism and are often used as an authentication mechanism.</t>

<t>Additionally, the <spanx style="verb">User-Agent</spanx> and <spanx style="verb">Accept-Language</spanx> request header fields often convey specific information about the PayID client version or locale. This allows for content-negotiation and operational work-arounds for implementation bugs. Request header fields that control caching can expose state information about a subset of the client's history. Mixing PayID queries with other HTTP requests on the same connection also provides an opportunity for richer data correlation.</t>

<t>The PayID protocol design allows implementations to fully leverage the HTTP ecosystem, including features that are not enumerated in this document. Utilizing the full set of HTTP featurees enables PayID to be more than HTTP tunnel, but it is at the cost of opening up implementations to the full set of privacy considerations of HTTP.</t>

<t>Implementations of PayID clients and servers need to consider the benefits and privacy impacts of these fetaures, and their deployment context, when deciding whether or not to enable them. Implementations are advised to expose the minimal set of data needed to achieve the desired feature set.</t>

<t>Determining whether or not PayID client implementation requires HTTP cookie [RFC6265][] support is particularly important because HTTP cookies are the primary state tracking mechanism in HTTP, HTTP cookies SHOULD NOT be accepted by PayID clients unless they are explicitly required by a use case.</t>

<t>Overall, the PayID protocol does not introduce privacy concerns beyond those associated with using the underlying IP, TCP, TLS and HTTP layers.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">
<t>This document defines registries for PayID protocol version and application/* +json media types.</t>

<section anchor="header-field-registration" title="Header Field Registration">
<t>Header field name: PayID-version: major.minor</t>

<t>Applicable Protocol: "PayID protocol"</t>

<t>Status: <spanx style="verb">standard</spanx></t>

<t>Author/Change controller: Refer to the contact details of the authors in this document.</t>

<t>Specification Document: <spanx style="verb">PayID protocol</spanx></t>

</section>
<section anchor="media-type-registration" title="Media Type Registration">
<t>This document registers multiple media types, listed in Table 1.</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Subtype</ttcol>
      <ttcol align='left'>Specification</ttcol>
      <c>application</c>
      <c>xrpl-mainnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>xrpl-testnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>xrpl-devnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>ach+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>interledger-mainnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>interledger-testnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>payid+json</c>
      <c>&#160;</c>
</texttable>

<t>Type Name: application</t>

<t>Subtype name: This document registers multiple subtypes as listed in table 1</t>

<t>Required parameters: n/a</t>

<t>Optional parameters: n/a</t>

<t>Encoding considerations:  Encoding considerations are identical to those specified for the "application/json" media type. See[RFC7159][].</t>

<t>Security considerations: Security considerations relating to the generation and consumption of PayID protocol messages are discussed in Section X.</t>

<t>Interoperability considerations:  This document specifies format of conforming messages and the interpretation thereof.</t>

<t>Published specification: This document is the specification for these media types; see Table 1 for the section documenting each media type.</t>

<t>Applications that use this media type:  PayID servers and PayID clients.</t>

<t>Additional information:</t>

<t>Magic number(s):  n/a</t>

<t>File extension(s):  This document uses the mime type to refer to protocol messages and thus does not require a file extension.</t>

<t>Macintosh file type code(s):  n/a</t>

<t>Person &amp; email address to contact for further information:  See Authors' Addresses section.</t>

<t>Intended usage:  COMMON</t>

<t>Restrictions on usage:  n/a</t>

<t>Author:  See Authors' Addresses section.</t>

<t>Change controller:  Internet Engineering Task Force (mailto:iesg@ietf.org).</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2818;
&RFC8446;
&RFC7258;
&RFC7231;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-DISCOVERY" >
  <front>
    <title>PayID Discovery</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC4732;


    </references>



  </back>

<!-- ##markdown-source:
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
AA==

-->

</rfc>

