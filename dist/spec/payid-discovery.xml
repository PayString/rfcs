<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4627 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4627.xml">
<!ENTITY RFC6570 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6570.xml">
<!ENTITY RFC7033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7033.xml">
<!ENTITY RFC7230 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7230.xml">
<!ENTITY RFC5988 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5988.xml">
<!ENTITY RFC6415 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6415.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-fuelling-payid-discovery-01" category="std">

  <front>
    <title>PayID Discovery</title>

    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
      </address>
    </author>

    <date year="2020" month="June" day="23"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID Discovery protocol, which can be used
   to discover information about a 'payid' URI using standard HTTP methods.</t>

<t>The primary use-case of this protocol is to define how to transform a 
   PayID URI into a URL that can be used with other protocols.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a draft proposal, and is part of the 
  <eref target="https://payid.org/">PayID Protocol</eref> initiative. Feedback related to this 
  document should be sent in the form of a Github issue at: 
  https://github.com/payid-org/rfcs/issues.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">
<t>PayID Discovery is used to transform a PayID URI <xref target="PAYID-URI"></xref> into a
   URL (defined below as a PayID Discovery URL) that can then be used by 
   higher-order protocols to discover metadata about a PayID-enabled service
   provider.</t>

<t>This document specifies two modes of PayID discovery: one using
   Webfinger <xref target="RFC7033"></xref> to resolve a corresponding PayID Discovery URL
   from a PayID using an interactive protocol. The second mode uses a manual 
   mechanism to assemble a PayID Discovery URL from a PayID by-hand.</t>

<t>In 'interactive' mode, a PayID can be presented to a Webfinger-enabled 
   service endpoint that supports PayID Discovery. The resource returns a
   Webfinger-compliant JavaScript Object Notation (JSON) <xref target="RFC4627"></xref> object 
   that can be used to perform PayID Discovery as defined in section 4.1 of
   this document.</t>

<t>As an alternative, "manual" mode MAY be used to decompose a PayID into a
   URL, without any intermediate server interaction by simply transposing
   portions of a PayID URI into a URL format. This procedure is defined in
   section 4.2 of this document.</t>

<t>It should be noted that "manual" mode does not allow divergence between the
   string characters in a PayID URI and any corresponding PayID URL. 
   Interactive mode, on the other hand, does allow such divergence, and is 
   thus more powerful. For example, in manual mode, the PayID
   'alice$example.com' MUST always map to the URL 
   'https://example.com/alice', whereas in interactive mode that same
   PayID URI can map to any arbitrary URL structure determined by the
   service provider, such as 'https://example.com/users/alice'.</t>

<t>Information returned via PayID Discovery might be used for direct human
   consumption (e.g., looking up someone's Bitcoin address), or it might be
   used by systems to help carry out some operation (e.g., facilitating,
   with additional security mechanisms, protocols to support compliance or 
   other legal requirements necessary to facilitate a payment).</t>

<t>The information returned via this protocol is intended to be static
   in nature. As such, PayID Discovery is not intended to be used to return
   dynamic information like a payment account balance or the current
   status of a payment account.</t>

<t>PayID Discovery is designed to be used across many applications. Use of 
   PayID Discovery is illustrated in the examples in Section 3 and
   described more formally in Section 4.</t>

</section>
<section anchor="terminology" title="Terminology">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   <xref target="RFC2119"></xref>.</t>

</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows sample uses of PayID Discovery in several
   hypothetical scenarios.</t>

<section anchor="payid-discovery-by-a-wallet" title="PayID Discovery by a Wallet">
<t>Imagine Alice wishes to send a friend some XRP from a web-based wallet
   provider that Alice has an account on. Alice would log-in to the wallet
   provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the
   wallet UI to start the payment.</t>

<t>The Wallet application would first perform a WebFinger query looking for 
   the PayID Discovery service provider, like this:</t>

<figure><artwork><![CDATA[
 GET /.well-known/webfinger?
       resource=payid%3Abob%24receiver.example.com
       HTTP/1.1
 Host: receiver.example.com
]]></artwork></figure>

<t>The server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json

 {
   "subject" : "payid:bob$receiver.example.com",
   "links" :
   [
     {  
       "rel": "https://payid.org/ns/payid-uri-template/1.0",
       "template": "https://receiver.example.com/users/{acctpart}"
     }
   ]
 }
]]></artwork></figure>

<t>Alice's wallet then uses the URL template found in the <spanx style="verb">template</spanx> property
   to assemble the specified PayId URL, 
   <spanx style="verb">https://receiver.example.com/users/bob</spanx>.</t>

<t>Per <xref target="RFC7033"></xref>, Webfinger requests can be filtered by using a "rel" 
   parameter in the Webfinger request. Because support for the "rel" parameter
   is not required nor guaranteed, the client must not assume the "links" 
   array will contain only the link relations related to PayID Discovery.</t>

</section>
<section anchor="payid-discovery-with-default-template" title="PayID Discovery with Default Template">
<t>Imagine Alice, as in the example above, wants to send a friend some XRP
  from a web-based wallet provider that Alice has an account on. However, in 
  this example, let's assume that the PayID Alice is wanting to pay doesn't 
  support "interactive" PayID discovery (i.e., the receiver's server doesn't 
  support Webfinger).</t>

<t>Alice would log-in to her wallet provider and enter Bob's PayID (say
  <spanx style="verb">bob$receiver.example.com</spanx>) to make a payment.</t>

<t>The Wallet application would first attempt a WebFinger query as in the 
  example above, like this:</t>

<figure><artwork><![CDATA[
  GET /.well-known/webfinger?
        resource=payid%3Abob%24receiver.example.com&
        HTTP/1.1
  Host: receiver.example.com
]]></artwork></figure>

<t>However, in this case the <spanx style="verb">receiver.example.com</spanx> server doesn't support 
  "interactive" PayID Discovery, so the server responds like this:</t>

<figure><artwork><![CDATA[
  HTTP/1.1 404 NOT FOUND
]]></artwork></figure>

<t>Because Alice's Wallet can utilize "manual" PayID Discovery, the wallet
  software merely transforms <spanx style="verb">bob$receiever.example.com</spanx> into the URL 
  <spanx style="verb">https://receiver.example.com/bob</spanx>. Alice's wallet then uses that URL to 
  continue making a PayID payment.</t>

<t>It should be noted that "manual" mode does not allow the PayID URI to
  diverge from the underlying URL returned via PayID Discovery. Because of
  this, "interactive" PayID Discovery is generally preferred.</t>

</section>
</section>
<section anchor="payid-discovery-protocol" title="PayID Discovery Protocol">
<t>The PayID Discovery protocol is used to request information about an entity
  identified by a PayID URI.</t>

<t>When successful, PayID Discovery always yields a PayID URL, which is a
  URI as defined by <xref target="RFC3986"></xref> using the 'https' scheme defined in section
  2.7.2 <xref target="RFC7230"></xref>. A PayID URL can be used for any purposes outside the
  scope of this document.</t>

<t>PayID Discovery is performed using one of two modes: "interactive" or
  "manual." Clients MUST attempt "interactive" mode first. If that
  mode fails to yield a PayID URL, then "manual" mode MAY be used as an
  alternative discovery mechanism.</t>

<section anchor="interactive-mode" title="Interactive Mode">
<t>Interactive PayID Discovery is broken up into a series of steps, each of
  which is defined in more detail below. The following is a visual
  representation of the protocol flow:</t>

<figure><artwork><![CDATA[
                    +--------------------------+                    
                    |        PayID URI         |                    
                    |    alice$example.com     |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |         Assemble         |                    
                    |   PayID Discovery URL    |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |          Query           |                    
              +-----|   PayID Discovery URL    |-----+              
              |     +--------------------------+     |              
              |                                  Success            
              |                                      |              
              |                                      v              
              |                        +---------------------------+
          Failure                      |   Parse PayID Metadata    |
              |                        +---------------------------+
              |                                      |              
              |                                      v              
              |                        +---------------------------+
              |                        | Select PayID URI Template |
              |                        +---------------------------+
              |                                      |              
              v                                      v              
+--------------------------+           +---------------------------+
|  Manual PayID Discovery  |           |    Assemble PayID URL     |
+--------------------------+           +---------------------------+
              |                                      |              
              +---------------------+----------------+              
                                    |                               
                                    v                               
                      +---------------------------+                 
                      |         PayID URL         |                 
                      | https://example.com/alice |                 
                      +---------------------------+                 
]]></artwork></figure>

<section anchor="step-1-assemble-payid-discovery-url" title="Step 1: Assemble PayID Discovery URL">
<t>PayID Discovery utilizes the Webfinger <xref target="RFC7033"></xref> specification in a 
  narrowly defined profile.</t>

<t>This document defines a PayID Discovery URL as being a Webfinger 
  resource URI where the specified resource value is a valid PayID 
  URI <xref target="PAYID-URI"></xref>.</t>

<t>For example, the PayID Discovery URL for alice$example.com is</t>

<figure><artwork><![CDATA[
 https://example.com/.well-known/webfinger?
   resource=payid%3Aalice%24example.com
]]></artwork></figure>

</section>
<section anchor="step-2-query-payid-discovery-url" title="Step 2: Query PayID Discovery URL">
<t>A Webfinger query MUST be performed against the PayID Disovery URL,
  as described in section 4.2 of Webfinger.</t>

<t>In response, the WebFinger resource returns a JSON Resource Descriptor (JRD)
  as the resource representation to convey information about the requested 
  PayID.</t>

<t>If the Webfinger endpoint returns a non-200 HTTP response status code, then
  interactive PayID Discovery is considered to have failed. Clients MAY 
  attempt to assemble a PayID URL using "manual" mode as defined in section
  4.2.1 of this document.</t>

</section>
<section anchor="step-3-parse-payid-metadata" title="Step 3: Parse PayID Metadata">
<t>If the PayID Discovery server returns a valid response, the response will
  contain one or more of the JRDs defined in section 5 of this document.</t>

<t>If any of the JRDs contain a 'rel' value that represents a PayID URL
  Template, then that template value MUST be used in the next protocol step.</t>

<t>Failing the above, if the 'rel' value of any JRDs represents a PayID
  Discovery URL, then that URL MUST be used in step 2 above, repeated
  recursively if needed, until a valid PayID URI Template is obtained. 
  That URI Template value MUST be used in the next protocol step.</t>

</section>
<section anchor="step-4-assemble-payid-url" title="Step 4: Assemble PayID URL">
<t>A PayID URL is constructed by applying the PayID URI to the PayID URI
   Template string obtained in the step above. The PayID URI template MAY
   contain a URI string without any variables to represent a host-level
   PayID URL that is identical for every PayID URI on a particular host.</t>

<t>For example, a PayID Discovery endpoint that only supports a single account
   might use a URI template string with no variables, like this:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-uri-template/1.0",
  "template": "https://example.com/alice"
}
]]></artwork></figure>

<t>The result of this step is the PayID URL. Once obtained, PayID Discovery
   is considered to have completed successfully.</t>

<section anchor="template-syntax" title="Template Syntax">
<t>This specification defines a simple template syntax for PayID URI
   transformation.  A template is a string containing brace-enclosed
   ("{}") variable names marking the parts of the string that are to be
   substituted by the corresponding variable values.</t>

<t>This specification defines a one variable – "acctpart" – which 
   corresponds to the 'acctpart' of a PayID URI as defined in <xref target="PAYID-URI"></xref>.</t>

<t>When substituting the 'acctpart' value into a URI 'path' as defined by
   <xref target="RFC3986"></xref>, values MUST NOT be percent or otherwise encoded because the
   'acctpart' value of a PayID URI always conforms to the character set
   allowed by paths in <xref target="RFC3986"></xref>.</t>

<t>However, before substituting template variables into a URI 'query' part,
   values MUST be encoded using UTF-8, and any character other than
   unreserved (as defined by <xref target="RFC3986"></xref>) MUST be percent-encoded per <xref target="RFC3986"></xref>.</t>

<t>Protocols MAY define additional variables and syntax rules, but MUST NOT 
   change the meaning of the 'acctpart' variable. If a client is unable to
   successfully process a template (e.g., unknown variable names, unknown or 
   incompatible syntax), the JRD SHOULD be ignored.</t>

<t>The template syntax ABNF is as follows:</t>

<figure><artwork><![CDATA[
uri-char     =  ( reserved / unreserved / pct-encoded )
var-char     =  ALPHA / DIGIT / "." / "_"
var-name     =  %x61.63.63.74.70.61.72.74 / ( 1*var-char ) ; "acctpart" or
                                                              other names
variable     =  "{" var-name "}"
PAYID-URI-Template =  *( uri-char / variable )
]]></artwork></figure>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    alice$example.org
 Template: https://example.org/{acctpart}
 Output:   https://example.org/alice
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="fallback-mode" title="Fallback Mode">
<t>If "Interactive" mode is not supported or otherwise fails to yield a PayID
  URL, then a PayID URL MAY be assembled manually using the following
  predefined ruleset:</t>

<t><list style="numbers">
  <t>Decompose the PayID URI into its component parts, per <xref target="PAYID-URI"></xref>, 
capturing the 'acctpart' and 'host' values.</t>
  <t>Using the 'acctpart' and 'host', assemble a URL by substituting each
   value into the following string using no special encoding or other
   character adjustments: <spanx style="verb">https://{host}/{acctpart}</spanx>.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    bob.primary$example.org
 Output:   https://example.org/bob.primary
]]></artwork></figure>

<t>The resulting URL is a PayID URL.</t>

<section anchor="fallback-assembly-flow" title="Fallback Assembly Flow">
<t>The following is a visual representation of the Fallback Assembly protocol
  flow:</t>

<figure><artwork><![CDATA[
+--------------------------+ 
|        PayID URI         | 
|    alice$example.com     | 
+--------------------------+ 
              |              
              v              
+--------------------------+ 
|Manual PayID URL Assembly | 
+--------------------------+ 
              |              
              v              
+---------------------------+
|         PayID URL         |
| https://example.com/alice |
+---------------------------+
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="payid-discovery-jrds" title="PayID Discovery JRDs">
<t>This document defines two JRDs that conform to section 4.4 of the
  Webfinger RFC.</t>

<section anchor="jrd-for-payid-discovery-url" title="JRD for PayID Discovery URL">
<t>This type of JRD can be used to represent a URL that is a PayID Discovery
  URL. This is useful for delegating PayID Discovery to another service
  endpoint:</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">https://payid.org/ns/payid-discovery-url/1.0</spanx></t>
  <t>'href': A PayID Discovery URL that clients can dereference to perform
        interactive PayID Discovery.</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID Discovery URL:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-discovery-url/1.0",
  "href": "https://delegate.example.com/.well-known/webfinger?resource=
           payid%3Aalice%24example.com"
}
]]></artwork></figure>

</section>
<section anchor="jrd-for-payid-uri-template" title="JRD for PayID URI Template">
<t>This type of JRD can be used to represent a URL that is a PayID URL
  Template.</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">https://payid.org/ns/payid-uri-template/1.0</spanx></t>
  <t>'template': A PayID URI Template</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID URI Template:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-uri-template/1.0",
  "template": "https://example.com/{acctpart}"
}                
]]></artwork></figure>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">
<t>Various security considerations should be taken into account for PayID
Discovery.</t>

<t>Among other resource, consult section 9 of <xref target="RFC7033"></xref> and section 7 of
<xref target="RFC3986"></xref> for important security considerations involved in PayID
Discovery.</t>

<section anchor="hosted-payid-discovery-services" title="Hosted PayID Discovery Services">
<t>As with most services provided on the Internet, it is possible for a domain
owner to utilize "hosted" WebFinger services. Consult section 7 of 
<xref target="RFC7033"></xref> for considerations that could apply to both "manual" and
"interactive" PayID Discovery when hosted by a third-party.</t>

</section>
<section anchor="cross-origin-resource-sharing-cors" title="Cross-Origin Resource Sharing (CORS)">
<t>PayID Discovery resources might not be accessible from a web browser due to
"Same-Origin" policies. See section 5 of <xref target="RFC7033"></xref> for CORS considerations
that apply to both "manual" and "interactive" PayID Discovery modes.</t>

</section>
<section anchor="access-control" title="Access Control">
<t>As with all web resources, access to the PayID Discovery resource could
require authentication. See section 6 of <xref target="RFC7033"></xref> for Access Control
considerations that could apply to both "manual" and "interactive" PayID
Discovery modes.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="new-link-relation-types" title="New Link Relation Types">
<t>This document defines the following Link relation types per <xref target="RFC7033"></xref>.
See section 3 for examples of each type of Link.</t>

<section anchor="payid-discovery-url" title="PayID Discovery URL">

<t><list style="symbols">
  <t>Relation Type ('rel'): <spanx style="verb">https://payid.org/ns/payid-discovery-url/1.0</spanx></t>
  <t>Media Type: <spanx style="verb">application/jrd+json</spanx></t>
  <t>Description: PayID Discovery URL, version 1.0</t>
</list></t>

</section>
<section anchor="payid-discovery-uri-template" title="PayID Discovery URI Template">

<t><list style="symbols">
  <t>Relation Type ('rel'): <spanx style="verb">https://payid.org/ns/payid-uri-template/1.0</spanx></t>
  <t>Media Type: <spanx style="verb">application/jrd+json</spanx></t>
  <t>Description: PayID Discovery URI Template, version 1.0</t>
</list></t>

</section>
</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>This document was heavily influenced by, and builds upon, Webfinger
<xref target="RFC7033"></xref> (adapted for a payments use-case) as well as the supporting
RFCs that it relies upon and that influenced it, especially <xref target="RFC5988"></xref> and
<xref target="RFC6415"></xref>. The author would like to acknowledge the contributions of 
everyone who worked on those and any related specifications.</t>

<t>In addition, the author would like to acknowledge everyone who provided
feedback and use-cases for this derivative specification.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC3986;
&RFC4627;
&RFC6570;
&RFC7033;
&RFC7230;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC5988;
&RFC6415;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAPVC8l4AA+08aXPbRpbf8Su66MlKckjIOmwn3JraYqwoUca2PJY8MylX
Km4CTbFjEGDQgBiu4/++7+huNECQlo+tmq1a1kzMo/H63Ve/1mg0ipIi1fnN
WNTVbPRNFFW6ytRYvJDrizNxpk1S3KpyHaVFkssF/JCWclaNZrXKMnhstJRr
nY5St2704ChKZKVuinI9FqZKo2ipx+J1VSRDYYqyKtXMwLv1gt8kxWKh8sr8
EpmFLKtff6+LSpmxKGazSESyVBKgqKQudbWOZF3Ni3IcCX7BvyN6r3N44iwW
5xYp+pKxPZO3Om3/UJRA7Eu9XGaKPhvASVVjcXL0UDwr8uqmWAAh4oq+phUJ
bD4WVzIX56XME6SVvi/VjS7ysXgy4WVFCjt+e3r04NR+rvMK2fDqyqIc5UW5
kJW+VUzEy/Mnx0dH3/oPJ99+88h/OH10/Nh/ePTw8QP/4fGDk5Pmw/GJ/eXF
5OeLs9GrlxeOQ1aUg+u5EnskqD0BP4urZK4WauBWyfIG6Z9X1dKMDw+raRqr
P+QC+BODeA7tsg7z+5mOr1mdZb3Mj3Q+26D/4bfffNNQeXr0kD9Eo9FI5KAL
v54rlU5l8jaC76/n2gizVImeadAyYL6ALyTrpFiWxbIwMhsKmaf4wxI0CjRJ
VEA/PP2adfpFWYA2Ftkv+45iYk0MenF4AGTpShOKQJrdGgSdgU6noioAFgAG
YGAPNWquMPOizlIxVaCn8FHntB0SiltL8YOu5vUU0DG1EhL4DA+7jW/oN+Iy
2xHiUM4Sc0jLTRwRH+QUdFQmpIw9LEjVTOfK0L4ds0WeELFDsZrrZC4SUGJA
tTYqRWhAkDNd4aUDIOW0qCtAPtSa2oAQwVqAubJMxY/X1y/EQoFSpIAnm6NA
TVuWGkx5jXuMEmkUSwDFYXFB0eDGhLaYFyviK1iWIa5JgsSE4L46h58lvH0K
YGQVkiBWwEBRAOGlh25ii4tXo4VOU7D16J64AHss0jpBGptNGm4BYgS2g0+D
y2tvY7+8/sVihoAQuX0mCFUhA5qk8U82G8C6g4YKwLshZbomrOf6BqgBRUhD
mlqCAqbLVFbSS4l2GalcTjMAZFR5qxPybfA8WKAqY+d/nAI12suahNqzKsQC
PJhBeTHe3quDP84VKwCC+KeaAqU3gMpr642QG4BiqUyR3YKag+8r4cOyyDG2
9LEB4czKomEvqxdwBbiqUNvBBD0DYtIsCAQAkLBEniGDFzKvZUaELVQyl7k2
C8REGqMWwI5+GbR3nq5H8GDqlfgiF3sBEnu04dAvt/q3BPqAg6wtsuGJlwOC
srIQKk+XBcBk2Zt6uYRQaLqoMZXIxLpM8E1Vl7lhDWvgg7dYZloCsJ/krbxK
Sr2sxOX0N5VU4nlRsQHv/3R1+fyA5INxBOVT8BIy+64dAQlLVZK6d9kFeuwU
G3wbiIDgn8ZHoCcMK9Anz8OJQVHKDLiYkzcdigHLasDyezb5Odw9VUhWYRqB
tYxrSJZO2p6vWUMWKgU/rYjF5L2swAA5MCWjgUlrtmIAaxUXuQ4LDHvmXhfD
PjBmMwH1S1Ralwo9Q8MFlqxjxLF3cBtcuAjDA0azlFnfZkVagCrDr8AudBwp
cAsicg4aMFXVSilyFBFnKmgjoOZIqSoNSiSkA+MeMqjP+oC42Kp3Y1+s2QXH
LPajaApDxonxMTXEjQYpH11Z+LUBIMCgZbECBarBUs+LUtj8YYgIWhPlrXyM
wqf3ZAbG8Zcg2dgTz15dXcPGK7kGwHLJIVeRaOgRFzrDDIXA7GGIU5AwEld0
h0hreJCWtIMLGoHdBhkny6kGnbFeAvgNsQLFnyrUOPbuay8Oa9zOyw6ZVYBA
L5ag6qWxuIYO+SKIu2zysMut3nRcCwgNlTcaeAikUqJJz2vgcUQZZ27qxZI9
gIpv4qHIiuItKkG9hPR7ocCP7xnxna6SAnUnTUFPzAGoAFhQ5XdAWC4ombWp
1IIi0FxlS+BYCbigKSI8UYDfkOGGM5noTKMbym+GCIhiNOykcRUogkvnG4cN
dUAr0ln/KJynAx4DfgiLVTRTNwCnVL/XQD+VDyJXCRCCgoPnPQroTSCDwSUH
rRxFb+P5RqKCipSn7KQwx0PCkojyXygxUDlidHYo+WFfPoF23YHhfB5vjLDS
NSTMOmmhlem3AfpCJlROiKnMHEPQLoCVJfzM3gHQsa6t85SnvQdBiPj6Jm8j
J5OyMGh/aBJQKNlME1KrV5zPbYGls6zGVLXiYIEIWgsgo7yyPvMEXQjRrQyE
r6lK2YcQ8Vm2DteeMu73xDUZYJEVN2snxbdqLVaQKRkxQLcxGPK/4vklvX/5
/d9fXbz8/gzfX/04efrUv+EVCAY+X756apfgu+bhJ5fPnn3//Iyfh29F5yuI
YIOho2Rw+eL64vL55OmACQ9zLKhiLXPJK0HigPyhuOrI55jy2taDEK1jTFe/
Z94B0+WNapI3F3ogtKwM+jRcQ/mQz9wCqWDMhncyo+xyvUQTAhVGQ0wgVSl1
gWXGvXsbT4LtQ1oD8lCcNFws5A0m7BP0YGDVZq7YWhVGHUipNL4hp/Cvly9c
irVS09FUUq5OoMK0lJ0yw5tLzhismhd57Dai+AliHyFjORr0gMKghOlYKb4r
pnsutdo3cj0Ub6bF9C/gKRUGsbC2fXPAod86dAYrXl0QWRVWj7ibNSaOnk73
LGMC67CYznRpKp9NUWJ4zsny7zWy1TnkmXVpfVXbZmQhb4BqNY44dPzw/bU4
jFdQWo/e5sUqP1y5BPG/fCUuhE8m/0qF3FcnE2DFV8enfcwIH8Pi7vAoPuLv
fiwM1K29zzh22CyMA4jNPTaRdmDF8YMH4vJv/OUkQdc9elJgcZaNJph0jC5L
Dco2Fvd5Df4IIhhdr5dqHDL98Lcy/fo3A+UcL3znqBiYmvLdgRiLARE/3qYF
7AnooUznbw084r543TDlXVNV0tJSZQMAvdlDyI0t5iHKjSB0LrF3AFQ/aPYh
AO6nEEofejZxeAemUWFH4/2gAfPevf0lsp8p+aYcwzh9pjKT/IPLpNzWoIR1
7l31G/f1G2qlqLJa2x6Br6ZwmSsZU1LblNNzXPjmDlSADN400ahdQQ6DwhKD
uzIQ2G2VMtNYSnBGYitFFgEBArZAZldRGUA4bgCKxXcqkYCDTy5mNoIyFA+B
QjuHbZtgpPChFDc1rAAlVCknsUmm0bcvIN5x7m4g82IGOS1CUJAsSQhSEBgx
Oask4FfkGaWQApdxa4lqkqDJ1K0Le/0z5VVnaibrrILoyKKLOn56KDgfDkIx
tg2wHltJTJy2OvBIbHPhd/XfP0JJcIvOC/aPbKHoCwOAAxrquSarwBEyRG0I
RZQ1lqfARixK8j2KRk6KgyDRH3TbFmJfxypmeTmd3DPOV/VA82rjs8X+GIRJ
aJcX2wMQgNkVgQDeQoa5ni0OojsFGlmh1VY9gaYRPEDqyD7wzN6t3TGifExI
+Y/Wg+2gsiuqEE6h+pDuUDORHFUvJ7tydUIFUH1a4g0JzyXYsfHzNnqZXib5
CHb64BRTRXF++er5Gf/uPIxzv1Zy6MHqCgqS/1ZN4b+BQyutMcWsWmHauACf
59oYmE+YQJPUBgNcLuOq5d0OmVzxrlgBNknBokBY6L10XivUVXa/TEKgs9En
Njwaw8eKvMKzFdtuYA+Ev0OYUmW2xp0Rp111cuPqqUGFAhzu1gB0NTcqxyQ5
w5a5mimoqlLKwbtL3emBtc5t/fawlWxDUF+DPUeXoSnOghOBtxRXKfP2HHGu
6J8oGqgzMVua1dlmtWm7JmutstQEEJ665r/mXiJ1ipp+Fuz22p49YZuQoyvy
nLsYe1An4HFRTxcQYB3Hj+NjDuLHJw+wcBGTZuNWjxEDLhaUy7rERp/BHoLR
1JrBsAVULFVfKy3qLTVtgg1wGWFsUOPDros97oi8wMhu1TAeiCcUvo1tN1kf
2n6CVJWcbCwuZqTHAIK/lZo7FcTrNqvJgrb3OilMApygNRoELN8SQbrv3Wv1
6p4BqKjdvuvhy7Qs3qIJL11TE7ya5tLQVGoJpqAkqAKZhteKQLRUiKcKMpWM
DzK4KT0r0FSR0XTgdqtNTRVlqWwfnNXaHrZ5K5jBQ+OolTi3Xl+Ptr6+7lu/
FdCf7k3jSDZ+ujugjb7kJwD6YqT14LfzdUdAt58O6MtLTUxchbH5010B9Z3z
fDSg/5fahwEFxPydMs3en3YCYlx2Sa0Prx5Af96NtA5eWwHtfF1x7P18QF8M
I3x1NOJjAO1g2+jrDqBzCAh4EtL7YkGWxkWkZ+6EGn/738JoJ6Cdy/7tmb0T
0J/iSmV47NOEOlf9/x9h9oedWN8yAnRHJ/Zh0gDLZ3ww2fVALQLovQ9OTWJL
v31ZjNqvL8bs/o03vv2wq70TAhuvOwP6kFLsALSTtx8DqCGmLen2b3cCtPWc
+uMAfQJpUDfcE1eQ64ujcVd1uyM43W9tn8J0mqjhmE9n/C7nea1clmWxgurZ
lRJQAsw00C0i28kKT8TcxFr/cA6USFPFPYYGhahpPJHLo7P+Tj/aL7iVWa1s
pQJMT+02tvZtDXHZxkVraKHvSMbOhvSUBjwKwTLsk/rultpGN402+Or4tHXK
4kV6PLY5V788JwHHuAtIBS6OK/l6Wd5InZuqTaUHgmcUnaPJ7qyL34IblVST
2q6ZsdxrepGb00wCR5PES/f9Ge20rIC3+z+9PDvg/av2IFSryISyNinyW7Xu
6ajwc9Rv4REsojDGY5GLWUer/VBWg1pe5CM8m6LhRkeSO1lP3AQL1u96dxmO
kxjYFuYO0FzectNApXHTepj8jAi65kPf0BoqHbc32g2F3pksgAUCormszXGk
RoNOxr2pWsOgvsNIEqRjEptUW+CeV3jUYduFfNhBowrUVbDNARBy70jZw03E
hbUswAw7RyEAt4EUe6XK9qzJU7PRq0urCYZOyKZJtknDpw4udWIAzlyoV2Pb
57n6o2paGthFiYXTfEyLXb/M9tY1YxmiVTD+hPgmdgCmZccheqgBXZwMOQK3
HcBTeG5EDjKpSwMaiSMUM8BbpXhcVefg1TuusJU1AsuLKXIT1ZOcNe0crPhI
5jTadroRguzsZ9gltPZC01a2/blccrO32xtuf4GAPI52Os5R4hAkbhGv4qBj
S9Dck2CJCKlRKfzVggvnDm9lqXG203BX18oR1s8LU40yBYyPWrkDiRDnYqi3
izMXGELUbePAcSd0XjSrrpM6kyVBI4/VjkqbwbI9VUrnin60VAr0G+hL+EQO
wfHpfE1Dli0GBLSCC2zoDA+KfJBzR+yfcwLee/i9kSrxQfd7P2QA/MazTucm
SLLatFTiaSwuaTzKasFGlxxh9ftnmjaj0ZymyZ6t7fgRKrTXtKs1KMofjNXW
aXzJM6gq4DI9RirQ0mB/ukMAYrSNKjBN6ec+WT/x7RRCjxqpPMkKO8m/P3j3
fnDgRUfXX3CCq3zrzAg1zDgfakGS4vj5JIRj6qmpdFVXftSxM03qdyCfYOLo
g3zAGOCfGo3EwE0yDPATN6HZ/kp/9mYtfc8t3euO7LZD4EZKRwDtiYklyB9r
NDBtnuimfy/wvkM132ufjiCk4IBkaAkXbtTMZlcJugIQLY0orrTBoW/MGPAo
jI+j7JTRxv5dyvgYB6TNJ36WFX7qFwImWTMdnrGUEGs67Q3wRDcsglPUqZph
EG6zo/HvzrOFzKAMco8Uhww3JHza0McZyqvr89E3w2YE2aPLM5ugaTTjVufo
NSGjSMX+lkOogzBpRbaO3E5LW4vQMta8F35wFPMpe6ckmDZtKEPMrAmWNTm3
Kfh1L0XSQEDyhquKhZJkadZeWkJjiHQqJN0gCJ730eA/H2C2fAjPkRu0Bc9x
Oy1b51QYdOy2+d4OiekcvRMYFi5hIg6GLhkSdnIRBwxv8oJPLq3L7DqfyXfP
z8mpGHuk42az0FWjzMg9/xX8ifByOgyFdiiWSSOQA3oWkG89O3n64scJrDy7
+OHiGv4dxAP8768DvxqpdKu/+uPRUfzoBP/3+DR+/CCGj4+P4T08sy+O7nvo
B+I/Q99BJ3qf+2LlJKY75FgOFrnBu0GD8MCOXnlnM/IhAZbe32+YeNgAOvgc
LDtJgD9Ku8iXdTXGd+16FKIvL3CIjTdKUgzQzSwZr76sKwuvbzVtQSNI5+Bz
6EKcO4ucicHFxpmpHZ+yqQhoScsr9p+dRiLIfMPyx56dutIotdcJsnVwUO0P
JyMcCFXOp5CVq4oU/CiGQtNdMWknleTxNI6a4c85GjOFyiG7mzCyDC37E7mE
YqgnoKCP2cP8bc+FR2F3f2V2Lh+GxR/SjZP3oavGU1vvg5tJj+Zc1kZ05gok
cRSNwQGSqZIns1Kwjs56Z5n+VpuKhujHzcDIO0TqfaAnb5qhpFAfRdTVx2kx
je0NwE2t3K1nwaNR1OR7buZDt8q5mIsMr5G2yliLc+BHJLYfWm85st4EtGwm
Pewx9h1a0K63zK++w+hmxbZT5jvu0n59dNf9rrS0uuQoB8+gfxdMm46+ffU0
b+2KHV3ZO+5CdxG6hRgW9lubnDiSQpU/37rjtI7nLl1b7dRqYRTerYQ8x3Zu
KMg3ZUO36UfbVmuensGlnZt9YaUaVqUbBSU7YXv3jQeYIH/hm0YKL91UfZc5
6eoUx9Hm6qkrTcc2F7/P/ZDAxfSUi81fEajLDOvFN/zkvFQzeHTSR7/lqu2p
IeVY1c3g/1gGNvcaW2q2o3kXt/Wx15PkfpySUndkOfMUKiT84wdbGts20/qI
+nmDIU0BjTwJn7YCUvGHW8++5dw1vR0taFeKOxPo6mTYLfoCKtnu11E6eycN
6jYcrAK5rwIlaiH8mVIOYX28kD+9SdK9EvC+60i5d4F3qfjG3RPb9eCJ8+gf
ePunNs2NvKT1ezDKWUkcKuPa0E54e9lHweRlFE0WBeYa5A6cog35YmJWeZf3
LfI0PFWi4sz++Bin08KRRNxKLzCZxFvP27DV+S1ePqd+QBcxyl5x4FilG5Z5
xU7LRBPDHbAFrHOuzLgB79TdkqV8N1fVEC9M4iBiYQyVZXQ6BO5/IXUegcVh
0Vs0k79z2n0QHI24LWKSS8iex3THLuQPAu/Qa8MJSojapdTDAcY3ZwV4N233
4OsK023GjKdOq7ku0xHq1Bq778i2J3gX0F7IaY5triCDREvZf3L58uog6gJ2
oje26YgFwZSakcqxy18uwJnFlcHJ7Zqq58EVFFt2wwHwF7yRRi5dKdU+LOgy
CFHpcCniDtdW/nxgMJhGSR0j+KKSsBeVvLpA4khUeJKHlsx2u3qTNyy8yF4z
oT+wwm1ibgOG5D7qI7eDz6eoRx/5US/54mLyfNJ1IMiV52olnuJNlpf2JovA
S1om2pIMtdzs0/AGDMUL43s8ltI4Cvlwwg10d6cUmELTrC7SIDxbGPSlCr6E
ud9GVuxTaDn42OyEQT3DP0Qg+Gbam76raXadO+ikPxnUg95QwDuDOAHsbUQE
ZzKfR81GpPyixDRotqmy+fMkwZwEqvkbKjw7urKSRsyVvNV0E3gG9S6kcuif
uLs4rTXOt9dQqwc3xlrecl+mUKG7mXN3R8H4P0lzgP0vzI3cUbPtVWALAcBY
49F4lJjh8DTuRXvbBMDjpCEMKFtpZ9zCxD9oZCMa4YR/04jasZhh8B9RcveJ
6GwFI6rjhrL9djBoPa39n6qI6MQI2+ireYE3nt+6cER/MMN2XN39sVYbnhoQ
F7nviHLT8INotDZ0ETCaub+HhFs6Xhp7k47GyEt9yyPtLSTi6H8AAkUHOmhM
AAA=

-->

</rfc>

