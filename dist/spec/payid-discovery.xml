<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4627 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4627.xml">
<!ENTITY RFC6570 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6570.xml">
<!ENTITY RFC7033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7033.xml">
<!ENTITY RFC7230 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7230.xml">
<!ENTITY RFC5988 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5988.xml">
<!ENTITY RFC6415 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6415.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-fuelling-payid-discovery-01" category="std">

  <front>
    <title>PayID Discovery</title>

    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
      </address>
    </author>

    <date year="2020" month="June" day="23"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID Discovery protocol, which can be used
   to discover information about a 'payid' URI using standard HTTP methods.</t>

<t>The primary use-case of this protocol is to define how to transform a 
   PayID URI into a URL that can be used with other protocols.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a draft proposal, and is part of the 
  <eref target="https://payid.org/">PayID Protocol</eref> initiative. Feedback related to this 
  document should be sent in the form of a Github issue at: 
  https://github.com/payid-org/rfcs/issues.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">
<t>PayID Discovery is used to transform a PayID URI <xref target="PAYID-URI"></xref> into a
   URL (defined below as a PayID Discovery URL) that can then be used by 
   higher-order protocols to discover metadata about a PayID-enabled service
   provider.</t>

<t>This document specifies two modes of PayID discovery: one using
   Webfinger <xref target="RFC7033"></xref> to resolve a corresponding PayID Discovery URL
   from a PayID using an interactive protocol. The second mode uses a manual 
   mechanism to assemble a PayID Discovery URL from a PayID by-hand.</t>

<t>In 'interactive' mode, a PayID can be presented to a Webfinger-enabled 
   service endpoint that supports PayID Discovery. The resource returns a
   Webfinger-compliant JavaScript Object Notation (JSON) <xref target="RFC4627"></xref> object 
   that can be used to perform PayID Discovery as defined in section 4.1 of
   this document.</t>

<t>As an alternative, "manual" mode MAY be used to decompose a PayID into a
   URL, without any intermediate server interaction by simply transposing
   portions of a PayID URI into a URL format. This procedure is defined in
   section 4.2 of this document.</t>

<t>It should be noted that "manual" mode does not allow divergence between the
   string characters in a PayID URI and any corresponding PayID URL. 
   Interactive mode, on the other hand, does allow such divergence, and is 
   thus more powerful. For example, in manual mode, the PayID
   'alice$example.com' MUST always map to the URL 
   'https://example.com/alice', whereas in interactive mode that same
   PayID URI can map to any arbitrary URL structure determined by the
   service provider, such as 'https://example.com/users/alice'.</t>

<t>Information returned via PayID Discovery might be used for direct human
   consumption (e.g., looking up someone's Bitcoin address), or it might be
   used by systems to help carry out some operation (e.g., facilitating,
   with additional security mechanisms, protocols to support compliance or 
   other legal requirements necessary to facilitate a payment).</t>

<t>The information returned via this protocol is intended to be static
   in nature. As such, PayID Discovery is not intended to be used to return
   dynamic information like a payment account balance or the current
   status of a payment account.</t>

<t>PayID Discovery is designed to be used across many applications. Use of 
   PayID Discovery is illustrated in the examples in Section 3 and
   described more formally in Section 4.</t>

</section>
<section anchor="terminology" title="Terminology">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   <xref target="RFC2119"></xref>.</t>

</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows sample uses of PayID Discovery in several
   hypothetical scenarios.</t>

<section anchor="payid-discovery-by-a-wallet" title="PayID Discovery by a Wallet">
<t>Imagine Alice wishes to send a friend some XRP from a web-based wallet
   provider that Alice has an account on. Alice would log-in to the wallet
   provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the
   wallet UI to start the payment.</t>

<t>The Wallet application would first perform a WebFinger query looking for 
   the PayID Discovery service provider, like this:</t>

<figure><artwork><![CDATA[
 GET /.well-known/webfinger?
       resource=payid%3Abob%24receiver.example.com
       HTTP/1.1
 Host: receiver.example.com
]]></artwork></figure>

<t>The server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json

 {
   "subject" : "payid:bob$receiver.example.com",
   "links" :
   [
     {  
       "rel": "https://payid.org/ns/payid-uri-template/1.0",
       "template": "https://receiver.example.com/users/{acctpart}"
     }
   ]
 }
]]></artwork></figure>

<t>Alice's wallet then uses the URL template found in the <spanx style="verb">template</spanx> property
   to assemble the specified PayId URL, 
   <spanx style="verb">https://receiver.example.com/users/bob</spanx>.</t>

<t>Per <xref target="RFC7033"></xref>, Webfinger requests can be filtered by using a "rel" 
   parameter in the Webfinger request. Because support for the "rel" parameter
   is not required nor guaranteed, the client must not assume the "links" 
   array will contain only the link relations related to PayID Discovery.</t>

</section>
<section anchor="payid-discovery-with-default-template" title="PayID Discovery with Default Template">
<t>Imagine Alice, as in the example above, wants to send a friend some XRP
  from a web-based wallet provider that Alice has an account on. However, in 
  this example, let's assume that the PayID Alice is wanting to pay doesn't 
  support "interactive" PayID discovery (i.e., the receiver's server doesn't 
  support Webfinger).</t>

<t>Alice would log-in to her wallet provider and enter Bob's PayID (say
  <spanx style="verb">bob$receiver.example.com</spanx>) to make a payment.</t>

<t>The Wallet application would first attempt a WebFinger query as in the 
  example above, like this:</t>

<figure><artwork><![CDATA[
  GET /.well-known/webfinger?
        resource=payid%3Abob%24receiver.example.com&
        HTTP/1.1
  Host: receiver.example.com
]]></artwork></figure>

<t>However, in this case the <spanx style="verb">receiver.example.com</spanx> server doesn't support 
  "interactive" PayID Discovery, so the server responds like this:</t>

<figure><artwork><![CDATA[
  HTTP/1.1 404 NOT FOUND
]]></artwork></figure>

<t>Because Alice's Wallet can utilize "manual" PayID Discovery, the wallet
  software merely transforms <spanx style="verb">bob$receiever.example.com</spanx> into the URL 
  <spanx style="verb">https://receiver.example.com/bob</spanx>. Alice's wallet then uses that URL to 
  continue making a PayID payment.</t>

<t>It should be noted that "manual" mode does not allow the PayID URI to
  diverge from the underlying URL returned via PayID Discovery. Because of
  this, "interactive" PayID Discovery is generally preferred.</t>

</section>
</section>
<section anchor="payid-discovery-protocol" title="PayID Discovery Protocol">
<t>The PayID Discovery protocol is used to request information about an entity
  identified by a PayID URI.</t>

<t>When successful, PayID Discovery always yields a PayID URL, which is a
  URI as defined by <xref target="RFC3986"></xref> using the 'https' scheme defined in section
  2.7.2 <xref target="RFC7230"></xref>. A PayID URL can be used for any purposes outside the
  scope of this document.</t>

<t>PayID Discovery is performed using one of two modes: "interactive" or
  "manual." Clients MUST attempt "interactive" mode first. If that
  mode fails to yield a PayID URL, then "manual" mode MAY be used as an
  alternative discovery mechanism.</t>

<section anchor="interactive-mode" title="Interactive Mode">
<t>Interactive PayID Discovery is broken up into a series of steps, each of
  which is defined in more detail below. The following is a visual
  representation of the protocol flow:</t>

<figure><artwork><![CDATA[
                    +--------------------------+                    
                    |        PayID URI         |                    
                    |    alice$example.com     |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |         Assemble         |                    
                    |   PayID Discovery URL    |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |          Query           |                    
              +-----|   PayID Discovery URL    |-----+              
              |     +--------------------------+     |              
              |                                  Success            
              |                                      |              
              |                                      v              
              |                        +---------------------------+
          Failure                      |   Parse PayID Metadata    |
              |                        +---------------------------+
              |                                      |              
              |                                      v              
              |                        +---------------------------+
              |                        | Select PayID URI Template |
              |                        +---------------------------+
              |                                      |              
              v                                      v              
+--------------------------+           +---------------------------+
|  Manual PayID Discovery  |           |    Assemble PayID URL     |
+--------------------------+           +---------------------------+
              |                                      |              
              +---------------------+----------------+              
                                    |                               
                                    v                               
                      +---------------------------+                 
                      |         PayID URL         |                 
                      | https://example.com/alice |                 
                      +---------------------------+                 
]]></artwork></figure>

<section anchor="step-1-assemble-payid-discovery-url" title="Step 1: Assemble PayID Discovery URL">
<t>PayID Discovery utilizes the Webfinger <xref target="RFC7033"></xref> specification in a 
  narrowly defined profile.</t>

<t>This document defines a PayID Discovery URL as being a Webfinger 
  resource URI where the specified resource value is a valid PayID 
  URI <xref target="PAYID-URI"></xref>.</t>

<t>For example, the PayID Discovery URL for alice$example.com is</t>

<figure><artwork><![CDATA[
 https://example.com/.well-known/webfinger?resource=payid%3Abob%24example.com
]]></artwork></figure>

</section>
<section anchor="step-2-query-payid-discovery-url" title="Step 2: Query PayID Discovery URL">
<t>A Webfinger query MUST be performed against the PayID Disovery URL,
  as described in section 4.2 of Webfinger.</t>

<t>In response, the WebFinger resource returns a JSON Resource Descriptor (JRD)
  as the resource representation to convey information about the requested 
  PayID.</t>

<t>If the Webfinger endpoint returns a non-200 HTTP response status code, then
  interactive PayID Discovery is considered to have failed. Clients MAY 
  attempt to assemble a PayID URL using "manual" mode as defined in section
  4.2.1 of this document.</t>

</section>
<section anchor="step-3-parse-payid-metadata" title="Step 3: Parse PayID Metadata">
<t>If the PayID Discovery server returns a valid response, the response will
  contain one or more of the JRDs defined in section 5 of this document.</t>

<t>If any of the JRDs contain a 'rel' value that represents a PayID URL
  Template, then that template value MUST be used in the next protocol step.</t>

<t>Failing the above, if the 'rel' value of any JRDs represents a PayID
  Discovery URL, then that URL MUST be used in step 2 above, repeated
  recursively if needed, until a valid PayID URI Template is obtained. 
  That URI Template value MUST be used in the next protocol step.</t>

</section>
<section anchor="step-4-assemble-payid-url" title="Step 4: Assemble PayID URL">
<t>A PayID URL is constructed by applying the PayID URI to the PayID URI
   Template string obtained in the step above. The PayID URI template MAY
   contain a URI string without any variables to represent a host-level
   PayID URL that is identical for every PayID URI on a particular host.</t>

<t>For example, a PayID Discovery endpoint that only supports a single account
   might use a URI template string with no variables, like this:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-uri-template/1.0",
  "template": "https://example.com/alice"
}
]]></artwork></figure>

<t>The result of this step is the PayID URL. Once obtained, PayID Discovery
   is considered to have completed successfully.</t>

<section anchor="template-syntax" title="Template Syntax">
<t>This specification defines a simple template syntax for PayID URI
   transformation.  A template is a string containing brace-enclosed
   ("{}") variable names marking the parts of the string that are to be
   substituted by the corresponding variable values.</t>

<t>This specification defines a one variable – "acctpart" – which 
   corresponds to the 'acctpart' of a PayID URI as defined in <xref target="PAYID-URI"></xref>.</t>

<t>When substituting the 'acctpart' value into a URI 'path' as defined by
   <xref target="RFC3986"></xref>, values MUST NOT be percent or otherwise encoded because the
   'acctpart' value of a PayID URI always conforms to the character set
   allowed by paths in <xref target="RFC3986"></xref>.</t>

<t>However, before substituting template variables into a URI 'query' part,
   values MUST be encoded using UTF-8, and any character other than
   unreserved (as defined by <xref target="RFC3986"></xref>) MUST be percent-encoded per <xref target="RFC3986"></xref>.</t>

<t>Protocols MAY define additional variables and syntax rules, but MUST NOT 
   change the meaning of the 'acctpart' variable. If a client is unable to
   successfully process a template (e.g., unknown variable names, unknown or 
   incompatible syntax), the JRD SHOULD be ignored.</t>

<t>The template syntax ABNF is as follows:</t>

<figure><artwork><![CDATA[
uri-char     =  ( reserved / unreserved / pct-encoded )
var-char     =  ALPHA / DIGIT / "." / "_"
var-name     =  %x61.63.63.74.70.61.72.74 / ( 1*var-char ) ; "acctpart" or
                                                              other names
variable     =  "{" var-name "}"
PAYID-URI-Template =  *( uri-char / variable )
]]></artwork></figure>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    alice$example.org
 Template: https://example.org/{acctpart}
 Output:   https://example.org/alice
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="fallback-mode" title="Fallback Mode">
<t>If "Interactive" mode is not supported or otherwise fails to yield a PayID
  URL, then a PayID URL MAY be assembled manually using the following
  predefined ruleset:</t>

<t><list style="numbers">
  <t>Decompose the PayID URI into its component parts, per <xref target="PAYID-URI"></xref>, 
capturing the 'acctpart' and 'host' values.</t>
  <t>Using the 'acctpart' and 'host', assemble a URL by substituting each
   value into the following string using no special encoding or other
   character adjustments: <spanx style="verb">https://{host}/{acctpart}</spanx>.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    bob.primary$example.org
 Output:   https://example.org/bob.primary
]]></artwork></figure>

<t>The resulting URL is a PayID URL.</t>

<section anchor="fallback-assembly-flow" title="Fallback Assembly Flow">
<t>The following is a visual representation of the Fallback Assembly protocol
  flow:</t>

<figure><artwork><![CDATA[
+--------------------------+ 
|        PayID URI         | 
|    alice$example.com     | 
+--------------------------+ 
              |              
              v              
+--------------------------+ 
|Manual PayID URL Assembly | 
+--------------------------+ 
              |              
              v              
+---------------------------+
|         PayID URL         |
| https://example.com/alice |
+---------------------------+
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="payid-discovery-jrds" title="PayID Discovery JRDs">
<t>This document defines two JRDs that conform to section 4.4 of the
  Webfinger RFC.</t>

<section anchor="jrd-for-payid-discovery-url" title="JRD for PayID Discovery URL">
<t>This type of JRD can be used to represent a URL that is a PayID Discovery
  URL. This is useful for delegating PayID Discovery to another service
  endpoint:</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">https://payid.org/ns/payid-discovery-url/1.0</spanx></t>
  <t>'href': A PayID Discovery URL that clients can dereference to perform
        interactive PayID Discovery.</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID Discovery URL:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-discovery-url/1.0",
  "href": "https://delegate.example.com/.well-known/webfinger?resource=
           payid%3Aalice%24example.com"
}
]]></artwork></figure>

</section>
<section anchor="jrd-for-payid-uri-template" title="JRD for PayID URI Template">
<t>This type of JRD can be used to represent a URL that is a PayID URL
  Template.</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">https://payid.org/ns/payid-uri-template/1.0</spanx></t>
  <t>'template': A PayID URI Template</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID URI Template:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-uri-template/1.0",
  "template": "https://example.com/{acctpart}"
}                
]]></artwork></figure>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">
<t>Various security considerations should be taken into account for PayID
Discovery.</t>

<t>Among other resource, consult section 9 of <xref target="RFC7033"></xref> and section 7 of
<xref target="RFC3986"></xref> for important security considerations involved in PayID
Discovery.</t>

<section anchor="hosted-payid-discovery-services" title="Hosted PayID Discovery Services">
<t>As with most services provided on the Internet, it is possible for a domain
owner to utilize "hosted" WebFinger services. Consult section 7 of 
<xref target="RFC7033"></xref> for considerations that could apply to both "manual" and
"interactive" PayID Discovery when hosted by a third-party.</t>

</section>
<section anchor="cross-origin-resource-sharing-cors" title="Cross-Origin Resource Sharing (CORS)">
<t>PayID Discovery resources might not be accessible from a web browser due to
"Same-Origin" policies. See section 5 of <xref target="RFC7033"></xref> for CORS considerations
that apply to both "manual" and "interactive" PayID Discovery modes.</t>

</section>
<section anchor="access-control" title="Access Control">
<t>As with all web resources, access to the PayID Discovery resource could
require authentication. See section 6 of <xref target="RFC7033"></xref> for Access Control
considerations that could apply to both "manual" and "interactive" PayID
Discovery modes.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="new-link-relation-types" title="New Link Relation Types">
<t>This document defines the following Link relation types per <xref target="RFC7033"></xref>.
See section 3 for examples of each type of Link.</t>

<section anchor="payid-discovery-url" title="PayID Discovery URL">

<t><list style="symbols">
  <t>Relation Type ('rel'): <spanx style="verb">https://payid.org/ns/payid-discovery-url/1.0</spanx></t>
  <t>Media Type: <spanx style="verb">application/jrd+json</spanx></t>
  <t>Description: PayID Discovery URL, version 1.0</t>
</list></t>

</section>
<section anchor="payid-discovery-uri-template" title="PayID Discovery URI Template">

<t><list style="symbols">
  <t>Relation Type ('rel'): <spanx style="verb">https://payid.org/ns/payid-uri-template/1.0</spanx></t>
  <t>Media Type: <spanx style="verb">application/jrd+json</spanx></t>
  <t>Description: PayID Discovery URI Template, version 1.0</t>
</list></t>

</section>
</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>This document was heavily influenced by, and builds upon, Webfinger
<xref target="RFC7033"></xref> (adapted for a payments use-case) as well as the supporting
RFCs that it relies upon and that influenced it, especially <xref target="RFC5988"></xref> and
<xref target="RFC6415"></xref>. The author would like to acknowledge the contributions of 
everyone who worked on those and any related specifications.</t>

<t>In addition, the author would like to acknowledge everyone who provided
feedback and use-cases for this derivative specification.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC3986;
&RFC4627;
&RFC6570;
&RFC7033;
&RFC7230;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC5988;
&RFC6415;


    </references>



  </back>

<!-- ##markdown-source:
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
57k2BuYTJtAktcEAl8u4anm3QyZXvCtWgE1SsCgQFnovndcKdZXdL5MQ6Gz0
kQ2PxvCxIq/wbMW2G9gD4e8QplSZrXFnxGlXndy4empQoQCHuzUAXc2NyjFJ
zrBlrmYKqqqUcvDuUnd6YK1zW789bCXbENTXYM/RZWiKs+BE4C3FVcq8PUec
K/onigbqTMyWZnW2WW3arslaqyw1AYSnrvmvuZdInaKmnwW7vbZnT9gm5OiK
POcuxh7UCXhc1NMFBFjH8eP4mIP48clDLFzEpNm41WPEgIsF5bIusdFnsIdg
NLVmMGwBFUvV10qLektNm2ADXEYYG9T4sOtijzsiLzCyWzWMB+IJhW9j203W
h7afIFUlJxuLixnpMYDgb6XmTgXxus1qsqDtvU4KkwAnaI0GAcu3RJDuBw9a
vbpnACpqt+96+DIti7dowkvX1ASvprk0NJVagikoCapApuG1IhAtFeKpgkwl
44MMbkrPCjRVZDQduN1qU1NFWSrbB2e1todt3gpm8NA4aiXOrddXo62vr/rW
bwX0p3vTOJKNn+4OaKMv+RGAPhtpPfjtfN0R0O3HA/r8UhMTV2Fs/nRXQH3n
PPcG9P9S+zCggJi/U6bZ+9NOQIzLLqn14dUD6M+7kdbBayugna8rjr2fDuiz
YYSvjkbcB9AOto2+6gA6h4CAJyG9LxZkaVxEeuZOqPG3/y2MdgLauezfntk7
Af0prlSGxz5NqHPV//8RZn/YifUtI0B3dGIfJg2wfMYHk10P1CKA3vvg1CS2
9Nvnxaj9+mzM7t9449sPu9o7IbDxujOgDynFDkA7eXsfQA0xbUm3f7sToK3n
1PcD9BGkQd3wQFxBri+Oxl3V7Y7gdL+1fQrTaaKGYz6d8buc57VyWZbFCqpn
V0pACTDTQLeIbCcrPBFzE2v9wzlQIk0V9xgaFKKm8UQuj876O/1ov+BWZrWy
lQowPbXb2Nq3NcRlGxetoYW+Ixk7G9JTGvAoBMuwT+r9LbUtXbTW2YoX5PHY
Zlr9UpwEfOLeH5W1OKTkq2R5I3VuqjZtHgieTHQOJLsTLn4Lbk9SJWp7Zcby
rOlAbs4wCRxIEi/d92e007ICju7/9PLsgPev2uNPrdISitmkyG/VuqePws9R
l4UHr4jCGA9DLmYdXfajWA1qeZGP8ESKRhodSe48PXFzK1i1693FN85fYDOY
+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

-->

</rfc>

