<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4627 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4627.xml">
<!ENTITY RFC6570 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6570.xml">
<!ENTITY RFC7033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7033.xml">
<!ENTITY RFC7230 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7230.xml">
<!ENTITY RFC5988 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5988.xml">
<!ENTITY RFC6415 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6415.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-fuelling-payid-discovery-01" category="std">

  <front>
    <title>PayID Discovery</title>

    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
      </address>
    </author>

    <date year="2020" month="July" day="07"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID Discovery protocol, which can be used
   to discover information about a 'payid' URI using standard HTTP methods.</t>

<t>The primary use-case of this protocol is to define how to transform a
   PayID URI into a URL that can be used with other protocols.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a draft proposal, and is part of the
  <eref target="https://payid.org/">PayID Protocol</eref> initiative. Feedback related to this
  document should be sent in the form of a Github issue at:
  https://github.com/payid-org/rfcs/issues.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">
<t>PayID Discovery is used to transform a PayID URI <xref target="PAYID-URI"></xref> into a
   URL (defined below as a PayID Discovery URL) that can then be used by
   higher-order protocols to discover metadata about a PayID-enabled service
   provider.</t>

<t>This document specifies two modes of PayID discovery: one using
   Webfinger <xref target="RFC7033"></xref> to resolve a corresponding PayID Discovery URL
   from a PayID using an interactive protocol. The second mode uses a manual
   mechanism to assemble a PayID Discovery URL from a PayID by-hand.</t>

<t>In 'interactive' mode, a PayID can be presented to a Webfinger-enabled
   service endpoint that supports PayID Discovery. The resource returns a
   Webfinger-compliant JavaScript Object Notation (JSON) <xref target="RFC4627"></xref> object
   that can be used to perform PayID Discovery as defined in section 4.1 of
   this document.</t>

<t>As an alternative, "manual" mode MAY be used to decompose a PayID into a
   URL, without any intermediate server interaction by simply transposing
   portions of a PayID URI into a URL format. This procedure is defined in
   section 4.2 of this document.</t>

<t>It should be noted that "manual" mode does not allow divergence between the
   string characters in a PayID URI and any corresponding PayID URL.
   Interactive mode, on the other hand, does allow such divergence, and is
   thus more powerful. For example, in manual mode, the PayID
   'alice$example.com' MUST always map to the URL
   'https://example.com/alice', whereas in interactive mode that same
   PayID URI can map to any arbitrary URL structure determined by the
   service provider, such as 'https://example.com/users/alice'.</t>

<t>Information returned via PayID Discovery might be used for direct human
   consumption (e.g., looking up someone's Bitcoin address), or it might be
   used by systems to help carry out some operation (e.g., facilitating,
   with additional security mechanisms, protocols to support compliance or
   other legal requirements necessary to facilitate a payment).</t>

<t>The information returned via this protocol is intended to be static
   in nature. As such, PayID Discovery is not intended to be used to return
   dynamic information like a payment account balance or the current
   status of a payment account.</t>

<t>PayID Discovery is designed to be used across many applications. Use of
   PayID Discovery is illustrated in the examples in Section 3 and
   described more formally in Section 4.</t>

</section>
<section anchor="terminology" title="Terminology">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   <xref target="RFC2119"></xref>.</t>

</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows sample uses of PayID Discovery in several
   hypothetical scenarios.</t>

<section anchor="payid-discovery-by-a-wallet" title="PayID Discovery by a Wallet">
<t>Imagine Alice wishes to send a friend some XRP from a web-based wallet
   provider that Alice has an account on. Alice would log-in to the wallet
   provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the
   wallet UI to start the payment.</t>

<t>The Wallet application would first perform a WebFinger query looking for
   the PayID Discovery service provider, like this:</t>

<figure><artwork><![CDATA[
 GET /.well-known/webfinger?
       resource=payid%3Abob%24receiver.example.com
       HTTP/1.1
 Host: receiver.example.com
]]></artwork></figure>

<t>The server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json

 {
   "subject" : "payid:bob$receiver.example.com",
   "links" :
   [
     {  
       "rel": "https://payid.org/ns/payid-uri-template/1.0",
       "template": "https://receiver.example.com/users/{acctpart}"
     }
   ]
 }
]]></artwork></figure>

<t>Alice's wallet then uses the URL template found in the <spanx style="verb">template</spanx> property
   to assemble the specified PayId URL,
   <spanx style="verb">https://receiver.example.com/users/bob</spanx>.</t>

<t>Per <xref target="RFC7033"></xref>, Webfinger requests can be filtered by using a "rel"
   parameter in the Webfinger request. Because support for the "rel" parameter
   is not required nor guaranteed, the client must not assume the "links"
   array will contain only the link relations related to PayID Discovery.</t>

</section>
<section anchor="payid-discovery-with-default-template" title="PayID Discovery with Default Template">
<t>Imagine Alice, as in the example above, wants to send a friend some XRP
  from a web-based wallet provider that Alice has an account on. However, in
  this example, let's assume that the PayID Alice is wanting to pay doesn't
  support "interactive" PayID discovery (i.e., the receiver's server doesn't
  support Webfinger).</t>

<t>Alice would log-in to her wallet provider and enter Bob's PayID (say
  <spanx style="verb">bob$receiver.example.com</spanx>) to make a payment.</t>

<t>The Wallet application would first attempt a WebFinger query as in the
  example above, like this:</t>

<figure><artwork><![CDATA[
  GET /.well-known/webfinger?
        resource=payid%3Abob%24receiver.example.com&
        HTTP/1.1
  Host: receiver.example.com
]]></artwork></figure>

<t>However, in this case the <spanx style="verb">receiver.example.com</spanx> server doesn't support
  "interactive" PayID Discovery, so the server responds like this:</t>

<figure><artwork><![CDATA[
  HTTP/1.1 404 NOT FOUND
]]></artwork></figure>

<t>Because Alice's Wallet can utilize "manual" PayID Discovery, the wallet
  software merely transforms <spanx style="verb">bob$receiever.example.com</spanx> into the URL
  <spanx style="verb">https://receiver.example.com/bob</spanx>. Alice's wallet then uses that URL to
  continue making a PayID payment.</t>

<t>It should be noted that "manual" mode does not allow the PayID URI to
  diverge from the underlying URL returned via PayID Discovery. Because of
  this, "interactive" PayID Discovery is generally preferred.</t>

</section>
</section>
<section anchor="payid-discovery-protocol" title="PayID Discovery Protocol">
<t>The PayID Discovery protocol is used to request information about an entity
  identified by a PayID URI.</t>

<t>When successful, PayID Discovery always yields a PayID URL, which is a
  URI as defined by <xref target="RFC3986"></xref> using the 'https' scheme defined in section
  2.7.2 <xref target="RFC7230"></xref>. A PayID URL can be used for any purposes outside the
  scope of this document.</t>

<t>PayID Discovery is performed using one of two modes: "interactive" or
  "manual." Clients MUST attempt "interactive" mode first. If that
  mode fails to yield a PayID URL, then "manual" mode MAY be used as an
  alternative discovery mechanism.</t>

<section anchor="interactive-mode" title="Interactive Mode">
<t>Interactive PayID Discovery is broken up into a series of steps, each of
  which is defined in more detail below. The following is a visual
  representation of the protocol flow:</t>

<figure><artwork><![CDATA[
                    +--------------------------+                    
                    |        PayID URI         |                    
                    |    alice$example.com     |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |         Assemble         |                    
                    |   PayID Discovery URL    |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |          Query           |                    
              +-----|   PayID Discovery URL    |-----+              
              |     +--------------------------+     |              
              |                                  Success            
              |                                      |              
              |                                      v              
              |                        +---------------------------+
          Failure                      |   Parse PayID Metadata    |
              |                        +---------------------------+
              |                                      |              
              |                                      v              
              |                        +---------------------------+
              |                        | Select PayID URI Template |
              |                        +---------------------------+
              |                                      |              
              v                                      v              
+--------------------------+           +---------------------------+
|  Manual PayID Discovery  |           |    Assemble PayID URL     |
+--------------------------+           +---------------------------+
              |                                      |              
              +---------------------+----------------+              
                                    |                               
                                    v                               
                      +---------------------------+                 
                      |         PayID URL         |                 
                      | https://example.com/alice |                 
                      +---------------------------+                 
]]></artwork></figure>

<section anchor="step-1-assemble-payid-discovery-url" title="Step 1: Assemble PayID Discovery URL">
<t>PayID Discovery utilizes the Webfinger <xref target="RFC7033"></xref> specification in a
  narrowly defined profile.</t>

<t>This document defines a PayID Discovery URL as being a Webfinger
  resource URI where the specified resource value is a valid PayID
  URI <xref target="PAYID-URI"></xref>.</t>

<t>For example, the PayID Discovery URL for alice$example.com is</t>

<figure><artwork><![CDATA[
 https://example.com/.well-known/webfinger?
   resource=payid%3Aalice%24example.com
]]></artwork></figure>

</section>
<section anchor="step-2-query-payid-discovery-url" title="Step 2: Query PayID Discovery URL">
<t>A Webfinger query MUST be performed against the PayID Discovery URL,
  as described in section 4.2 of Webfinger.</t>

<t>In response, the WebFinger resource returns a JSON Resource Descriptor (JRD)
  as the resource representation to convey information about the requested
  PayID.</t>

<t>If the Webfinger endpoint returns a non-200 HTTP response status code, then
  interactive PayID Discovery is considered to have failed. Clients MAY
  attempt to assemble a PayID URL using "manual" mode as defined in section
  4.2.1 of this document.</t>

</section>
<section anchor="step-3-parse-payid-metadata" title="Step 3: Parse PayID Metadata">
<t>If the PayID Discovery server returns a valid response, the response will
  contain one or more of the JRDs defined in section 5 of this document.</t>

<t>If any of the JRDs contain a 'rel' value that represents a PayID URL
  Template, then that template value MUST be used in the next protocol step.</t>

<t>Failing the above, if the 'rel' value of any JRDs represents a PayID
  Discovery URL, then that URL MUST be used in step 2 above, repeated
  recursively if needed, until a valid PayID URI Template is obtained.
  That URI Template value MUST be used in the next protocol step.</t>

</section>
<section anchor="step-4-assemble-payid-url" title="Step 4: Assemble PayID URL">
<t>A PayID URL is constructed by applying the PayID URI to the PayID URI
   Template string obtained in the step above. The PayID URI template MAY
   contain a URI string without any variables to represent a host-level
   PayID URL that is identical for every PayID URI on a particular host.</t>

<t>For example, a PayID Discovery endpoint that only supports a single account
   might use a URI template string with no variables, like this:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-uri-template/1.0",
  "template": "https://example.com/alice"
}
]]></artwork></figure>

<t>The result of this step is the PayID URL. Once obtained, PayID Discovery
   is considered to have completed successfully.</t>

<section anchor="template-syntax" title="Template Syntax">
<t>This specification defines a simple template syntax for PayID URI
   transformation.  A template is a string containing brace-enclosed
   ("{}") variable names marking the parts of the string that are to be
   substituted by the corresponding variable values.</t>

<t>This specification defines a one variable – "acctpart" – which
   corresponds to the 'acctpart' of a PayID URI as defined in <xref target="PAYID-URI"></xref>.</t>

<t>When substituting the 'acctpart' value into a URI 'path' as defined by
   <xref target="RFC3986"></xref>, values MUST NOT be percent or otherwise encoded because the
   'acctpart' value of a PayID URI always conforms to the character set
   allowed by paths in <xref target="RFC3986"></xref>.</t>

<t>However, before substituting template variables into a URI 'query' part,
   values MUST be encoded using UTF-8, and any character other than
   unreserved (as defined by <xref target="RFC3986"></xref>) MUST be percent-encoded per <xref target="RFC3986"></xref>.</t>

<t>Protocols MAY define additional variables and syntax rules, but MUST NOT
   change the meaning of the 'acctpart' variable. If a client is unable to
   successfully process a template (e.g., unknown variable names, unknown or
   incompatible syntax), the JRD SHOULD be ignored.</t>

<t>The template syntax ABNF is as follows:</t>

<figure><artwork><![CDATA[
uri-char     =  ( reserved / unreserved / pct-encoded )
var-char     =  ALPHA / DIGIT / "." / "_"
var-name     =  %x61.63.63.74.70.61.72.74 / ( 1*var-char ) ; "acctpart" or
                                                              other names
variable     =  "{" var-name "}"
PAYID-URI-Template =  *( uri-char / variable )
]]></artwork></figure>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    alice$example.org
 Template: https://example.org/{acctpart}
 Output:   https://example.org/alice
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="fallback-mode" title="Fallback Mode">
<t>If "Interactive" mode is not supported or otherwise fails to yield a PayID
  URL, then a PayID URL MAY be assembled manually using the following
  predefined ruleset:</t>

<t><list style="numbers">
  <t>Decompose the PayID URI into its component parts, per <xref target="PAYID-URI"></xref>,
capturing the 'acctpart' and 'host' values.</t>
  <t>Using the 'acctpart' and 'host', assemble a URL by substituting each
   value into the following string using no special encoding or other
   character adjustments: <spanx style="verb">https://{host}/{acctpart}</spanx>.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    bob.primary$example.org
 Output:   https://example.org/bob.primary
]]></artwork></figure>

<t>The resulting URL is a PayID URL.</t>

<section anchor="fallback-assembly-flow" title="Fallback Assembly Flow">
<t>The following is a visual representation of the Fallback Assembly protocol
  flow:</t>

<figure><artwork><![CDATA[
+--------------------------+
|        PayID URI         |
|    alice$example.com     |
+--------------------------+
              |              
              v              
+--------------------------+
|Manual PayID URL Assembly |
+--------------------------+
              |              
              v              
+---------------------------+
|         PayID URL         |
| https://example.com/alice |
+---------------------------+
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="payid-discovery-jrds" title="PayID Discovery JRDs">
<t>This document defines two JRDs that conform to section 4.4 of the
  Webfinger RFC.</t>

<section anchor="jrd-for-payid-discovery-url" title="JRD for PayID Discovery URL">
<t>This type of JRD can be used to represent a URL that is a PayID Discovery
  URL. This is useful for delegating PayID Discovery to another service
  endpoint:</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">https://payid.org/ns/payid-discovery-url/1.0</spanx></t>
  <t>'href': A PayID Discovery URL that clients can dereference to perform
        interactive PayID Discovery.</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID Discovery URL:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-discovery-url/1.0",
  "href": "https://delegate.example.com/.well-known/webfinger?resource=
           payid%3Aalice%24example.com"
}
]]></artwork></figure>

</section>
<section anchor="jrd-for-payid-uri-template" title="JRD for PayID URI Template">
<t>This type of JRD can be used to represent a URL that is a PayID URL
  Template.</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">https://payid.org/ns/payid-uri-template/1.0</spanx></t>
  <t>'template': A PayID URI Template</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID URI Template:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-uri-template/1.0",
  "template": "https://example.com/{acctpart}"
}                
]]></artwork></figure>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">
<t>Various security considerations should be taken into account for PayID
Discovery.</t>

<t>Among other resource, consult section 9 of <xref target="RFC7033"></xref> and section 7 of
<xref target="RFC3986"></xref> for important security considerations involved in PayID
Discovery.</t>

<section anchor="hosted-payid-discovery-services" title="Hosted PayID Discovery Services">
<t>As with most services provided on the Internet, it is possible for a domain
owner to utilize "hosted" WebFinger services. Consult section 7 of
<xref target="RFC7033"></xref> for considerations that could apply to both "manual" and
"interactive" PayID Discovery when hosted by a third-party.</t>

</section>
<section anchor="cross-origin-resource-sharing-cors" title="Cross-Origin Resource Sharing (CORS)">
<t>PayID Discovery resources might not be accessible from a web browser due to
"Same-Origin" policies. See section 5 of <xref target="RFC7033"></xref> for CORS considerations
that apply to both "manual" and "interactive" PayID Discovery modes.</t>

</section>
<section anchor="access-control" title="Access Control">
<t>As with all web resources, access to the PayID Discovery resource could
require authentication. See section 6 of <xref target="RFC7033"></xref> for Access Control
considerations that could apply to both "manual" and "interactive" PayID
Discovery modes.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="new-link-relation-types" title="New Link Relation Types">
<t>This document defines the following Link relation types per <xref target="RFC7033"></xref>.
See section 3 for examples of each type of Link.</t>

<section anchor="payid-discovery-url" title="PayID Discovery URL">

<t><list style="symbols">
  <t>Relation Type ('rel'): <spanx style="verb">https://payid.org/ns/payid-discovery-url/1.0</spanx></t>
  <t>Media Type: <spanx style="verb">application/jrd+json</spanx></t>
  <t>Description: PayID Discovery URL, version 1.0</t>
</list></t>

</section>
<section anchor="payid-discovery-uri-template" title="PayID Discovery URI Template">

<t><list style="symbols">
  <t>Relation Type ('rel'): <spanx style="verb">https://payid.org/ns/payid-uri-template/1.0</spanx></t>
  <t>Media Type: <spanx style="verb">application/jrd+json</spanx></t>
  <t>Description: PayID Discovery URI Template, version 1.0</t>
</list></t>

</section>
</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>This document was heavily influenced by, and builds upon, Webfinger
<xref target="RFC7033"></xref> (adapted for a payments use-case) as well as the supporting
RFCs that it relies upon and that influenced it, especially <xref target="RFC5988"></xref> and
<xref target="RFC6415"></xref>. The author would like to acknowledge the contributions of
everyone who worked on those and any related specifications.</t>

<t>In addition, the author would like to acknowledge everyone who provided
feedback and use-cases for this derivative specification.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC3986;
&RFC4627;
&RFC6570;
&RFC7033;
&RFC7230;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC5988;
&RFC6415;


    </references>



  </back>

<!-- ##markdown-source:
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
kBVDSwAA

-->

</rfc>

