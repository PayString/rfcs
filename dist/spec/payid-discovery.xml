<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3986 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml">
<!ENTITY RFC4627 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4627.xml">
<!ENTITY RFC6570 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6570.xml">
<!ENTITY RFC7033 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7033.xml">
<!ENTITY RFC7230 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7230.xml">
<!ENTITY RFC5988 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5988.xml">
<!ENTITY RFC6415 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6415.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-fuelling-payid-discovery-01" category="std">

  <front>
    <title>PayID Discovery</title>

    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>fuelling@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="May" day="14"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID Discovery protocol, which can be used
to discover information about a 'payid' URI using standard HTTP methods.</t>

<t>The primary use-case of this protocol is to define how to transform a 
PayID URI into a URL that can be used with other protocols.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a part of the <eref target="https://payid.org/">PayID Protocol</eref> work.
 Feedback related to this specification should be sent to <eref target="mailto:payid@ripple.com">payid@ripple.com</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">
<t>PayID Discovery is used to transform a PayID URI <xref target="PAYID-URI"></xref> into a
   URL (defined below as a PayID Discovery URL) that can then be used by 
   higher-order protocols to discover metadata about a PayID-enabled service
   provider.</t>

<t>This document specifies two modes of PayID discovery: one using
   Webfinger <xref target="RFC7033"></xref> to resolve a corresponding PayID Discovery URL
   from a PayID using an interactive protocol. The second mode uses a manual 
   mechanism to assemble a PayID Discovery URL from a PayID by-hand.</t>

<t>In 'interactive' mode, a PayID can be presented to a Webfinger-enabled 
   service endpoint that supports PayID Discovery. The resource returns a
   Webfinger-compliant JavaScript Object Notation (JSON) <xref target="RFC4627"></xref> object 
   that can be used to perform PayID Discovery as defined in section 4.1 of
   this document.</t>

<t>As an alternative, "manual" mode MAY be used to decompose a PayID into a
   URL, without any intermediate server interaction by simply transposing
   portions of a PayID URI into a URL format. This procedure is defined in
   section 4.2 of this document.</t>

<t>It should be noted that "manual" mode does not allow divergence between the
   string characters in a PayID URI and any corresponding PayID URL. 
   Interactive mode, on the other hand, does allow such divergence, and is 
   thus more powerful. For example, in manual mode, the PayID
   'alice$example.com' MUST always map to the URL 
   'https://example.com/alice', whereas in interactive mode that same
   PayID URI can map to any arbitrary URL structure determined by the
   service provider, such as 'https://example.com/users/alice'.</t>

<t>Information returned via PayID Discovery might be used for direct human
   consumption (e.g., looking up someone's Bitcoin address), or it might be
   used by systems to help carry out some operation (e.g., facilitating,
   with additional security mechanisms, protocols to support compliance or 
   other legal requirements necessary to facilitate a payment).</t>

<t>The information returned via this protocol is intended to be static
   in nature. As such, PayID Discovery is not intended to be used to return
   dynamic information like a payment account balance or the current
   status of a payment account.</t>

<t>PayID Discovery is designed to be used across many applications. Use of 
   PayID Discovery is illustrated in the examples in Section 3 and
   described more formally in Section 4.</t>

</section>
<section anchor="terminology" title="Terminology">
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   <xref target="RFC2119"></xref>.</t>

</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows sample uses of PayID Discovery in several
   hypothetical scenarios.</t>

<section anchor="payid-discovery-by-a-wallet" title="PayID Discovery by a Wallet">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet
   provider that Alice has an account on. Alice would log-in to the wallet
   provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the
   wallet UI to start the payment.</t>

<t>The Wallet application would first perform a WebFinger query looking for 
   the PayID Discovery service provider, like this:</t>

<figure><artwork><![CDATA[
 GET /.well-known/webfinger?
       resource=payid%3Abob%24receiver.example.com
       HTTP/1.1
 Host: receiver.example.com
]]></artwork></figure>

<t>The server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json

 {
   "subject" : "payid:bob$receiver.example.com",
   "links" :
   [
     {  
       "rel": "https://payid.org/ns/payid-uri-template/1.0",
       "template": "https://receiver.example.com/users/{acctpart}"
     }
   ]
 }
]]></artwork></figure>

<t>Alice's wallet then uses the URL template found in the <spanx style="verb">template</spanx> property
   to assemble the specified PayId URL, 
   <spanx style="verb">https://receiver.example.com/users/bob</spanx>.</t>

<t>Per <xref target="RFC7033"></xref>, Webfinger requests can be filtered by using a "rel" 
   parameter in the Webfinger request. Because support for the "rel" parameter
   is not required nor guaranteed, the client must not assume the "links" 
   array will contain only the link relations related to PayID Discovery.</t>

</section>
<section anchor="payid-discovery-with-default-template" title="PayID Discovery with Default Template">
<t>Suppose Alice, as in the example above, wishes to send a friend some XRP
  from a web-based wallet provider that Alice has an account on. However, in 
  this example, let's assume that the PayID Alice is wanting to pay doesn't 
  support "interactive" PayID discovery (i.e., the receiver's server doesn't 
  support Webfinger).</t>

<t>Alice would log-in to her wallet provider and enter Bob's PayID (say
  <spanx style="verb">bob$receiver.example.com</spanx>) to make a payment.</t>

<t>The Wallet application would first attempt a WebFinger query as in the 
  example above, like this:</t>

<figure><artwork><![CDATA[
  GET /.well-known/webfinger?
        resource=payid%3Abob%24receiver.example.com&
        HTTP/1.1
  Host: receiver.example.com
]]></artwork></figure>

<t>However, in this case the <spanx style="verb">receiver.example.com</spanx> server doesn't support 
  "interactive" PayID Discovery, so the server responds like this:</t>

<figure><artwork><![CDATA[
  HTTP/1.1 404 NOT FOUND
]]></artwork></figure>

<t>Because Alice's Wallet can utilize "manual" PayID Discovery, the wallet
  software merely transforms <spanx style="verb">bob$receiever.example.com</spanx> into the URL 
  <spanx style="verb">https://receiver.example.com/bob</spanx>. Alice's wallet then uses that URL to 
  continue making a PayID payment.</t>

<t>It should be noted that "manual" mode does not allow the PayID URI to
  diverge from the underlying URL returned via PayID Discovery. Because of
  this, "interactive" PayID Discovery is generally preferred.</t>

</section>
</section>
<section anchor="payid-discovery-protocol" title="PayID Discovery Protocol">
<t>The PayID Discovery protocol is used to request information about an entity
  identified by a PayID URI.</t>

<t>When successful, PayID Discovery always yields a PayID URL, which is a
  URI as defined by <xref target="RFC3986"></xref> using the 'https' scheme defined in section
  2.7.2 <xref target="RFC7230"></xref>. A PayID URL can be used for any purposes outside the
  scope of this document.</t>

<t>PayID Discovery is performed using one of two modes: "interactive" or
  "manual." Clients MUST attempt "interactive" mode first. If that
  mode fails to yield a PayID URL, then "manual" mode MAY be used as an
  alternative discovery mechanism.</t>

<section anchor="interactive-mode" title="Interactive Mode">
<t>Interactive PayID Discovery is broken up into a series of steps, each of
  which is defined in more detail below. The following is a visual
  representation of the protocol flow:</t>

<figure><artwork><![CDATA[
                    +--------------------------+                    
                    |        PayID URI         |                    
                    |    alice$example.com     |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |         Assemble         |                    
                    |   PayID Discovery URL    |                    
                    +--------------------------+                    
                                  |                                 
                                  v                                 
                    +--------------------------+                    
                    |          Query           |                    
              +-----|   PayID Discovery URL    |-----+              
              |     +--------------------------+     |              
              |                                  Success            
              |                                      |              
              |                                      v              
              |                        +---------------------------+
          Failure                      |   Parse PayID Metadata    |
              |                        +---------------------------+
              |                                      |              
              |                                      v              
              |                        +---------------------------+
              |                        | Select PayID URI Template |
              |                        +---------------------------+
              |                                      |              
              v                                      v              
+--------------------------+           +---------------------------+
|  Manual PayID Discovery  |           |    Assemble PayID URL     |
+--------------------------+           +---------------------------+
              |                                      |              
              +---------------------+----------------+              
                                    |                               
                                    v                               
                      +---------------------------+                 
                      |         PayID URL         |                 
                      | https://example.com/alice |                 
                      +---------------------------+                 
]]></artwork></figure>

<section anchor="step-1-assemble-payid-discovery-url" title="Step 1: Assemble PayID Discovery URL">
<t>PayID Discovery utilizes the Webfinger <xref target="RFC7033"></xref> specification in a 
  narrowly defined profile.</t>

<t>This document defines a PayID Discovery URL as being a Webfinger 
  resource URI where the specified resource value is a valid PayID 
  URI <xref target="PAYID-URI"></xref>.</t>

<t>For example, the PayID Discovery URL for alice$example.com is</t>

<figure><artwork><![CDATA[
 https://example.com/.well-known/webfinger?resource=payid%3Abob%24example.com
]]></artwork></figure>

</section>
<section anchor="step-2-query-payid-discovery-url" title="Step 2: Query PayID Discovery URL">
<t>A Webfinger query MUST be performed against the PayID Disovery URL,
  as described in section 4.2 of Webfinger.</t>

<t>In response, the WebFinger resource returns a JSON Resource Descriptor (JRD)
  as the resource representation to convey information about the requested 
  PayID.</t>

<t>If the Webfinger endpoint returns a non-200 HTTP response status code, then
  interactive PayID Discovery is considered to have failed. Clients MAY 
  attempt to assemble a PayID URL using "manual" mode as defined in section
  4.2.1 of this document.</t>

</section>
<section anchor="step-3-parse-payid-metadata" title="Step 3: Parse PayID Metadata">
<t>If the PayID Discovery server returns a valid response, the response will
  contain one or more of the JRDs defined in section 5 of this document.</t>

<t>If any of the JRDs contain a 'rel' value that represents a PayID URL
  Template, then that template value MUST be used in the next protocol step.</t>

<t>Failing the above, if the 'rel' value of any JRDs represents a PayID
  Discovery URL, then that URL MUST be used in step 2 above, repeated
  recursively if needed, until a valid PayID URI Template is obtained. 
  That URI Template value MUST be used in the next protocol step.</t>

</section>
<section anchor="step-4-assemble-payid-url" title="Step 4: Assemble PayID URL">
<t>A PayID URL is constructed by applying the PayID URI to the PayID URI
   Template string obtained in the step above. The PayID URI template MAY
   contain a URI string without any variables to represent a host-level
   PayID URL that is identical for every PayID URI on a particular host.</t>

<t>For example, a PayID Discovery endpoint that only supports a single account
   might use a URI template string with no variables, like this:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-uri-template/1.0",
  "template": "https://example.com/alice"
}
]]></artwork></figure>

<t>The result of this step is the PayID URL. Once obtained, PayID Discovery
   is considered to have completed successfully.</t>

<section anchor="template-syntax" title="Template Syntax">
<t>This specification defines a simple template syntax for PayID URI
   transformation.  A template is a string containing brace-enclosed
   ("{}") variable names marking the parts of the string that are to be
   substituted by the corresponding variable values.</t>

<t>This specification defines a one variable – "acctpart" – which 
   corresponds to the 'acctpart' of a PayID URI as defined in <xref target="PAYID-URI"></xref>.</t>

<t>When substituting the 'acctpart' value into a URI 'path' as defined by
   <xref target="RFC3986"></xref>, values MUST NOT be percent or otherwise encoded because the
   'acctpart' value of a PayID URI always conforms to the character set
   allowed by paths in <xref target="RFC3986"></xref>.</t>

<t>However, before substituting template variables into a URI 'query' part,
   values MUST be encoded using UTF-8, and any character other than
   unreserved (as defined by <xref target="RFC3986"></xref>) MUST be percent-encoded per <xref target="RFC3986"></xref>.</t>

<t>Protocols MAY define additional variables and syntax rules, but MUST NOT 
   change the meaning of the 'acctpart' variable. If a client is unable to
   successfully process a template (e.g., unknown variable names, unknown or 
   incompatible syntax), the JRD SHOULD be ignored.</t>

<t>The template syntax ABNF is as follows:</t>

<figure><artwork><![CDATA[
uri-char     =  ( reserved / unreserved / pct-encoded )
var-char     =  ALPHA / DIGIT / "." / "_"
var-name     =  %x61.63.63.74.70.61.72.74 / ( 1*var-char ) ; "acctpart" or
                                                              other names
variable     =  "{" var-name "}"
PAYID-URI-Template =  *( uri-char / variable )
]]></artwork></figure>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    alice$example.org
 Template: https://example.org/{acctpart}
 Output:   https://example.org/alice
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="fallback-mode" title="Fallback Mode">
<t>If "Interactive" mode is not supported or otherwise fails to yield a PayID
  URL, then a PayID URL MAY be assembled manually using the following
  predefined ruleset:</t>

<t><list style="numbers">
  <t>Decompose the PayID URI into its component parts, per <xref target="PAYID-URI"></xref>, 
capturing the 'acctpart' and 'host' values.</t>
  <t>Using the 'acctpart' and 'host', assemble a URL by substituting each
   value into the following string using no special encoding or other
   character adjustments: <spanx style="verb">https://{host}/{acctpart}</spanx>.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
 Input:    bob.primary$example.org
 Output:   https://example.org/bob.primary
]]></artwork></figure>

<t>The resulting URL is a PayID URL.</t>

<section anchor="fallback-assembly-flow" title="Fallback Assembly Flow">
<t>The following is a visual representation of the Fallback Assembly protocol
  flow:</t>

<figure><artwork><![CDATA[
+--------------------------+ 
|        PayID URI         | 
|    alice$example.com     | 
+--------------------------+ 
              |              
              v              
+--------------------------+ 
|Manual PayID URL Assembly | 
+--------------------------+ 
              |              
              v              
+---------------------------+
|         PayID URL         |
| https://example.com/alice |
+---------------------------+
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="payid-discovery-jrds" title="PayID Discovery JRDs">
<t>This document defines two JRDs that conform to section 4.4 of the
  Webfinger RFC.</t>

<section anchor="jrd-for-payid-discovery-url" title="JRD for PayID Discovery URL">
<t>This type of JRD can be used to represent a URL that is a PayID Discovery
  URL. This is useful for delegating PayID Discovery to another service
  endpoint:</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">https://payid.org/ns/payid-discovery-url/1.0</spanx></t>
  <t>'href': A PayID Discovery URL that clients can dereference to perform
        interactive PayID Discovery.</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID Discovery URL:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-discovery-url/1.0",
  "href": "https://delegate.example.com/.well-known/webfinger?resource=
           payid%3Aalice%24example.com"
}
]]></artwork></figure>

</section>
<section anchor="jrd-for-payid-uri-template" title="JRD for PayID URI Template">
<t>This type of JRD can be used to represent a URL that is a PayID URL
  Template.</t>

<t><list style="symbols">
  <t>'rel': <spanx style="verb">https://payid.org/ns/payid-uri-template/1.0</spanx></t>
  <t>'template': A PayID URI Template</t>
</list></t>

<t>The following is an example of a JRD that indicates a PayID URI Template:</t>

<figure><artwork><![CDATA[
{
  "rel": "https://payid.org/ns/payid-uri-template/1.0",
  "template": "https://example.com/{acctpart}"
}                
]]></artwork></figure>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">
<t>Various security considerations should be taken into account for PayID
Discovery.</t>

<t>Among other resource, consult section 9 of <xref target="RFC7033"></xref> and section 7 of
<xref target="RFC3986"></xref> for important security considerations involved in PayID
Discovery.</t>

<section anchor="hosted-payid-discovery-services" title="Hosted PayID Discovery Services">
<t>As with most services provided on the Internet, it is possible for a domain
owner to utilize "hosted" WebFinger services. Consult section 7 of 
<xref target="RFC7033"></xref> for considerations that could apply to both "manual" and
"interactive" PayID Discovery when hosted by a third-party.</t>

</section>
<section anchor="cross-origin-resource-sharing-cors" title="Cross-Origin Resource Sharing (CORS)">
<t>PayID Discovery resources might not be accessible from a web browser due to
"Same-Origin" policies. See section 5 of <xref target="RFC7033"></xref> for CORS considerations
that apply to both "manual" and "interactive" PayID Discovery modes.</t>

</section>
<section anchor="access-control" title="Access Control">
<t>As with all web resources, access to the PayID Discovery resource could
require authentication. See section 6 of <xref target="RFC7033"></xref> for Access Control
considerations that could apply to both "manual" and "interactive" PayID
Discovery modes.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="new-link-relation-types" title="New Link Relation Types">
<t>This document defines the following Link relation types per <xref target="RFC7033"></xref>.
See section 3 for examples of each type of Link.</t>

<section anchor="payid-discovery-url" title="PayID Discovery URL">

<t><list style="symbols">
  <t>Relation Type ('rel'): <spanx style="verb">https://payid.org/ns/payid-discovery-url/1.0</spanx></t>
  <t>Media Type: <spanx style="verb">application/jrd+json</spanx></t>
  <t>Description: PayID Discovery URL, version 1.0</t>
</list></t>

</section>
<section anchor="payid-discovery-uri-template" title="PayID Discovery URI Template">

<t><list style="symbols">
  <t>Relation Type ('rel'): <spanx style="verb">https://payid.org/ns/payid-uri-template/1.0</spanx></t>
  <t>Media Type: <spanx style="verb">application/jrd+json</spanx></t>
  <t>Description: PayID Discovery URI Template, version 1.0</t>
</list></t>

</section>
</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">
<t>This document was heavily influenced by, and builds upon, Webfinger
<xref target="RFC7033"></xref> (adapted for a payments use-case) as well as the supporting
RFCs that it relies upon and that influenced it, especially <xref target="RFC5988"></xref> and
<xref target="RFC6415"></xref>. The author would like to acknowledge the contributions of 
everyone who worked on those and any related specifications.</t>

<t>In addition, the author would like to acknowledge everyone who provided
feedback and use-cases for this derivative specification.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC3986;
&RFC4627;
&RFC6570;
&RFC7033;
&RFC7230;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC5988;
&RFC6415;


    </references>



  </back>

<!-- ##markdown-source:
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

-->

</rfc>

