<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2818 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml">
<!ENTITY RFC6265 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6265.xml">
<!ENTITY RFC7231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7231.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY RFC6570 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6570.xml">
<!ENTITY RFC8446 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
<!ENTITY RFC5988 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5988.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="payid-easy-checkout-protocol" category="std">

  <front>
    <title>Draft 1 - PayID Easy Checkout Protocol</title>

    <author initials="N." surname="Kramer" fullname="Noah Kramer">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>nkramer@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>
    <author initials="I." surname="Simpson" fullname="Ian Simpson">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>isimpson@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="July" day="21"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification formalizes how a payment recipient, such as a merchant or a non-profit, can automatically 
initiate a payment from a payer using only the payer's PayID.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a draft proposal, and is part of the <eref target="https://payid.org/">PayID Protocol</eref> initiative. Feedback related to this document should be sent in the form of a Github issue at: https://github.com/payid-org/rfcs/issues.</t>


    </note>


  </front>

  <middle>


<section anchor="terminology" title="Terminology">

<t>This protocol can be referred to as the <spanx style="verb">PayId Easy Checkout Protocol</spanx>. It uses the following terminology:</t>

<t><list style="symbols">
  <t>PayID client: a client that queries a PayID server using the PayID Protocol as defined in [PAYID-PROTOCOL][].</t>
  <t>PayID server: the endpoint that returns payment account(s) information, which conforms to the PayID Protocol.</t>
  <t>Merchant: Individual or entity receiving a payment (e.g., e-commerce merchant, charity).</t>
  <t>Payer: Individual or entity originating a payment to a <spanx style="verb">merchant</spanx>.</t>
  <t>Wallet: A device or application that holds funds (may be a non-custodial wallet).</t>
  <t>PayID Easy Checkout URL: The URL that is the result of the PayID Easy Checkout protocol; can be used to redirect a client to a wallet corresponding to a particular PayID.</t>
</list></t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> and [RFC9174][].</t>

</section>
<section anchor="introduction" title="Introduction">

<t>The PayID Easy Checkout Protocol is a minimal protocol that allows an online merchant to
request a payment from a payer using only the payer's PayID. Implementations
of the protocol should require little to no server-side engineering efforts, while creating an improved and uniform
user experience for payers.</t>

<t>The main focus of the Protocol is on PayID Easy Checkout Discovery, which defines how a PayID client can use a PayID
to retrieve a PayID Easy Checkout URL which represents a resource that the payer's digital wallet can use to initiate 
a payment to the merchant.</t>

<t>Though the <xref target="appendix"></xref> of this specification provides an example usage of a 
PayID Easy Checkout URL using Web Redirects, supplemental RFCs are needed to define the different ways in which a PayID
client can utilize a PayID Easy Checkout URL.</t>

</section>
<section anchor="payid-easy-checkout-protocol" title="PayID Easy Checkout Protocol">
<t>The PayID Easy Checkout Protocol can be used to facilitate an end-to-end checkout flow between a recipient client, such
as an online merchant UI, and a sending client, such as a wallet.</t>

<t>The protocol is comprised of two parts:</t>

<t><list style="numbers">
  <t>PayID Easy Checkout Discovery</t>
  <t>PayID Easy Checkout URL Assembly</t>
</list></t>

<section anchor="payid-easy-checkout-discovery" title="PayID Easy Checkout Discovery">
<t>PayID Easy Checkout extends <xref target="PAYID-DISCOVERY"></xref> by defining a new link in the PayID metadata JRD
returned by a PayID Discovery query. This link, defined in the <xref target="payid-easy-checkout-jrds">JRD section</xref> 
of this specification, includes the PayID Easy Checkout URL representing a resource on the wallet which can
be used to complete a payment.</t>

<t>E-commerce merchants who wish to initiate an Easy Checkout flow MUST query the sender's PayID Discovery server to 
obtain a PayID Easy Checkout URL. Digital wallets and PayID server operators who wish to enable PayID Easy
Checkout MUST include a JRD Link conforming to the definition in the <xref target="payid-easy-checkout-jrds">JRD section</xref> of this paper 
in all PayID Easy Checkout Discovery responses.</t>

<t>E-commerce merchants SHOULD implement fallback measures to complete a checkout flow if a user's wallet does not support PayID Easy Checkout.</t>

<t>The following steps describe how a PayID client can query a PayID server to obtain a PayID Easy Checkout URL.</t>

<section anchor="step-1-assemble-payid-easy-checkout-discovery-url" title="Step 1: Assemble PayID Easy Checkout Discovery URL">
<t>The process of assembling a PayID Discovery URL is defined in section 4.1.1 of <xref target="PAYID-DISCOVERY"></xref>, and is
the same as for PayID Easy Checkout Discovery.</t>

</section>
<section anchor="step-2-query-payid-easy-checkout-discovery-url" title="Step 2: Query PayID Easy Checkout Discovery URL">
<t>Querying the PayID Discovery URL is defined in section 4.1.2 of <xref target="PAYID-DISCOVERY"></xref>, and is performed
in the same way for the PayID Easy Checkout Discovery URL.</t>

<t>Clients SHOULD implement fallback measures to complete checkout if the PayID Easy Checkout Discovery query fails.</t>

</section>
<section anchor="step-3-parse-payid-easy-checkout-metadata" title="Step 3: Parse PayID Easy Checkout Metadata">
<t>If a wallet supports PayID Easy Checkout, the PayID server MUST respond with a HTTP status code 200 and a JSON payload
containing a JSON Resource Descriptor (JRD) containing a link conforming to the <xref target="payid-easy-checkout-jrds">JRD section</xref> of this paper.</t>

<t>For example, a PayID server might respond to a PayID Easy Checkout Discovery query with the following payload:</t>

<figure><artwork><![CDATA[
 {
    "subject": "payid:alice$wallet.com",
    "links": [
        {
            "rel" : "https://payid.org/ns/payid-easy-checkout/1.0",
            "href": "https://wallet.com/checkout"
        }
    ]
 }
]]></artwork></figure>

<t>The receiver PayID Discovery client must parse this response to find the PayID Easy Checkout Link. 
If the JRD returned from the PayID Easy Checkout Discovery query does not contain a 
PayID Easy Checkout Link in its 'links' collection, PayID Easy Checkout is considered to have failed.
Once a PayID Easy Checkout URL has been obtained from the PayID Easy Checkout Link by the PayID client, 
PayID Easy Checkout Discovery is considered to be complete.</t>

</section>
</section>
<section anchor="payid-easy-checkout-url-assembly" title="PayID Easy Checkout URL Assembly">
<t>The PayID Easy Checkout URL resulting from PayID Easy Checkout Discovery represents the resource on the wallet that can
be used to complete a payment. However, before directing a payer to their sending client, the PayID Easy Checkout client 
MUST append all of the query parameters defined in the <xref target="payid-easy-checkout-url-query-parameters">following section</xref>.</t>

<t>The PayID Easy Checkout URL SHOULD be parsed by the wallet client to retrieve the values set by the recipient client. 
It is RECOMMENDED that wallet clients use these values to pre-populate a payment transaction.</t>

<section anchor="payid-easy-checkout-url-query-parameters" title="PayID Easy Checkout URL Query Parameters">
<t>This specification defines several query parameter names and corresponding datatypes which MUST be added to the
PayID Easy Checkout URL before redirecting a payer to their wallet client.</t>

<texttable>
      <ttcol align='left'>Name</ttcol>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Description</ttcol>
      <c>amount</c>
      <c>integer</c>
      <c>The amount that should be sent by the sender to the receiver</c>
      <c>receiverPayID</c>
      <c>string</c>
      <c>The PayID URI of the receiver</c>
      <c>assetCode</c>
      <c>string</c>
      <c>The ISO-4217 currency code that the sender should send</c>
      <c>assetScale</c>
      <c>short</c>
      <c>Defines how many units make up one regular unit of the assetCode</c>
      <c>paymentNetwork</c>
      <c>string</c>
      <c>The payment network, as defined in [PAYID-PROTOCOL][], that the sender should send payment over.</c>
      <c>nextUrl</c>
      <c>HTTP Url string</c>
      <c>A URL that the sender's wallet can use after completing the payment</c>
</texttable>

<t>When adding values into a URI 'query' part as defined by
[RFC3986][], values with characters outside the character set allowed by query parameters in [RFC3986][]
MUST be percent or otherwise encoded.</t>

<t>Protocols MAY define additional query parameter names and syntax rules, but MUST NOT
change the meaning of the variables specified in this document.</t>

<t>For example:</t>

<figure><artwork><![CDATA[
Input:    alice$wallet.com
          amount=10
          receiverPayID=pay$merchant.com
          assetCode=XRP
          assetScale=6
          network=XRPL
          nextUrl=https://merchant.com/thankyou
PayID Easy Checkout URL: https://wallet.com/checkout
Output:   https://wallet.com/checkout?amount=100000&receiverPayId=payid%2Apay%24merchant.com&assetCode=XRP&assetScale=6&paymentNetwork=XRPL&nextUrl=https://merchant.com/thankyou
]]></artwork></figure>

</section>
</section>
</section>
<section anchor="payid-easy-checkout-jrds" title="PayID Easy Checkout JRDs">
<t>This section defines the PayID Easy Checkout Link, which conforms to section 4.4 of the
Webfinger RFC.  In order for a PayID server to enable PayID Easy Checkout, a PayID Discovery query to the server
MUST return a JRD containing a PayID Easy Checkout Link.</t>

<t>The Link MUST include the Link Relation Type defined in <xref target="iana-considerations">PayID Easy Checkout URL</xref> in the object's 'rel' field.
The Link MUST also include a PayID Easy Checkout URL in the 'href' field of the link.</t>

<figure><artwork><![CDATA[
* 'rel': `https://payid.org/ns/payid-easy-checkout-uri/1.0`
* 'href': A PayID Easy Checkout URL
]]></artwork></figure>

<t>The following is an example of a PayID Easy Checkout Link that indicates a PayID Easy Checkout URL:</t>

<figure><artwork><![CDATA[
{
    "rel": "https://payid.org/ns/payid-easy-checkout-uri/1.0",
    "href": "https://wallet.com/checkout"
}
]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">
<t>Various security considerations should be taken into account for PayID
Easy Checkout.</t>

<t>The security considerations for PayID Easy Checkout Discovery are discussed in 
section 6 of <xref target="PAYID-DISCOVERY"></xref>.</t>

<section anchor="payid-easy-checkout-redirection-uri-manipulation" title="PayID Easy Checkout Redirection URI Manipulation">
<t>When a payer uses the resource located at the PayID Easy Checkout URL, a hijacker could manipulate
the data encoded in the URL to trick the sender into sending a payment to a different PayID than was originally
requested, or manipulate other points of PayID Easy Checkout data to trick the sender.</t>

<t>Additionally, if a hijacker gained access to the merchant client, they could replace the PayID Easy Checkout URL
for the purposes of a phishing attack.</t>

<t>Current work on the PayID Protocol and its extensions may prove useful in mitigating these risks.</t>

</section>
<section anchor="access-control" title="Access Control">
<t>As with all web resources, access to the PayID Discovery resource could
require authentication. See section 6 of [RFC7033][] for Access Control
considerations.</t>

<t>Furthermore, it is RECOMMENDED that PayID servers only expose PayID Easy Checkout URLs
which resolve to a protected resource.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">
<t>## New Link Relation Types
  This document defines the following Link relation type per [RFC7033][].
  See section 3 for examples of each type of Link.</t>

<t>### PayID Easy Checkout URL</t>

<figure><artwork><![CDATA[
* Relation Type ('rel'): `https://payid.org/ns/payid-easy-checkout/1.0`
* Media Type: `application/jrd+json`
* Description: PayID Easy Checkout URL, version 1.0
]]></artwork></figure>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

</section>
<section anchor="appendix" title="Appendix">

<section anchor="motivation" title="Motivation">
<t>The PayID Easy Checkout Protocol aims to enable a consistent user experience for payers paying for goods
or services by standardizing the interaction between merchants/non-profits and customer/donor wallets.
Given the ability to assign arbitrary metadata to a PayID as defined in <xref target="PAYID-DISCOVERY"></xref>, there is an opportunity
to standardize the set of interactions between merchant and payer, specifically the process by which a merchant
directs a payer to their digital wallet to complete a payment.
We believe this protocol will enable an improved paying experience by reducing the number
of steps a payer must take to complete a transaction.</t>

<t>PayID Easy Checkout also limits the engineering effort needed to implement the protocol. 
Clients wishing to adopt this pattern should only need to implement UI-level changes in order to make the flow function 
as intended, which may aid in expanding overall adoption, further enhancing the protocol's user experience benefits.</t>

<section anchor="design-goals" title="Design Goals">

<section anchor="minimal-effort-for-the-payer" title="Minimal effort for the Payer">

<t>In order for a payer to checkout using the PayID Easy Checkout protocol, the payer only needs to provide a merchant
with their PayID Easy Checkout enabled PayID.</t>

</section>
<section anchor="no-new-server-side-software" title="No New Server-Side Software">

<t>Apart from a PayID Discovery compliant PayID Server, The PayID Easy Checkout Protocol does not require server-side 
software to be run by either the payer or merchant for a payment. The PayID server is capable of providing details 
of where to send the payer via the PayID Discovery Protocol. Assuming the wallet used by the payer has implemented 
support in their UI for the PayID Easy Checkout Protocol, the payer can be redirected to their wallet 
to complete their transaction.</t>

</section>
</section>
</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows a non-normative example of PayID Easy Checkout between a hypothetical merchant and payer. The merchant
accepts payments using the PayID pay$merchant.com, and the payer controls the PayID alice$wallet.com.</t>

<section anchor="payid-easy-checkout-initiation" title="PayID Easy Checkout Initiation">
<t>In this example, the payer might place some items in an online shopping cart on the merchant's web-site, then choose
to checkout.  The merchant would then render a form asking for the payer's PayID, as well as a "Checkout with PayID"
button.  Once the payer inputs their PayID <spanx style="verb">alice$wallet.com</spanx> and clicks the "Checkout with PayID" button, the merchant
begins the PayID Easy Checkout flow.</t>

</section>
<section anchor="payid-easy-checkout-wallet-discovery" title="PayID Easy Checkout Wallet Discovery">
<t>The merchant UI would first assemble the PayID Easy Checkout URL as defined in <xref target="payid-easy-checkout-discovery">PayID Easy Checkout Discovery</xref>,
yielding the URL <spanx style="verb">https://wallet.com/.well-known/webfinger?resource=payid%3Aalice%24wallet.com</spanx>. 
The merchant UI would then <xref target="step-2-query-payid-easy-checkout-discovery-url">query the assembled URL</xref>.</t>

<t>The HTTP request in this example would look like this:</t>

<figure><artwork><![CDATA[
GET /.well-known/webfinger?resource=payid%3Aalice%24wallet.com
Host: wallet.com
]]></artwork></figure>

<t>If the payer's PayID server has enabled PayID Easy Checkout in their wallet, the server would respond with something like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json

 {
   "subject" : "payid:alice$wallet.com",
   "links" :
   [
     {  
       "rel": "https://payid.org/ns/payid-easy-checkout/1.0",
       "template": "https://wallet.com/checkout"
     }
   ]
 }
]]></artwork></figure>

</section>
<section anchor="assemble-payid-easy-checkout-url-with-query-parameters" title="Assemble PayID Easy Checkout URL with Query Parameters">
<t>The merchant UI would parse the PayID Discovery response and iterate over the 'links' collection to find the link with 
the Relation Type of "https://payid.org/ns/payid-easy-checkout/1.0". The merchant UI would then add all of the query
parameters defined in <xref target="payid-easy-checkout-url-query-parameters">PayID Easy Checkout URL Query Parameters</xref> to the URL included in the JRD Link. 
One query parameter of note is the "nextUrl" parameter, which allows the merchant to supply a redirect or callback URL 
for the sender's wallet to call once the payer has confirmed the payment. In this example, the merchant would like 
to display a "Thank You" page, and replaces <spanx style="verb">{nextUrl}</spanx> with <spanx style="verb">https://merchant.com/thankyou</spanx>.</t>

<section anchor="correlating-a-payment-to-an-invoice" title="Correlating a Payment to an Invoice">
<t>Merchants and non-profits will often times need to correlate discrete layer 1 payments to invoice or transaction entities
in the merchants' native systems. The merchant in this example may have an invoice tracking system, on which an invoice
gets created for the goods that the payer is buying with a unique identifier of <spanx style="verb">1045464</spanx>. A common practice for correlating
layer 1 payments to a specific transaction or invoice is to accept payments on a different layer 1 address for each invoice
so that the merchant can listen for payments into that address and tie the payment to the invoice.  However, because
the PayID Easy Checkout URL only provides the receiver's PayID, there is currently no way to associate the address that
is given to the payer to the invoice.</t>

<t>In order to accomplish this, a merchant could provide a unique PayID containing the invoice identifier 
for each PayID Easy Checkout transaction. In this example, the merchant would first associate a payment address with the
invoice ID, and would then redirect the payer to their wallet with the <spanx style="verb">receiverPayID</spanx> query parameter set to <spanx style="verb">pay-1045464$merchant.com</spanx>.
When the merchant PayID server receives a query for the address associated with that PayID, they could return the previously
stored payment address. When the merchant receives a payment to that address, they can then associate the layer 1 payment
with the invoice.</t>

</section>
</section>
<section anchor="redirect-payer-to-their-wallet" title="Redirect Payer to Their Wallet">
<t>Once the merchant UI populates the required query parameters in the URL template, the merchant UI redirects the payer to 
the Redirect URL so that the payer can confirm the payment.</t>

</section>
<section anchor="payer-confirms-payment" title="Payer Confirms Payment">
<t>After the payer clicks the "Pay with PayID" button the merchant's UI, and the merchant performs the previous steps,
the payer will be redirected to the Redirect URL, which is a front end resource of the wallet. The wallet UI can
read the query parameters from the Redirect URL and render a confirmation page or modal with all of the required fields
pre-populated.</t>

<t>Once the payer confirms the payment, the wallet would perform a PayID address lookup on the "receiverPayId" query
parameter to get the payment address of the merchant and submit a transaction to the underlying ledger or payment system.
The merchant can then redirect the user back to the URL specified in the "nextUrl" query parameter, which will display
the "Thank You" page of the merchant.</t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2818;
&RFC6265;
&RFC7231;
&RFC7413;
&RFC6570;
&RFC8446;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-DISCOVERY" >
  <front>
    <title>PayID Discovery</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC5988;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAJBfF18AA81be3PbNrb/n58C427rpFeSY8dNU93J7PXYaevd2M76sb2d
TGYNkZCEmiK0BGlF2/S73/MAQJCi7CRzZ2czs1uLDwDn/TsPDofDJDWZLmZj
UVfT4cskqXSVq7E4KeW0EvtiKN7K9emJeC3tWhzPVXpn6kq8LU1lUpMnmUkL
uYDnl3Kts6GCp4ape2q49E+lslIzU67HwlZZkiz1WLyDOwNhTVmVamrhr/WC
/0jNYqGKyr5P7EKW1T/+WZtK2bEw02mSyFJJWESldamrdSLram7KcSLEEP4n
hC7gwfOR+GsJZyrpEp/u3Mh5fNWUQPClXi5zRb8tnEJVY/F8/ztxZopqZuDJ
tbiiy/RECvuNxZUsxI+lLFJtU0PXSzXTphiL4yN+zGSw3Q+H+88O3e+6qJDw
myv6vZybAh4Ydv/RTbWQOh+L4o4O+j8lnW8EDKG7QPJYzKtqacd7e6vVatS6
HzHgdCSu9GJpTRFx4BROHl/9j+aAtnzSz2FBUphyISt9r8b07OWPxwf7+z80
P17uvww/Xhy8+C78+P7g+X7z43D/efPYd98/Cz9eHh6+4B9vj349PRneXJ7y
TyGczexcz5XYJUvYFXBbXIEpLNSOf0qWM2SxJ6CaZCP1QS4cBXvusUap+R/J
9GQkfqxVnoOlhhvTOs9ZuCfyXmftB/iMJ6dXxxd/f335a/ekbNQnKMR7kPPO
/9veiS6mG4L47oeXwPsEpCwKsOZ//KhUNpHpXZJcz7UVdqlSPdXgJUCRQPhC
iozcDziQpbEyHwhZZHhjCR4BPIGogNHvmAbvit4/8XwlAYxAwfeeAgG60nQY
IMLtChqbg0PKRGVgIVgVnFiNPkfYuanzTEwUuBj4qQvaCOnBTaX4SVfzegIH
sbUSMhLljG6QFNkR4u7lNLV79KwdJYKolxOwM5lWfXQT23L9L2XF3KxgN1iJ
TlXCU0sNf4GXrNO5kMggsM50LuGuKeFXYQr0tlMNz6RgoSBHgzJIZZ6vReK4
oKJFp6VZ8E9VitqC6IQp4FkkmC7uWvb8I8GCW+gsA1+RfCWuVbnQhcnNbO0E
6B097Q3cA0+uypI5DKfFNW9xsWxLGLkdidMKTqGsY3iemxUeqWq2ImVKvnXh
KM2RIWOggP+C92Ql/lmrUitkDz9lVXkfyMOV2yqDZ8vUVBdwUpD1O7aZt5cX
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
6exGAAA=

-->

</rfc>

