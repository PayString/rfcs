<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2818 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml">
<!ENTITY RFC8446 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
<!ENTITY RFC7231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7231.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY RFC6265 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6265.xml">
<!ENTITY RFC5988 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5988.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="payid-easy-checkout-protocol" category="std">

  <front>
    <title>Draft 1 - PayID Easy Checkout Protocol</title>

    <author initials="N." surname="Kramer" fullname="Noah Kramer">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>nkramer@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>
    <author initials="I." surname="Simpson" fullname="Ian Simpson">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>isimpson@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="July" day="13"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification formalizes how a payment recipient, such as a merchant or a non-profit, can automatically navigate 
a user to the user's wallet using only a PayID for the purposes of completing an online payment such as a checkout or
donation flow.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a draft proposal, and is part of the <eref target="https://payid.org/">PayID Protocol</eref> initiative. Feedback related to this document should be sent in the form of a Github issue at: https://github.com/payid-org/rfcs/issues.</t>


    </note>


  </front>

  <middle>


<section anchor="terminology" title="Terminology">

<t>This protocol can be referred to as the <spanx style="verb">PayId Easy Checkout Protocol</spanx>. It uses the following terminology:
* PayID client: a client that queries a PayID server using the PayID Protocol as defined in [PAYID-PROTOCOL][].
* PayID server: the endpoint that returns payment account(s) information, which conforms to the PayID Protocol.
* merchant: individual or entity receiving the payment (ie e-commerce merchant, charity).
* customer: individual or entity originating the payment to the <spanx style="verb">merchant</spanx>.
* wallet: the holder of funds for the <spanx style="verb">sender</spanx> (may or may not be custodied).
* Redirect URL: The URL that is the result of the PayID Easy Checkout protocol, and which can be used to redirect a client to a wallet corresponding to a particular PayID.</t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> and [RFC9174][].</t>

</section>
<section anchor="introduction" title="Introduction">

<t>The PayID Easy Checkout Protocol is a minimal protocol designed to provide a set of standard APIs and flows, 
which can be used to send payments between two entities in a way that requires:
* minimal effort for the user initiating the transaction.
* no server-side software specific to PayID or its protocols for servicing the transaction.
* only UI-based solutions.</t>

</section>
<section anchor="payid-easy-checkout-protocol" title="PayID Easy Checkout Protocol">
<t>The PayID Easy Checkout Protocol can be used to facilitate an end-to-end checkout flow between a recipient client, such
as an online merchant UI, and a wallet client.</t>

<t>The protocol is comprised of several parts:
1) PayID Easy Checkout Discovery
2) Recipient client redirection to wallet client
3) Payment confirmation
4) Wallet client redirection to recipient client</t>

<t>While PayID Easy Checkout Discovery and the general user flow must be standardized to create a uniform API across 
all participants, the manner by which recipient clients and wallet clients handle displaying parts of the checkout flow,
along with individual entities' business logic around checkout, is out of scope for this RFC.</t>

<section anchor="payid-easy-checkout-discovery" title="PayID Easy Checkout Discovery">
<t>PayID Easy Checkout extends <xref target="PAYID-DISCOVERY"></xref> by defining a new link in the PayID metadata JRD
returned by a PayID Discovery query. This link, defined in section (TODO: link to jrd section) 
of this specification, includes the PayID Easy Checkout URI Template necessary to redirect a customer to their wallet
client.</t>

<t>E-commerce receivers who wish to perform Easy Checkout MUST query the PayID Discovery server to obtain a PayID Easy Checkout
URL. Digital wallets who wish to enable PayID Easy Checkout JRD Link, as defined in section (TODO: link to jrd section) 
of this paper.</t>

<t>E-commerce receivers SHOULD implement fallback measures to complete checkout if a user's wallet does not support PayID Easy Checkout.</t>

<t>The following steps describe how a PayID client can query a PayID server to obtain a PayID Easy Checkout JRD Link,
as well as how to assemble the PayID Easy Checkout URL from that template URI.</t>

<section anchor="step-1-assemble-payid-easy-checkout-discovery-url" title="Step 1: Assemble PayID Easy Checkout Discovery URL">
<t>The process of assembling a PayID Discovery URL is defined in section 4.1.1 of <xref target="PAYID-DISCOVERY"></xref>, and is
the same as for PayID Easy Checkout Discovery. The result of assembling this URL is the PayID Easy Checkout Discovery URL.</t>

</section>
<section anchor="step-2-query-payid-discovery-url" title="Step 2: Query PayID Discovery URL">
<t>A Webfinger query MUST be performed against the PayID Easy Checkout Discovery URL,
as described in section 4.2 of Webfinger.</t>

<t>In response, the WebFinger resource returns a JSON Resource Descriptor (JRD)
as the resource representation to convey information about the requested
PayID.</t>

<t>If the Webfinger endpoint returns a non-200 HTTP response status code, or if the resulting JRD does not contain
a link with a PayID Easy Checkout URL Template, then PayID Easy Checkout is considered to have failed. Clients
SHOULD implement fallback measures to complete checkout in this case.</t>

</section>
<section anchor="step-3-parse-payid-easy-checkout-metadata" title="Step 3: Parse PayID Easy Checkout Metadata">
<t>If a wallet supports PayID Easy Checkout, the PayID server MUST respond with a HTTP status code 200 and a JSON payload
containing a JSON Resource Descriptor (JRD) as defined in section 5.2 of <xref target="PAYID-DISCOVERY"></xref>. Along with any other
PayID Metadata, the PayID server's response MUST contain a link conforming to the link definition
in section (TODO: link to section) of this paper.</t>

<t>For example, a PayID server might respond to a PayID Easy Checkout Discovery query with the following payload:</t>

<figure><artwork><![CDATA[
 {
    "subject": "payid:alice$wallet.com",
    "links": [
        {
            "rel" : "https://payid.org/ns/payid-easy-checkout/1.0",
            "template": "https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayId}&currency={currency}&nextUrl={nextUrl}"
        }
    ]
 }
]]></artwork></figure>

<t>The receiver client must parse this response, and find a link whose "rel" field has a value of 
"https://payid.org/ns/payid-easy-checkout/1.0". Any link with this relation MUST have a corresponding PayID Easy Checkout
URI Template, as defined in section (TODO: link to template syntax) of this document.</t>

</section>
<section anchor="step-4-assembling-payid-easy-checkout-url" title="Step 4: Assembling PayID Easy Checkout URL">
<t>The PayID Easy Checkout URL is constructed by applying the values corresponding to the variables specified in
section (TODO: link to template section) to the PayID Easy Checkout URI Template.</t>

<t>The PayID Checkout URI template MAY not contain the complete set of variables specified in section (TODO link section) 
of this document.  However, PayID Easy Checkout clients MUST replace each variable present in the template URI with a value. 
It is RECOMMENDED that PayID Easy Checkout clients have values available for every variable defined, 
in the case that the PayID Easy Checkout URI Template contains the complete set of specified variables.</t>

<t>The result of replacing all template variables in the PayID Easy Checkout URI Template with values is a PayID Easy Checkout URL.
Once obtained, PayID Easy Checkout Discovery is considered to have completed successfully.</t>

</section>
<section anchor="template-syntax" title="Template Syntax">
<t>This specification defines a simple template syntax for PayID Easy Checkout URI Template
transformation.  A template is a string containing brace-enclosed
("{}") variable names marking the parts of the string that are to be
substituted by the corresponding variable values.</t>

<t>This specification defines several variables, which MAY or MAY NOT be present in every PayID Easy Checkout URI Template.
These variables are as follows:</t>

<figure><artwork><![CDATA[
'amount': The amount that should be sent by the sender to the receiver
'receiverPayID': The PayID URI of the receiver
'currency': The currency that the sender should send (TODO: define currency enum or use rfc)
'network': The network that the sender should send payment over (TODO: define network enum or use rfc)
'nextURL': A URL that the sender's wallet can use after completing the payment
]]></artwork></figure>

<t>When substituting values into a URI 'path' or 'query' part as defined by
[RFC3986][], values with characters outside the character set allowed by paths or query parameters in [RFC3986][], 
respectively, MUST be percent or otherwise encoded.</t>

<t>Protocols MAY define additional variables and syntax rules, but MUST NOT
change the meaning of the variables specified in this document. If a client is unable to
successfully process a template (e.g., unknown variable names, unknown or
incompatible syntax), the link SHOULD be ignored.</t>

<t>The template syntax ABNF is as follows:</t>

<figure><artwork><![CDATA[
uri-char     =  ( reserved / unreserved / pct-encoded )
var-char     =  ALPHA / DIGIT / "." / "_"
var-name     =  %x61.63.63.74.70.61.72.74 / ( 1*var-char )
variable     =  "{" var-name "}"
PAYID-EASY-CHECKOUT-URI-Template =  *( uri-char / variable )
]]></artwork></figure>

<t>For example:</t>

<figure><artwork><![CDATA[
Input:    alice$wallet.com
          amount = 10
          receiverPayID=pay$merchant.com
          currency=XRP
          network=XRPL
          nextUrl=https://merchant.com/thankyou
Template: https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayID}&currency={currency}&network={network}&nextUrl={nextURL}
Output:   https://wallet.com/checkout?amount=10&receiverPayId=payid%2Apay%24merchant.com&currency=XRP&network=XRPL&nextUrl=https://merchant.com/thankyou
]]></artwork></figure>

<t>TODO: Should we define acceptable URL template variable values for the redirect?</t>

</section>
</section>
<section anchor="payid-easy-checkout-redirection" title="PayID Easy Checkout Redirection">
<t>TODO: Describe redirecting to user wallet</t>

</section>
</section>
<section anchor="payid-easy-checkout-jrds" title="PayID Easy Checkout JRDs">
<t>TODO: define JRD Link</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">
<t>## New Link Relation Types
  This document defines the following Link relation type per [RFC7033][].
  See section 3 for examples of each type of Link.</t>

<t>### PayID Discovery URI Template</t>

<figure><artwork><![CDATA[
* Relation Type ('rel'): `https://payid.org/ns/payid-easy-checkout-uri/1.0`
* Media Type: `application/jrd+json`
* Description: PayID Discovery URI Template, version 1.0
]]></artwork></figure>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

</section>
<section anchor="appendix" title="Appendix">

<section anchor="motivation" title="Motivation">
<t>The PayID Easy Checkout Protocol aims to enable a consistent user experience for customers paying for goods
in an e-commerce by standardizing the interaction between merchants and customer wallets.
Given the ability to assign arbitrary metadata to a PayID as defined in <xref target="PAYID-DISCOVERY"></xref>, there is an opportunity
to standardize the set of interactions between merchant and customer, specifically the process by which a merchant
directs a customer to their digital wallet to complete a payment.
We believe this protocol will enable an improved paying experience by reducing the number
of steps a customer must take to complete a transaction and creating a consistent and familiar checkout pattern
for customers.</t>

<t>The second priority of PayID Easy Checkout is to limit the engineering effort needed to implement the protocol. 
Clients wishing to adopt this pattern should only need to implement UI-level changes in order to make the flow function 
as intended, which may aid in expanding overall adoption, further enhancing the protocol's user experience benefits.</t>

<section anchor="design-goals" title="Design Goals">

<section anchor="minimal-effort-for-the-customer" title="Minimal effort for the customer">

<t>In order for a customer to checkout using the PayID Easy Checkout protocol, the customer only needs to provide a merchant
with their PayID Easy Checkout enabled PayID.</t>

</section>
<section anchor="no-server-side-software-not-already-covered-by-the-payid-protocol" title="No server-side software not already covered by the PayID Protocol">

<t>Because the flow of PayID Easy Checkout is predicated on using the PayID Discovery Protocol and then redirecting the 
customer away from the merchant, all of the flow can be instrumented on the front end and doesn't require server-side resources.</t>

<t>Apart from a PayID Discovery compliant PayID Server, The PayID Easy Checkout Protocol does not require server-side 
software to be run by either the customer or merchant for a payment. The PayID server is capable of providing details 
of where to send the customer via the PayID Discovery Protocol. Assuming the wallet used by the customer has implemented 
support in their UI for the PayID Easy Checkout Protocol, the customer can be redirected to their wallet 
to complete their transaction.</t>

</section>
</section>
</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows a non-normative example of PayID Easy Checkout between a hypothetical merchant and customer. The merchant
accepts payments using the PayID pay$merchant.com, and the customer controls the PayID alice$wallet.com.</t>

<section anchor="payid-easy-checkout-initiation" title="PayID Easy Checkout Initiation">
<t>In this example, the customer might place some items in an online shopping cart on the merchant's UI, then choose
to checkout.  The merchant UI would then render a form asking for the customer's PayID, as well as a "Checkout with PayID"
button.  Once the customer inputs their PayID alice$wallet.com and clicks the "Checkout with PayID" button, the merchant
UI begins the PayID Easy Checkout flow.</t>

</section>
<section anchor="payid-easy-checkout-wallet-discovery" title="PayID Easy Checkout Wallet Discovery">
<t>The merchant UI would first assemble the PayID Discovery URL as defined in section 4.1.1 of <xref target="PAYID-DISCOVERY"></xref>,
yielding the URL <spanx style="verb">https://wallet.com/.well-known/webfinger?resource=payid%3Aalice%24wallet.com</spanx>. 
The merchant UI would then query the assembled URL as defined in section 4.1.2 of <xref target="PAYID-DISCOVERY"></xref>.</t>

<t>The HTTP request in this example would look like this:</t>

<figure><artwork><![CDATA[
GET /.well-known/webfinger?resource=payid%3Aalice%24wallet.com
Host: wallet.com
]]></artwork></figure>

<t>If the customer's PayID server has enabled PayID Easy Checkout in their wallet, the server would respond with something like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json

 {
   "subject" : "payid:alice$wallet.com",
   "links" :
   [
     {  
       "rel": "https://payid.org/ns/payid-easy-checkout/1.0",
       "template": "https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayId}&currency={currency}&nextUrl={nextUrl}"
     }
   ]
 }
]]></artwork></figure>

</section>
<section anchor="expand-wallet-discovery-url-template" title="Expand Wallet Discovery URL Template">
<t>The merchant UI would parse the PayID Discovery response and iterate over the "links" collection to find the link with 
the Relation Type of "https://payid.org/ns/payid-easy-checkout/1.0". The UI can then do a search and replace on
the "template" field value in the link, replacing all occurrences of the predefined query parameter template names with 
the values they want to send to the customer's wallet. One query parameter of note is the "nextUrl" parameter, which
allows the merchant to supply a redirect or callback URL for the sender's wallet to call once the customer has confirmed
the payment. In this example, the merchant would like to display a "Thank You" page, and replaces <spanx style="verb">{nextUrl}</spanx> 
with <spanx style="verb">https://merchant.com/thankyou</spanx>.</t>

</section>
<section anchor="redirect-customer-to-their-wallet" title="Redirect Customer to Their Wallet">
<t>Once the merchant UI populates the required query parameters in the URL template, the merchant UI redirects the customer to 
the Redirect URL so that the customer can confirm the payment.</t>

</section>
<section anchor="customer-confirms-payment" title="Customer Confirms Payment">
<t>After the customer clicks the "Pay with PayID" button the merchant's UI, and the merchant performs the previous steps,
the customer will be redirected to the Redirect URL, which is a front end resource of the wallet. The wallet UI can
read the query parameters from the Redirect URL and render a confirmation page or modal with all of the required fields
pre-populated.</t>

<t>Once the customer confirms the payment, the wallet would perform a PayID address lookup on the "receiverPayId" query
parameter to get the payment address of the merchant and submit a transaction to the underlying ledger or payment system.
The merchant can then redirect the user back to the URL specified in the "nextUrl" query parameter, which will display
the "Thank You" page of the merchant.</t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2818;
&RFC8446;
&RFC7231;
&RFC7413;
&RFC6265;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-DISCOVERY" >
  <front>
    <title>PayID Discovery</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC5988;


    </references>



  </back>

<!-- ##markdown-source:
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
rVqHgU4ySI6suWCz3jEYXQTD4F8sJhzAiD8AAA==

-->

</rfc>

