<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2818 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml">
<!ENTITY RFC8446 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
<!ENTITY RFC7231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7231.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY RFC6265 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6265.xml">
<!ENTITY RFC6570 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6570.xml">
<!ENTITY RFC5988 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5988.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="payid-easy-checkout-protocol" category="std">

  <front>
    <title>Draft 1 - PayID Easy Checkout Protocol</title>

    <author initials="N." surname="Kramer" fullname="Noah Kramer">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>nkramer@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>
    <author initials="I." surname="Simpson" fullname="Ian Simpson">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>isimpson@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="July" day="13"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification formalizes how a payment recipient, such as a merchant or a non-profit, can automatically navigate 
a user to the user's wallet using only a PayID for the purposes of completing an online payment such as a checkout or
donation flow.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a draft proposal, and is part of the <eref target="https://payid.org/">PayID Protocol</eref> initiative. Feedback related to this document should be sent in the form of a Github issue at: https://github.com/payid-org/rfcs/issues.</t>


    </note>


  </front>

  <middle>


<section anchor="terminology" title="Terminology">

<t>This protocol can be referred to as the <spanx style="verb">PayId Easy Checkout Protocol</spanx>. It uses the following terminology:</t>

<t><list style="symbols">
  <t>PayID client: a client that queries a PayID server using the PayID Protocol as defined in [PAYID-PROTOCOL][].</t>
  <t>PayID server: the endpoint that returns payment account(s) information, which conforms to the PayID Protocol.</t>
  <t>merchant: individual or entity receiving the payment (ie e-commerce merchant, charity).</t>
  <t>customer: individual or entity originating the payment to the <spanx style="verb">merchant</spanx>.</t>
  <t>wallet: the holder of funds for the <spanx style="verb">sender</spanx> (may or may not be custodied).</t>
  <t>Redirect URL: The URL that is the result of the PayID Easy Checkout protocol, and which can be used to redirect a client to a wallet corresponding to a particular PayID.</t>
</list></t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> and [RFC9174][].</t>

</section>
<section anchor="introduction" title="Introduction">

<t>The PayID Easy Checkout Protocol is a minimal protocol designed to provide a standard method of sending a customer
to their digital wallet from a merchant UI for the purposes of completing a payment. Furthermore, implementations
of the protocol should require little to no server-side engineering efforts, while creating an improved and uniform
user experience for customers.</t>

<t>The main focus of the Protocol is on PayID Easy Checkout Discovery, which defines how a PayID client can use a PayID
to retrieve a URI template which, when expanded, constitutes a PayID Easy Checkout URL representing a resource that 
the customer client can use to complete a payment.</t>

<t>Though section (TODO: link to appendix example usage section) of this specification provides an example usage of the 
PayID Easy Checkout URL using Web Redirects, supplemental RFCs are needed to define the different ways in which a PayID
client can utilize the PayID Easy Checkout URL.</t>

</section>
<section anchor="payid-easy-checkout-protocol" title="PayID Easy Checkout Protocol">
<t>The PayID Easy Checkout Protocol can be used to facilitate an end-to-end checkout flow between a recipient client, such
as an online merchant UI, and a wallet client.</t>

<t>The protocol is comprised of two parts:</t>

<t><list style="numbers">
  <t>PayID Easy Checkout Discovery</t>
  <t>Assembly of PayID Easy Checkout URL</t>
</list></t>

<t>The result of the protocol is a URL, which can be used by clients to complete a payment with minimal user interaction.
However, the PayID Easy Checkout protocol does not define how a PayID Easy Checkout URL can or should be used. Instead,
we defer those specifications to future RFCs.</t>

<section anchor="payid-easy-checkout-discovery" title="PayID Easy Checkout Discovery">
<t>PayID Easy Checkout extends <xref target="PAYID-DISCOVERY"></xref> by defining a new link in the PayID metadata JRD
returned by a PayID Discovery query. This link, defined in section (TODO: link to jrd section) 
of this specification, includes the PayID Easy Checkout URI Template necessary to redirect a customer to their wallet
client.</t>

<t>E-commerce receivers who wish to perform Easy Checkout MUST query the PayID Discovery server to obtain a PayID Easy Checkout
URL. Digital wallets who wish to enable PayID Easy Checkout JRD Link, as defined in section (TODO: link to jrd section) 
of this paper.</t>

<t>E-commerce receivers SHOULD implement fallback measures to complete checkout if a user's wallet does not support PayID Easy Checkout.</t>

<t>The following steps describe how a PayID client can query a PayID server to obtain a PayID Easy Checkout JRD Link,
as well as how to assemble the PayID Easy Checkout URL from that template URI.</t>

<section anchor="step-1-assemble-payid-easy-checkout-discovery-url" title="Step 1: Assemble PayID Easy Checkout Discovery URL">
<t>The process of assembling a PayID Discovery URL is defined in section 4.1.1 of <xref target="PAYID-DISCOVERY"></xref>, and is
the same as for PayID Easy Checkout Discovery. The result of assembling this URL is the PayID Easy Checkout Discovery URL.</t>

</section>
<section anchor="step-2-query-payid-discovery-url" title="Step 2: Query PayID Discovery URL">
<t>A Webfinger query MUST be performed against the PayID Easy Checkout Discovery URL,
as described in section 4.2 of Webfinger.</t>

<t>In response, the WebFinger resource returns a JSON Resource Descriptor (JRD)
as the resource representation to convey information about the requested
PayID.</t>

<t>If the Webfinger endpoint returns a non-200 HTTP response status code, or if the resulting JRD does not contain
a link with a PayID Easy Checkout URL Template, then PayID Easy Checkout is considered to have failed. Clients
SHOULD implement fallback measures to complete checkout in this case.</t>

</section>
<section anchor="step-3-parse-payid-easy-checkout-metadata" title="Step 3: Parse PayID Easy Checkout Metadata">
<t>If a wallet supports PayID Easy Checkout, the PayID server MUST respond with a HTTP status code 200 and a JSON payload
containing a JSON Resource Descriptor (JRD) as defined in section (TODO: link to jrd section) of this document. 
Along with any other PayID Metadata, the PayID server's response MUST contain a link conforming to the link definition
in section (TODO: link to section) of this paper.</t>

<t>For example, a PayID server might respond to a PayID Easy Checkout Discovery query with the following payload:</t>

<figure><artwork><![CDATA[
 {
    "subject": "payid:alice$wallet.com",
    "links": [
        {
            "rel" : "https://payid.org/ns/payid-easy-checkout/1.0",
            "template": "https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayId}&currency={currency}&nextUrl={nextUrl}"
        }
    ]
 }
]]></artwork></figure>

<t>The receiver client must parse this response, and find a link whose "rel" field has a value of 
"https://payid.org/ns/payid-easy-checkout/1.0". Any link with this relation MUST have a corresponding PayID Easy Checkout
URI Template, as defined in section (TODO: link to template syntax) of this document. Once a PayID Easy Checkout
URI Template has been obtained by the client, PayID Easy Checkout Discovery is considered to be complete.</t>

</section>
<section anchor="template-syntax" title="Template Syntax">
<t>This specification defines a simple template syntax for PayID Easy Checkout URI Template
transformation.  A template is a string containing brace-enclosed
("{}") variable names marking the parts of the string that are to be
substituted by the corresponding variable values.</t>

<t>This specification defines several variables, which MAY or MAY NOT be present in every PayID Easy Checkout URI Template.
These variables are as follows:</t>

<figure><artwork><![CDATA[
'amount': The amount that should be sent by the sender to the receiver
'receiverPayID': The PayID URI of the receiver
'currency': The currency that the sender should send (TODO: define currency enum or use rfc)
'network': The network that the sender should send payment over (TODO: define network enum or use rfc)
'nextURL': A URL that the sender's wallet can use after completing the payment
]]></artwork></figure>

<t>When substituting values into a URI 'path' or 'query' part as defined by
[RFC3986][], values with characters outside the character set allowed by paths or query parameters in [RFC3986][], 
respectively, MUST be percent or otherwise encoded.</t>

<t>Protocols MAY define additional variables and syntax rules, but MUST NOT
change the meaning of the variables specified in this document. If a client is unable to
successfully process a template (e.g., unknown variable names, unknown or
incompatible syntax), the link SHOULD be ignored.</t>

<t>The template syntax ABNF is as follows:</t>

<figure><artwork><![CDATA[
uri-char     =  ( reserved / unreserved / pct-encoded )
var-char     =  ALPHA / DIGIT / "." / "_"
var-name     =  %x61.63.63.74.70.61.72.74 / ( 1*var-char )
variable     =  "{" var-name "}"
PAYID-EASY-CHECKOUT-URI-Template =  *( uri-char / variable )
]]></artwork></figure>

<t>For example:</t>

<figure><artwork><![CDATA[
Input:    alice$wallet.com
          amount = 10
          receiverPayID=pay$merchant.com
          currency=XRP
          network=XRPL
          nextUrl=https://merchant.com/thankyou
Template: https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayID}&currency={currency}&network={network}&nextUrl={nextURL}
Output:   https://wallet.com/checkout?amount=10&receiverPayId=payid%2Apay%24merchant.com&currency=XRP&network=XRPL&nextUrl=https://merchant.com/thankyou
]]></artwork></figure>

<t>TODO: Should we define acceptable URL template variable values for the redirect?</t>

</section>
</section>
<section anchor="payid-easy-checkout-url-assembly" title="PayID Easy Checkout URL Assembly">
<t>The PayID Easy Checkout URL is constructed by expanding the PayID Easy Checkout URI Template as defined in section 3 of
<xref target="RFC6570"></xref> buy applying values corresponding to the variables specified in
section (TODO: link to template section) to the Template.</t>

<t>The PayID Checkout URI template MAY not contain the complete set of variables specified in section (TODO link section) 
of this document.  However, PayID Easy Checkout clients MUST replace each variable present in the template URI with a value. 
It is RECOMMENDED that PayID Easy Checkout clients have values available for every variable defined, 
in the case that the PayID Easy Checkout URI Template contains the complete set of specified variables.</t>

<t>The result of replacing all template variables in the PayID Easy Checkout URI Template with values is a PayID Easy Checkout URL.
This URL SHOULD represent a resource that the customer can use to complete a payment. As previously stated, the
ways in which the customer and merchant use that resource is outside the scope of this protocol.
The PayID Easy Checkout URL SHOULD be parsed to retrieve the values set by the recipient client. It is RECOMMENDED
that wallet UIs use these values to pre-populate a payment transaction.</t>

</section>
</section>
<section anchor="payid-easy-checkout-jrds" title="PayID Easy Checkout JRDs">
<t>This section defines the PayID Easy Checkout Link, which conforms to section 4.4 of the
 Webfinger RFC.  In order for a PayID server to enable PayID Easy Checkout, a PayID Discovery query to the server
 MUST return a JRD containing a PayID Easy Checkout Link.</t>

<t>The Link MUST include the Link Relation Type of section (TODO: link to link type section) in the object's 'rel' field.
 The Link MUST also include a PayID Easy Checkout URI Template in the 'template' field of the link.</t>

<figure><artwork><![CDATA[
* 'rel': `https://payid.org/ns/payid-easy-checkout-uri/1.0`
* 'template': A PayID Easy Checkout URI Template
]]></artwork></figure>

<t>The following is an example of a PayID Easy Checkout Link that indicates a PayID Easy Checkout URI Template:</t>

<figure><artwork><![CDATA[
{
    "rel": "https://payid.org/ns/payid-easy-checkout-uri/1.0",
    "template": https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayID}&currency={currency}&network={network}&nextUrl={nextURL}
}
]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">
<t>Various security considerations should be taken into account for PayID
Easy Checkout.</t>

<t>The security considerations for PayID Easy Checkout Discovery are discussed in 
section 6 of <xref target="PAYID-DISCOVERY"></xref>.</t>

<section anchor="payid-easy-checkout-redirection-uri-manipulation" title="PayID Easy Checkout Redirection URI Manipulation">
<t>When a customer uses the resource located at the PayID Easy Checkout URL, a hijacker could manipulate
the data encoded in the URL to trick the sender into sending a payment to a different PayID than was originally
requested, or manipulate other points of PayID Easy Checkout data to trick the sender.</t>

<t>Additionally, if a hijacker gained access to the merchant client, they could replace the PayID Easy Checkout URI Template 
for the purposes of a phishing attack.</t>

<t>Current work on the PayID Protocol and its extensions may prove useful in mitigating these risks.</t>

</section>
<section anchor="access-control" title="Access Control">
<t>As with all web resources, access to the PayID Discovery resource could
require authentication. See section 6 of [RFC7033][] for Access Control
considerations.</t>

<t>Furthermore, it is RECOMMENDED that PayID servers only expose PayID Easy Checkout URI Templates
which resolve to a protected resource.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">
<t>## New Link Relation Types
  This document defines the following Link relation type per [RFC7033][].
  See section 3 for examples of each type of Link.</t>

<t>### PayID Discovery URI Template</t>

<figure><artwork><![CDATA[
* Relation Type ('rel'): `https://payid.org/ns/payid-easy-checkout-uri/1.0`
* Media Type: `application/jrd+json`
* Description: PayID Discovery URI Template, version 1.0
]]></artwork></figure>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

</section>
<section anchor="appendix" title="Appendix">

<section anchor="motivation" title="Motivation">
<t>The PayID Easy Checkout Protocol aims to enable a consistent user experience for customers paying for goods
in an e-commerce by standardizing the interaction between merchants and customer wallets.
Given the ability to assign arbitrary metadata to a PayID as defined in <xref target="PAYID-DISCOVERY"></xref>, there is an opportunity
to standardize the set of interactions between merchant and customer, specifically the process by which a merchant
directs a customer to their digital wallet to complete a payment.
We believe this protocol will enable an improved paying experience by reducing the number
of steps a customer must take to complete a transaction and creating a consistent and familiar checkout pattern
for customers.</t>

<t>The second priority of PayID Easy Checkout is to limit the engineering effort needed to implement the protocol. 
Clients wishing to adopt this pattern should only need to implement UI-level changes in order to make the flow function 
as intended, which may aid in expanding overall adoption, further enhancing the protocol's user experience benefits.</t>

<section anchor="design-goals" title="Design Goals">

<section anchor="minimal-effort-for-the-customer" title="Minimal effort for the customer">

<t>In order for a customer to checkout using the PayID Easy Checkout protocol, the customer only needs to provide a merchant
with their PayID Easy Checkout enabled PayID.</t>

</section>
<section anchor="no-server-side-software-not-already-covered-by-the-payid-protocol" title="No server-side software not already covered by the PayID Protocol">

<t>Because the flow of PayID Easy Checkout is predicated on using the PayID Discovery Protocol and then redirecting the 
customer away from the merchant, all of the flow can be instrumented on the front end and doesn't require server-side resources.</t>

<t>Apart from a PayID Discovery compliant PayID Server, The PayID Easy Checkout Protocol does not require server-side 
software to be run by either the customer or merchant for a payment. The PayID server is capable of providing details 
of where to send the customer via the PayID Discovery Protocol. Assuming the wallet used by the customer has implemented 
support in their UI for the PayID Easy Checkout Protocol, the customer can be redirected to their wallet 
to complete their transaction.</t>

</section>
</section>
</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows a non-normative example of PayID Easy Checkout between a hypothetical merchant and customer. The merchant
accepts payments using the PayID pay$merchant.com, and the customer controls the PayID alice$wallet.com.</t>

<section anchor="payid-easy-checkout-initiation" title="PayID Easy Checkout Initiation">
<t>In this example, the customer might place some items in an online shopping cart on the merchant's UI, then choose
to checkout.  The merchant UI would then render a form asking for the customer's PayID, as well as a "Checkout with PayID"
button.  Once the customer inputs their PayID alice$wallet.com and clicks the "Checkout with PayID" button, the merchant
UI begins the PayID Easy Checkout flow.</t>

</section>
<section anchor="payid-easy-checkout-wallet-discovery" title="PayID Easy Checkout Wallet Discovery">
<t>The merchant UI would first assemble the PayID Discovery URL as defined in section 4.1.1 of <xref target="PAYID-DISCOVERY"></xref>,
yielding the URL <spanx style="verb">https://wallet.com/.well-known/webfinger?resource=payid%3Aalice%24wallet.com</spanx>. 
The merchant UI would then query the assembled URL as defined in section 4.1.2 of <xref target="PAYID-DISCOVERY"></xref>.</t>

<t>The HTTP request in this example would look like this:</t>

<figure><artwork><![CDATA[
GET /.well-known/webfinger?resource=payid%3Aalice%24wallet.com
Host: wallet.com
]]></artwork></figure>

<t>If the customer's PayID server has enabled PayID Easy Checkout in their wallet, the server would respond with something like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json

 {
   "subject" : "payid:alice$wallet.com",
   "links" :
   [
     {  
       "rel": "https://payid.org/ns/payid-easy-checkout/1.0",
       "template": "https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayId}&currency={currency}&nextUrl={nextUrl}"
     }
   ]
 }
]]></artwork></figure>

</section>
<section anchor="expand-wallet-discovery-url-template" title="Expand Wallet Discovery URL Template">
<t>The merchant UI would parse the PayID Discovery response and iterate over the "links" collection to find the link with 
the Relation Type of "https://payid.org/ns/payid-easy-checkout/1.0". The UI can then do a search and replace on
the "template" field value in the link, replacing all occurrences of the predefined query parameter template names with 
the values they want to send to the customer's wallet. One query parameter of note is the "nextUrl" parameter, which
allows the merchant to supply a redirect or callback URL for the sender's wallet to call once the customer has confirmed
the payment. In this example, the merchant would like to display a "Thank You" page, and replaces <spanx style="verb">{nextUrl}</spanx> 
with <spanx style="verb">https://merchant.com/thankyou</spanx>.</t>

</section>
<section anchor="redirect-customer-to-their-wallet" title="Redirect Customer to Their Wallet">
<t>Once the merchant UI populates the required query parameters in the URL template, the merchant UI redirects the customer to 
the Redirect URL so that the customer can confirm the payment.</t>

</section>
<section anchor="customer-confirms-payment" title="Customer Confirms Payment">
<t>After the customer clicks the "Pay with PayID" button the merchant's UI, and the merchant performs the previous steps,
the customer will be redirected to the Redirect URL, which is a front end resource of the wallet. The wallet UI can
read the query parameters from the Redirect URL and render a confirmation page or modal with all of the required fields
pre-populated.</t>

<t>Once the customer confirms the payment, the wallet would perform a PayID address lookup on the "receiverPayId" query
parameter to get the payment address of the merchant and submit a transaction to the underlying ledger or payment system.
The merchant can then redirect the user back to the URL specified in the "nextUrl" query parameter, which will display
the "Thank You" page of the merchant.</t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2818;
&RFC8446;
&RFC7231;
&RFC7413;
&RFC6265;
&RFC6570;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-DISCOVERY" >
  <front>
    <title>PayID Discovery</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC5988;


    </references>



  </back>

<!-- ##markdown-source:
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
aOalNksAAA==

-->

</rfc>

