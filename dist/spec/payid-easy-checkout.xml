<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2818 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml">
<!ENTITY RFC8446 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
<!ENTITY RFC7231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7231.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY RFC6265 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6265.xml">
<!ENTITY RFC6570 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6570.xml">
<!ENTITY RFC5988 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5988.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="payid-easy-checkout-protocol" category="std">

  <front>
    <title>Draft 1 - PayID Easy Checkout Protocol</title>

    <author initials="N." surname="Kramer" fullname="Noah Kramer">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>nkramer@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>
    <author initials="I." surname="Simpson" fullname="Ian Simpson">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>isimpson@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="July" day="14"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification formalizes how a payment recipient, such as a merchant or a non-profit, can automatically navigate 
a user to the user's wallet using only a PayID for the purposes of completing an online payment such as a checkout or
donation flow.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a draft proposal, and is part of the <eref target="https://payid.org/">PayID Protocol</eref> initiative. Feedback related to this document should be sent in the form of a Github issue at: https://github.com/payid-org/rfcs/issues.</t>


    </note>


  </front>

  <middle>


<section anchor="terminology" title="Terminology">

<t>This protocol can be referred to as the <spanx style="verb">PayId Easy Checkout Protocol</spanx>. It uses the following terminology:</t>

<t><list style="symbols">
  <t>PayID client: a client that queries a PayID server using the PayID Protocol as defined in [PAYID-PROTOCOL][].</t>
  <t>PayID server: the endpoint that returns payment account(s) information, which conforms to the PayID Protocol.</t>
  <t>merchant: individual or entity receiving the payment (ie e-commerce merchant, charity).</t>
  <t>customer: individual or entity originating the payment to the <spanx style="verb">merchant</spanx>.</t>
  <t>wallet: the holder of funds for the <spanx style="verb">sender</spanx> (may or may not be custodied).</t>
  <t>Redirect URL: The URL that is the result of the PayID Easy Checkout protocol, and which can be used to redirect a client to a wallet corresponding to a particular PayID.</t>
</list></t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> and [RFC9174][].</t>

</section>
<section anchor="introduction" title="Introduction">

<t>The PayID Easy Checkout Protocol is a minimal protocol designed to provide a standard method of sending a customer
to their digital wallet from a merchant UI for the purposes of completing a payment. Implementations
of the protocol should require little to no server-side engineering efforts, while creating an improved and uniform
user experience for customers.</t>

<t>The main focus of the Protocol is on PayID Easy Checkout Discovery, which defines how a PayID client can use a PayID
to retrieve a URI template which, when expanded, constitutes a PayID Easy Checkout URL representing a resource that 
the customer client can use to complete a payment.</t>

<t>Though section (TODO: link to appendix example usage section) of this specification provides an example usage of a 
PayID Easy Checkout URL using Web Redirects, supplemental RFCs are needed to define the different ways in which a PayID
client can utilize a PayID Easy Checkout URL.</t>

</section>
<section anchor="payid-easy-checkout-protocol" title="PayID Easy Checkout Protocol">
<t>The PayID Easy Checkout Protocol can be used to facilitate an end-to-end checkout flow between a recipient client, such
as an online merchant UI, and a wallet client.</t>

<t>The protocol is comprised of two parts:</t>

<t><list style="numbers">
  <t>PayID Easy Checkout Discovery</t>
  <t>Assembly of PayID Easy Checkout URL</t>
</list></t>

<t>The result of the protocol is a URL, which can be used by clients to complete a payment with minimal user interaction.
However, the PayID Easy Checkout protocol does not define how a PayID Easy Checkout URL can or should be used. Instead,
we defer those specifications to future RFCs.</t>

<section anchor="payid-easy-checkout-discovery" title="PayID Easy Checkout Discovery">
<t>PayID Easy Checkout extends <xref target="PAYID-DISCOVERY"></xref> by defining a new link in the PayID metadata JRD
returned by a PayID Discovery query. This link, defined in section (TODO: link to jrd section) 
of this specification, includes the PayID Easy Checkout URI Template representing a resource on the wallet which can
be used to complete a payment.</t>

<t>E-commerce receivers who wish to perform Easy Checkout MUST query the PayID Discovery server to obtain a PayID Easy Checkout
URI Template. Digital wallets and PayID server operators who wish to enable PayID Easy Checkout MUST include a JRD Link
conforming to the definition in section (TODO: link to jrd section) of this paper in a PayID Easy Checkout Discovery 
response.</t>

<t>E-commerce receivers SHOULD implement fallback measures to complete checkout if a user's wallet does not support PayID Easy Checkout.</t>

<t>The following steps describe how a PayID client can query a PayID server to obtain a PayID Easy Checkout JRD Link,
as well as how to assemble the PayID Easy Checkout URL from the PayID Easy Checkout URI Template contained in that Link.</t>

<section anchor="step-1-assemble-payid-easy-checkout-discovery-url" title="Step 1: Assemble PayID Easy Checkout Discovery URL">
<t>The process of assembling a PayID Discovery URL is defined in section 4.1.1 of <xref target="PAYID-DISCOVERY"></xref>, and is
the same as for PayID Easy Checkout Discovery.</t>

</section>
<section anchor="step-2-query-payid-discovery-url" title="Step 2: Query PayID Discovery URL">
<t>A Webfinger query MUST be performed against the PayID Discovery URL assembled in the previous section,
as described in section 4.2 of Webfinger.</t>

<t>In response, the WebFinger resource returns a JSON Resource Descriptor (JRD)
as the resource representation to convey information about the requested
PayID.</t>

<t>If the Webfinger endpoint returns a non-200 HTTP response status code, then PayID Easy Checkout is considered to 
have failed. Clients SHOULD implement fallback measures to complete checkout in this case.</t>

</section>
<section anchor="step-3-parse-payid-easy-checkout-metadata" title="Step 3: Parse PayID Easy Checkout Metadata">
<t>If a wallet supports PayID Easy Checkout, the PayID server MUST respond with a HTTP status code 200 and a JSON payload
containing a JSON Resource Descriptor (JRD) as defined in section (TODO: link to jrd section) of this document. 
The JRD MUST contain a link conforming to the link definition in section (TODO: link to section) of this paper.</t>

<t>For example, a PayID server might respond to a PayID Easy Checkout Discovery query with the following payload:</t>

<figure><artwork><![CDATA[
 {
    "subject": "payid:alice$wallet.com",
    "links": [
        {
            "rel" : "https://payid.org/ns/payid-easy-checkout/1.0",
            "template": "https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayId}&currency={currency}&nextUrl={nextUrl}"
        }
    ]
 }
]]></artwork></figure>

<t>The receiver client must parse this response to find the PayID Easy Checkout Link. 
If the JRD returned from the PayID Easy Checkout Discovery query does not contain a 
PayID Easy Checkout Link in its 'links' collection, PayID Easy Checkout is considered to have failed.
Once a PayID Easy Checkout URI Template has been obtained from the PayID Easy Checkout Link by the PayID client, 
PayID Easy Checkout Discovery is considered to be complete.</t>

</section>
<section anchor="template-syntax" title="Template Syntax">
<t>This specification defines a simple template syntax for PayID Easy Checkout URI Template
transformation.  A template is a string containing brace-enclosed
("{}") variable names marking the parts of the string that are to be
substituted by the corresponding variable values.</t>

<t>This specification defines several variables, which MAY or MAY NOT be present in every PayID Easy Checkout URI Template.
These variables are as follows:</t>

<figure><artwork><![CDATA[
'amount': The amount that should be sent by the sender to the receiver
'receiverPayID': The PayID URI of the receiver
'currency': The ISO-4217 currency code that the sender should send
'network': The network that the sender should send payment over (TODO: define network enum or use rfc)
'nextURL': A URL that the sender's wallet can use after completing the payment
]]></artwork></figure>

<t>When substituting values into a URI 'path' or 'query' part as defined by
[RFC3986][], values with characters outside the character set allowed by paths or query parameters in [RFC3986][], 
respectively, MUST be percent or otherwise encoded.</t>

<t>Protocols MAY define additional variables and syntax rules, but MUST NOT
change the meaning of the variables specified in this document. If a client is unable to
successfully process a template (e.g., unknown variable names, unknown or
incompatible syntax), the link SHOULD be ignored.</t>

<t>The template syntax ABNF is as follows:</t>

<figure><artwork><![CDATA[
uri-char     =  ( reserved / unreserved / pct-encoded )
var-char     =  ALPHA / DIGIT / "." / "_"
var-name     =  %x61.63.63.74.70.61.72.74 / ( 1*var-char )
variable     =  "{" var-name "}"
PAYID-EASY-CHECKOUT-URI-Template =  *( uri-char / variable )
]]></artwork></figure>

<t>For example:</t>

<figure><artwork><![CDATA[
Input:    alice$wallet.com
          amount = 10
          receiverPayID=pay$merchant.com
          currency=XRP
          network=XRPL
          nextUrl=https://merchant.com/thankyou
Template: https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayID}&currency={currency}&network={network}&nextUrl={nextURL}
Output:   https://wallet.com/checkout?amount=10&receiverPayId=payid%2Apay%24merchant.com&currency=XRP&network=XRPL&nextUrl=https://merchant.com/thankyou
]]></artwork></figure>

<t>TODO: Should we define acceptable URL template variable values for the redirect?</t>

</section>
</section>
<section anchor="payid-easy-checkout-url-assembly" title="PayID Easy Checkout URL Assembly">
<t>The PayID Easy Checkout URL is constructed by expanding the PayID Easy Checkout URI Template as defined in section 3 of
<xref target="RFC6570"></xref> buy applying values corresponding to the variables specified in
section (TODO: link to template section) to the Template.</t>

<t>The PayID Checkout URI template MAY not contain the complete set of variables specified in section (TODO link section) 
of this document.  However, PayID Easy Checkout clients MUST replace each variable present in the URI Template with a value. 
PayID Easy Checkout clients MAY replace URI Template values with an empty string, however it is RECOMMENDED that each
variable be replaced with a non-empty value.</t>

<t>The result of expanding the PayID Easy Checkout URI Template is a PayID Easy Checkout URL.
This URL SHOULD represent a resource that the customer can use to complete a payment. As previously stated, the
ways in which the customer and merchant use that resource is outside the scope of this protocol.
The PayID Easy Checkout URL SHOULD be parsed to retrieve the values set by the recipient client. It is RECOMMENDED
that wallet UIs use these values to pre-populate a payment transaction.</t>

</section>
</section>
<section anchor="payid-easy-checkout-jrds" title="PayID Easy Checkout JRDs">
<t>This section defines the PayID Easy Checkout Link, which conforms to section 4.4 of the
 Webfinger RFC.  In order for a PayID server to enable PayID Easy Checkout, a PayID Discovery query to the server
 MUST return a JRD containing a PayID Easy Checkout Link.</t>

<t>The Link MUST include the Link Relation Type of section (TODO: link to link type section) in the object's 'rel' field.
 The Link MUST also include a PayID Easy Checkout URI Template in the 'template' field of the link.</t>

<figure><artwork><![CDATA[
* 'rel': `https://payid.org/ns/payid-easy-checkout-uri/1.0`
* 'template': A PayID Easy Checkout URI Template
]]></artwork></figure>

<t>The following is an example of a PayID Easy Checkout Link that indicates a PayID Easy Checkout URI Template:</t>

<figure><artwork><![CDATA[
{
    "rel": "https://payid.org/ns/payid-easy-checkout-uri/1.0",
    "template": https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayID}&currency={currency}&network={network}&nextUrl={nextURL}
}
]]></artwork></figure>

</section>
<section anchor="security-considerations" title="Security Considerations">
<t>Various security considerations should be taken into account for PayID
Easy Checkout.</t>

<t>The security considerations for PayID Easy Checkout Discovery are discussed in 
section 6 of <xref target="PAYID-DISCOVERY"></xref>.</t>

<section anchor="payid-easy-checkout-redirection-uri-manipulation" title="PayID Easy Checkout Redirection URI Manipulation">
<t>When a customer uses the resource located at the PayID Easy Checkout URL, a hijacker could manipulate
the data encoded in the URL to trick the sender into sending a payment to a different PayID than was originally
requested, or manipulate other points of PayID Easy Checkout data to trick the sender.</t>

<t>Additionally, if a hijacker gained access to the merchant client, they could replace the PayID Easy Checkout URI Template 
for the purposes of a phishing attack.</t>

<t>Current work on the PayID Protocol and its extensions may prove useful in mitigating these risks.</t>

</section>
<section anchor="access-control" title="Access Control">
<t>As with all web resources, access to the PayID Discovery resource could
require authentication. See section 6 of [RFC7033][] for Access Control
considerations.</t>

<t>Furthermore, it is RECOMMENDED that PayID servers only expose PayID Easy Checkout URI Templates
which resolve to a protected resource.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">
<t>## New Link Relation Types
  This document defines the following Link relation type per [RFC7033][].
  See section 3 for examples of each type of Link.</t>

<t>### PayID Discovery URI Template</t>

<figure><artwork><![CDATA[
* Relation Type ('rel'): `https://payid.org/ns/payid-easy-checkout-uri/1.0`
* Media Type: `application/jrd+json`
* Description: PayID Discovery URI Template, version 1.0
]]></artwork></figure>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

</section>
<section anchor="appendix" title="Appendix">

<section anchor="motivation" title="Motivation">
<t>The PayID Easy Checkout Protocol aims to enable a consistent user experience for customers paying for goods
in an e-commerce by standardizing the interaction between merchants and customer wallets.
Given the ability to assign arbitrary metadata to a PayID as defined in <xref target="PAYID-DISCOVERY"></xref>, there is an opportunity
to standardize the set of interactions between merchant and customer, specifically the process by which a merchant
directs a customer to their digital wallet to complete a payment.
We believe this protocol will enable an improved paying experience by reducing the number
of steps a customer must take to complete a transaction and creating a consistent and familiar checkout pattern
for customers.</t>

<t>The second priority of PayID Easy Checkout is to limit the engineering effort needed to implement the protocol. 
Clients wishing to adopt this pattern should only need to implement UI-level changes in order to make the flow function 
as intended, which may aid in expanding overall adoption, further enhancing the protocol's user experience benefits.</t>

<section anchor="design-goals" title="Design Goals">

<section anchor="minimal-effort-for-the-customer" title="Minimal effort for the customer">

<t>In order for a customer to checkout using the PayID Easy Checkout protocol, the customer only needs to provide a merchant
with their PayID Easy Checkout enabled PayID.</t>

</section>
<section anchor="no-server-side-software-not-already-covered-by-the-payid-protocol" title="No server-side software not already covered by the PayID Protocol">

<t>Because the flow of PayID Easy Checkout is predicated on using the PayID Discovery Protocol and then redirecting the 
customer away from the merchant, all of the flow can be instrumented on the front end and doesn't require server-side resources.</t>

<t>Apart from a PayID Discovery compliant PayID Server, The PayID Easy Checkout Protocol does not require server-side 
software to be run by either the customer or merchant for a payment. The PayID server is capable of providing details 
of where to send the customer via the PayID Discovery Protocol. Assuming the wallet used by the customer has implemented 
support in their UI for the PayID Easy Checkout Protocol, the customer can be redirected to their wallet 
to complete their transaction.</t>

</section>
</section>
</section>
<section anchor="example-usage" title="Example Usage">
<t>This section shows a non-normative example of PayID Easy Checkout between a hypothetical merchant and customer. The merchant
accepts payments using the PayID pay$merchant.com, and the customer controls the PayID alice$wallet.com.</t>

<section anchor="payid-easy-checkout-initiation" title="PayID Easy Checkout Initiation">
<t>In this example, the customer might place some items in an online shopping cart on the merchant's UI, then choose
to checkout.  The merchant UI would then render a form asking for the customer's PayID, as well as a "Checkout with PayID"
button.  Once the customer inputs their PayID alice$wallet.com and clicks the "Checkout with PayID" button, the merchant
UI begins the PayID Easy Checkout flow.</t>

</section>
<section anchor="payid-easy-checkout-wallet-discovery" title="PayID Easy Checkout Wallet Discovery">
<t>The merchant UI would first assemble the PayID Discovery URL as defined in section 4.1.1 of <xref target="PAYID-DISCOVERY"></xref>,
yielding the URL <spanx style="verb">https://wallet.com/.well-known/webfinger?resource=payid%3Aalice%24wallet.com</spanx>. 
The merchant UI would then query the assembled URL as defined in section 4.1.2 of <xref target="PAYID-DISCOVERY"></xref>.</t>

<t>The HTTP request in this example would look like this:</t>

<figure><artwork><![CDATA[
GET /.well-known/webfinger?resource=payid%3Aalice%24wallet.com
Host: wallet.com
]]></artwork></figure>

<t>If the customer's PayID server has enabled PayID Easy Checkout in their wallet, the server would respond with something like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Access-Control-Allow-Origin: *
 Content-Type: application/jrd+json

 {
   "subject" : "payid:alice$wallet.com",
   "links" :
   [
     {  
       "rel": "https://payid.org/ns/payid-easy-checkout/1.0",
       "template": "https://wallet.com/checkout?amount={amount}&receiverPayId={receiverPayId}&currency={currency}&nextUrl={nextUrl}"
     }
   ]
 }
]]></artwork></figure>

</section>
<section anchor="expand-wallet-discovery-url-template" title="Expand Wallet Discovery URL Template">
<t>The merchant UI would parse the PayID Discovery response and iterate over the "links" collection to find the link with 
the Relation Type of "https://payid.org/ns/payid-easy-checkout/1.0". The UI can then do a search and replace on
the "template" field value in the link, replacing all occurrences of the predefined query parameter template names with 
the values they want to send to the customer's wallet. One query parameter of note is the "nextUrl" parameter, which
allows the merchant to supply a redirect or callback URL for the sender's wallet to call once the customer has confirmed
the payment. In this example, the merchant would like to display a "Thank You" page, and replaces <spanx style="verb">{nextUrl}</spanx> 
with <spanx style="verb">https://merchant.com/thankyou</spanx>.</t>

</section>
<section anchor="redirect-customer-to-their-wallet" title="Redirect Customer to Their Wallet">
<t>Once the merchant UI populates the required query parameters in the URL template, the merchant UI redirects the customer to 
the Redirect URL so that the customer can confirm the payment.</t>

</section>
<section anchor="customer-confirms-payment" title="Customer Confirms Payment">
<t>After the customer clicks the "Pay with PayID" button the merchant's UI, and the merchant performs the previous steps,
the customer will be redirected to the Redirect URL, which is a front end resource of the wallet. The wallet UI can
read the query parameters from the Redirect URL and render a confirmation page or modal with all of the required fields
pre-populated.</t>

<t>Once the customer confirms the payment, the wallet would perform a PayID address lookup on the "receiverPayId" query
parameter to get the payment address of the merchant and submit a transaction to the underlying ledger or payment system.
The merchant can then redirect the user back to the URL specified in the "nextUrl" query parameter, which will display
the "Thank You" page of the merchant.</t>

</section>
</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2818;
&RFC8446;
&RFC7231;
&RFC7413;
&RFC6265;
&RFC6570;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-DISCOVERY" >
  <front>
    <title>PayID Discovery</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC5988;


    </references>



  </back>

<!-- ##markdown-source:
H4sIAHwlDl8AA81cW3PbRpZ+x6/oYiaRnSUpS3Zsh1WuWY5kx9rIlkeSJ+ty
pSIQaJKIQDSDBkRzXP7ve27daECgbGf2IamZiASB7tPn8p0rMhqNosSkWbGY
qLqaj55GUZVVuZ6o4zKeV+pAjdSbeHtyrJ7HdquOljq5NnWl3pSmMonJo9Qk
RbyC+9fxNktHGu4aJXLXaO3uSuJKL0y5nShbpVG0zibqPfwyVNaUVannFj5t
V/whMauVLir7a2RXcVn99kdtKm0nysznURSXOoZFdFKXWbWN4rpamnISKTWC
/yuVFXDj67H6uQSaSrrE1L028TK8ako48Hm2XueavlugQlcT9fDgB/XKFNXC
wJ1bdUGX6Y4E9puoi7hQL8q4SDKbGLpe6kVmiok6mvJtJoXtfnx08OCRfK+L
Cg/+9oK+r5emgBtG3X/oR72Ks3yiimsi9L9Lom8MDKFf4cgTtayqtZ3s7282
m3Hr94ABJ2N1ka3W1hQBB06A8vDqX5oDmWVKv4YFUWHKVVxlN3pC956/ODo8
OPix+fL04Kn/8vTRo8f+y5PDhwfNl0cHD/2Xx4ePf2i+/PDkAX95M313cjx6
e37CX5USmxlcLrXaI0vYU/CzugBTWOmBuysuF8hid4Bqlo71h3glJ9iX2xql
5n9Ipsdj9aLWeQ6W6n+Y13nOwj2Ob7K0fQPTeHxycXT2r+fn77qUslEfoxBv
QM6D/7e9o6yY3xLEDz8+Bd5HIGVVgDX/9kLrdBYn11F0ucyssmudZPMMUAIU
CYSvYpUS/ACArI2N86GKixR/WAMiABKoChj9ns/goOjXe46vJIAxKPj+fThA
VmVEDBxCdgWNzQGQUlUZWAhWBRCrEXOUXZo6T9VMA8TA16ygjfA8uGmsfsqq
ZT0DQmytVRyIckE/kBQZCHH3cp7YfbrXjiNFp49nYGdxUvWdm9iWZ//WVi3N
BnaDlYiqEu5aZ/AJULJOlipGBoF1JssYfjUlfCtMgWg7z+CeBCwU5GhQBkmc
51tAgJtsASdWUaxqq0s+uKbPe1Zt4CZdwTeQnzIFPBAL6ANJdOO6LkEOQBhw
Ac4IClvhvbAR3J4V2pPa0OecANAHTqKQI+ZmM2Y9WGVpCtATfaMudbnKCpOb
xVb0wfkNOgoIAxyDLksWGCyOFF0hgekOr3Q1Vid4Hm1FfjnsiwRXzVakm9H3
ctAkR/5OkG76BM/Flfqj1mWmrWcHsAuMRRiFK7c1EGlL9Rz4kaLqvGcTfHN+
dnl2dHb66/tfx34/XmlCi+giXZvM7Vnqqi4L6zkaJwSg9yzqsliWKYZqs8yA
1Ymha9ZJtE0Q7uf0BEC1SDMw1TrOUWdgbcBz1C0NV+U8btN7GZA1Ik9cJtqv
Abq1jNHx3seVk9pW6CR2rGzKbJGh3DtrC6VXbtErXItVkPmxNHkKXAZVm9dF
ar0SXoFNwg9X6t4qxuUV/gE4QQ0hWtJMp0TZuU4zOFgFGHw6UQjK8IHZm7FK
lNrWuUeSvgjH6SBDj3Cb1REUi1SxdNs0WgP66cwpMaCydm2KlDhgyKBLMMk6
j0vecoz6rtW13qqNKeGog1dvLy4HQ/6rXp/R5/Pn/3x7cv78GD9fvJyenvoP
7o6Ll2dvT4+bT82TR2evXj1/fcwPw1XVufRq+m7AJxycvbk8OXs9PR0w7IWw
CFEXHgCODmqqyzXoKHCAtN0mZTYTfRePC4pOK+L3Hw+ePCLFBzs/gTDApHWC
+ssHvyuyZDcA1poBKDaIADtmi4L5DxdB6wCIIXiBDeMyBU0F/5WiXFFZCKO8
nkaseVmpUtDMClYVSc1LswoR9e3JZ4HPaTMADV7Ej2SXNhKV8gSLSyn1HzUo
i8qzChwwUl8YQYGRxUPoAqxFA97A8noO+1eWjBxuTiDodXgLcRGcGrkPHK6L
DK0/IkzXH9aIVkVCDsuf2oqSQWCFLgYue60POA3Y3CcMHx84vGF4cw4qxE4y
DiDEXY7IQCqg6AavYTRUaeAVuiFaC5fUBZINR9EpBv6FBeSoqwBx2+SgFZca
1A+9M8sBPpsaMYqsO8JzuZN3CQOCRIQ6FCCyx9SLJWYV5KTuXZ4dn01AUsU1
me16jar0QUmoBmvFC+3uvs/cvOXMRTctyqz9IAUS0a7jsW/5Rc88iGFuVK+d
kuUYTlmySNCWlA2BpUJCTbM5+Eo89ibeWjRLFpyTSsiTKsNoYzevkTff3J3+
fdaKO5A5jxPYtEIlQMYU6agyI/jThAsYIsAT1UaDcsRN7CPS5BAoim0QfASG
y1jWYDA9IxawDvQdFaHMkCgU38YQNFsIUQ/GdxtCdDhWU2v1agZhEjy7g3W8
Y9vLrFvIBjcNe9zKbCtE2359VRuIND0skuETJsekjePopdmAwZXDz/o1QHfQ
TnSfoj2hSd/WS6QRUKUJkJFaQD8wWR2nw2ijcR0MLZeAl21joKPMa4hrNGkv
6VW/YjV87vtVf6g0RgTvO8kNehxgHB2EYaHQGzZgCeF5NfAOcRpXsfqf8+OI
Ay1muTu3355Cv+1YUTiKCw3DyG4HUvwODsjDQtSLC0N4PMnrVCLTfm6fQEgs
SLkL7QwfS9Tcq1EUmFoP1kXR8yao48gPHAQ8bkCt7JJ8qi4p3WnTROEIsSQg
u2GWxMXwuJlV6Gd69SgKTzaGx0MnbMlwW2G2AVriynQI1EU8y/s5R1QKfxUJ
WZ2CaCIJkiUMI5QkTeFs88vE6aS5jtdkcjtMpeFJxMGf1bu4LqFa5uIHwMY8
p/R0pWMLttJGAA+QGfqPdubmTRkdBUQOfaQJCDa5EBjuuongdnl0FnonAfqM
oD3nh4jTG51TZoQbUP5G4Knv0P9Tjsi+yEBAtkgI2yXFALgxI8w36gLOqA4m
DrH712tkhsAtniLRlgIlIZfNr6v3SGpm+5Dh0fhgfIDP90CVK2ZQsGLjlUbu
YMh2J3Hj4ESHE/VPkksPQdEUowcgaAGCYumRXYCIxbYxeFwAz2zVa8x4KCek
1OEnoNBNZiB2lAOSZFvRf3PyQzy3pwHoPimUMwb2S/DjCybQA5pLe8FsL85e
Q/Aj149pjzXAgLoHanU/in0C5x4UhOS4i0ymuIGMKsiWVTxDXvJzwBNQ/TRy
GdjJ3NEkTPP5eEMTllcOHzxQLy8v3/izYNZR1ZYKnnSu/hiaoo0CY3ypYETL
GELieQyhPXjQI/H2fxoOJFlLYoIaryMPJ0BNaXcgpThCPLwPlgQ8bN8TYTwh
IEBaJRkuRyUx8ydgi0KmcURGYgVHlJs4jcRq2aruFninqPI1WO3yV0ADtGpE
JSJadoet6fHb7oEuf5GP6PcPIIfoBVZCOPAfdvFzlS2WlecdlQbuBia2Y2Jy
u6AlDIXAlaqyH319dmDr2e9A3GCiBlSRnMR5lui/sayxUDkYNjfjcSzc+t5f
aq/mbyx1PlCw5O1Sa2H3e1pA+wfjB8FGfh2XCg6CtRrS9t3jf49XWPx69pH/
fvrOuU+q/j372Pr66bukLiH1SbbPPrpPn74rIGh8W+bPPsqHT4MWNZ/8t1+j
8ILE77y8c4gryCwxU8BkEoXtkQDj2wxFucNliU8SqEFF9NHnna6uqwHe0Tcq
3Bson0rom4E175Fw9+ARYC+D95fhVAhT0RnWFXalB4E/XoK5zjB14wDhcwck
QmdhVOnSvN5zNfy4RS0WAQUcnff3RF1sgVsf+mrurp4RK0vI29QoLD2z0y+H
h46qMi6s9zZjpabNOpTs2YrqOgHszSBj05D5JjmkS2l0b/Dx0+C+uonLjMJb
bK1YtYrL66Z8itAsqaSsR/GOL85FYPJSQEkdT9tFSL/8TZxTU+IulljMIyE+
dw9Zl66+mr7DVBD/YEVxRtGB65fomyYu2c2xMZqX1c3adAoKgxDZLDeO6F97
bPp7XMflL3zwTrNGTsxFYofkzoJ5qRAujmVFJhWJE962H3FAInefXJyNHh0e
PFHuOrs5oifYXUjDb7xMoauNKa9lFfl212M+30d1d15HMnX3uC7qFUoCi1vl
PLnvtgKcOz+FraZN2bvZpMkafMFuXiHENdXNoFrPcvgFYxuvXaxJqEBYejBS
3Ntbx9VyD8nZI6za415d4L1n2whLwg9/fPqYomBZg7wa9hXipMK8CHSFCqKk
vu4yEA9roW6wbuNmFjdjXIStwGDocSlE+10oD0Pcu9H5dhjGwonm7pmBnUpI
L7EGi9IEtItc/cqSmgvf4zSleCA0CopuBCvKmqxk5lJRsI4IC1MLPgzEcWT6
omfNEmJ/LtpuRS4UoIn7gR9qzn4rA8aeYI6CfditT1jiBnfu6fFiPIQHrguz
KTrI0lw3ZQQZM8gejB9/5qPcHzZxkASmWPxfFKYk9qASd5Fy+o/XLwjtAit2
TfsRCpL86jOl7qHfxEAoVftAR/BlnVQjkYFibQayW89OT9+8nMKdxyc/nVzC
38F4gP/+beDvxvO5u7/98Phg/Pgh/u/Jo/GTB2P4+uQQPsMz99TB9351vxnz
SB4ffBw0Sw4kcOB87vn04t3o6OXzo5/P3l7iJMDIOxt48Pt7zaH3m2Xvt6JC
4c5Jsa6rCX7qBmidqEmg75k6eND5pQVrz8By/+Yqoj3L+Bjpf8/fdH4SXMFf
Tm/9xFGUi9XCDfYBYYrrranpGceHYE7jP4vrjnfFdUzsR/nQjfTOTzmSO6sr
YfAX0HPwoEMJhbTfHk7h77eHj8JTfxcy8ruQdd99GbMixvQLxvyN9igDdr2u
SGEIvp1edZy3b1G5LuTfdxZVcRlXs95ZsZdaBjVhyjqRGIK7M+129x3RX3+u
9hAgj6AfJ2ioVltvsa2SbwNXcqtduhsjox3JWINILiuTZZqwIzh+6wT+UYT7
MMDmIEqSbnRCgN47kLtFFRN1uxrcILvypfo+tromgGTZQBzE3zqG8MvrQRB1
VdTiDgQh+TjxdtwfS/sd4MRug9YaoX/GZs1qXW0l8hxiNQ+JhwwDtSboKnO8
gZRGnlIa4aAdfKUAKyq8ItPYbZh8peJld7QMxxzlooKLL/M1o1sNxHb/8O7G
4dT6sli+paoHdjFhhajdemutieGC71fR4jz0IURk7fgHsp21bmoLfqzjLiNu
/DVlqjKpII1YNiqSKyqzxMzdJhuNz7TFGhGdEjm+PbFCOwfxtB415PVobdY1
Y0Ez8YHpkWtQ7egoQk5sI263ODtyichduWPfHExTiXwksVYUVPcAhsbodSHy
wZB7TuNT3er27ibDsKcMLI0RI1F2ScmDGC5m+dKLaBW9dlYJIhVRjkCZcauj
Ubmr5zi+hie83LJ27MBD/ov3eBwSrDBUG4JUAFKifE8BguUQ1nX2jXNrgnbK
522Q195zWCrrung3d6eDf77njSfq6ksLSSMIqLCYdOWe97tgnvPZDJ3TyXYD
JGs156ktv7NEwbNDAEg4ybwba5odJ3LSoCKHtbOvKJ25E4d1uqBs9teIrj6h
PV/IOLY6koqMjML8C/Bfegb8e9L6PUjgq/haF5JN8rxbU3iJ+tpYu5b8bBuF
Cg0pfKutZbfto4nHO/o1452BlRvRwKdR+K8gwSP0wwknSpqb6aNmHNGDfW4S
GkONqzuc3CkizjL7PU6uKUtHjq3cPpp6SNTSdnmTjwZOCZHKLLkOSwzE42Y2
KhjKi4PZESYFQ1WAfOtG+SDTjHz/ZMgTeI4QzqIVNU7srsEIIrSHKizYTX1y
jWk6NTn9qRdcSYwp43VA672oqxjCxa0wyMUzXxQ7RH3DXsAa8EVL4lJVARmg
BUdkHpWi4osJBwuaCVDs7AEDaFLBkkrilCLNbKEGQLqOElrBURd+NBLLN5m9
dnMRUz4mGFNVmjyauhAszyFLmHn1gSS+zZCuW/J6RjyJ3AQajnjjQEEixcoL
7f2DmABOwT94+BAjdWRNh562xQFbXtQlyn5lSj3cFQ+GDtbyjDFEeGZHeyoU
j43Yw+Np8hstg5TAb005ijsk+HSaMZy+nnZhSClg6mu96XGe+ONla9QxDDoa
V0FPlu5Jcqk4BhBwCjxbi5MPiXXiXEijKHivxGOLq1dE3De3RNfxXeLz2n7/
HrnQ+/+BD30F8BXTYrAI5mOiE/u/l+l//W5N4W50PTl6zeMuWocK5YskwjZR
hBKZJlhoynW6oLd66JJM1JG2vzJVdsOI+dlhsjjjCE/Cs5jRH9CIY+ndM5D0
dhLIES8ujElthL2TIpxxnm39FGn2b5d3BKNVfibN4Q6X/jy8yxjLOPoJXCtj
QzzDWbetTD1kC9iynGUQDQPX/ChS0P3rjo/jxZFnNFUz0dC0RC6G2rV1gS9C
Iah76iV34GQ1OIK9dYbWEYZNIwBrilUwCAHMcWOE7tFIphNDF7drwHbHNNIv
mBnmkpeEY/+bDLDOCTmYeRUpBlKeIcyldeIEVtSrGUTfGBPTeEtAHDXvMNDo
kBNkJ8wOP20bqhf+Mo9XINC4bJrva/ANuiyivoFbQALs7q4hBqJIZYdPzCyH
6uAS5G2A7hxwMOjZTAeEA4XgN9wUwUZ8FmpVataVa0oTmS7gIvjFRdtLvj0Z
5SCLXHHNmjJYTpLgthUxDkER5zPndcEMw3EM1DCe4GUdQYcXZ6TDTRZvqJmU
M1XUg5yz24ADL/FtMtd3kDPt2VsWPdMFWEdlXXvvmEbB1U8GEhW6AmAic5HC
OOfY/QR41Mn7Qs31Qu2+3rHrvYBWXu95atuT6d5cXPM+6w9QWdtT/14AHed1
e0Tcmnm1oclfg80Q0NMUA54baoG2mqh+Pjf6h05iSdVZdLvVcI2VRI5ITXGL
Cw3gt4IdGntxJUj3RNSUOzagDL4D3LxHgqogeSFRJSOwGRUfURuZCPq9hMAD
h3JoP+yAF3uVn6cP+eMjI4onqf0ko/3dI5D5Z7GPdC9olaH6rAfyDfi+/SMv
IO5Hl3VBNdSM9LytLmWDwayKvqzU0CD1CBruWRMYAstYtZDTKbiQLLdUW9yQ
X5DQvr3VDfj4u8RI88z1ysnOvwwWNJHdUtjc93gBv0du3pCTDlDt4NWJu/jY
MR7/mherkXszDxcUcqIQs/mXTlXpG/VcMvm3OGYftUpJAHwbN8flXxMNU/8+
Ypsh9OV2jekNvU7X7ztZbN7YuYbvX+Kyt6yp26QZOmMKmMLxdlj/6naIZN6r
j/gTee8RwqoTaSr6aaTWNjyLxOmShSsQwesVYX8zYA/sW69pgIFevyxaxgxI
jXP3BATJ0kBMHwVoOlYtzqCCbMgJCXBQUhrzK5axvXZBWkjinkykDVUwTRqr
gT8rQSvdMohmdVXRCAYNrLROmmGnzbYwuMtQlilcvGa29+6heI9hiwsRHGym
wXXvrlfKy4+7JPYLa3ozAd/Pt3lW2qpvirY7wfnVY6nRFst1Tk9xkaueItMY
JTCi5vH+xlVV/+6gVxpmD6fE2W8PHzVPXskY3g5VaKbLm+HTuw9yuLteg/vI
rCaVK3xj3Zk8b5wbcw2h1zXHn8HQyU/PL9WfPykt8dLYaqI6F90EWFe1HdQj
wLYiga6XLlqwOAwqznKk1kAm2nNF8WDnkHxKYtE+agSOaZ79zBc53R9Juj+a
Yg48OqMK0ER9z/fgj4BrI84d+1LH7kCin0dUXzCQKPOIyr+HHswlfnTE/7mq
6u2BxL/ILKIfRPRziIQUzymCvgUOZBq+QtBvVm5QsbcyxHOLXK7CSonmQSMC
PeF+MzDYmm+krgKpFxUfbzUjvk4U7DiBZowBCAhSTIitjktMN4umlgc6RdR5
cUl7gdpPruzJr+rwI5TDYZyZiAS0n5/DUFdApTNA1HSCeQSvOahrc2GVcRNz
zZSjLdO1adEe8EH61vpAAf4nENyLyANRhUFzi+RREY072XatE/fElwG31LmU
148x+XTD4vT2hDjQ7sAXumViyC3XiLiDLbQM3w6g0/pwtDd68PQIjmacVaeZ
Bd4hbYNLHHNQ70yNB1voYShKq668BVwpzoyu7hyWuBK/6V/sPgoSt0tCRLaQ
yLv90B5cT9LV3yl0vyV626qd+4pWdzHHdttmIQ72sz00754DAO9oKwuzw1E7
OaI/2RHfQh6CRvGmNKfXXioIVeC2niilL1RzoaY/lbwYYp1tyKseWEEZtl+p
pcpMX6jeOrerBFBXvsnfmrfX5kGqwQjgO8v0GhumtnTLLRH5XLLFZ1YuiSWF
t/IeLr1yC2GuSbEe5QrpftZTVIGgxEZhAxvn3G4HkYmTSiC5YZg4CfbKa3S+
tJemJRbSMOKo1y6EHrR8xoBPGwVYZNRCV+FWfiE5QCsZAReLVaR2Scv9pz6Q
OTxwg7VYTkHdonYLsl6N237EA7LHGVoHizKENLIwqXl7gDFEtY4AnWaQHglc
MKx3AKN7wHH0f+od5WurSgAA

-->

</rfc>

