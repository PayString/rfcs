<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.8 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2818 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2818.xml">
<!ENTITY RFC8446 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8446.xml">
<!ENTITY RFC7258 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7258.xml">
<!ENTITY RFC7231 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7231.xml">
<!ENTITY RFC7413 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7413.xml">
<!ENTITY RFC6265 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6265.xml">
<!ENTITY RFC4732 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4732.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc comments="yes"?>

<rfc docName="draft-aanchal-payid-protocol-01" category="std">

  <front>
    <title>PayID Protocol</title>

    <author initials="A." surname="Malhotra" fullname="Aanchal Malhotra">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>amalhotra@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>
    <author initials="D." surname="Schwartz" fullname="David Schwartz">
      <organization>Ripple</organization>
      <address>
        <postal>
          <street>315 Montgomery Street</street>
          <city>San Francisco</city>
          <region>CA</region>
          <code>94104</code>
          <country>US</country>
        </postal>
        <phone>-----------------</phone>
        <email>david@ripple.com</email>
        <uri>https://www.ripple.com</uri>
      </address>
    </author>

    <date year="2020" month="June" day="18"/>

    <area>security</area>
    
    

    <abstract>


<t>This specification defines the PayID protocol - an application-layer protocol, which can be used to interact with a PayID-enabled service provider. The primary use-case is to discover payment account information along with optional metadata identified by a PayID <xref target="PAYID-URI"></xref>. The protocol is based on HTTP transfer of PayID protocol messages over a secure transport.</t>



    </abstract>


    <note title="Feedback">


<t>This specification is a part of the <eref target="https://payid.org/">PayID Protocol</eref> work.
 Feedback related to this specification should be sent to <eref target="mailto:payid@ripple.com">payid@ripple.com</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="terminology" title="Terminology">
<t>This protocol can be referred to as <spanx style="verb">Basic PayID Protocol</spanx> or <spanx style="verb">PayID Protocol</spanx>. The following terminology is used by this specification.</t>

<t><list style="symbols">
  <t>Endpoint: either the client or the server of the connection.
  <list style="symbols">
      <t>Sending Endpoint: sending side of the transaction (wallet or exchange).</t>
      <t>Receiving Endpoint: receiving side of the transaction (wallet or exchange).</t>
    </list></t>
  <t>PayID client: The endpoint that initiates PayID protocol.</t>
  <t>PayID owner: The owner of the PayID URI as described in <xref target="PAYID-URI"></xref>.</t>
  <t>PayID server: The endpoint that returns payment account information.</t>
</list></t>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref>.</t>

</section>
<section anchor="introduction" title="Introduction">
<t><xref target="PAYID-URI"></xref> describes a URI scheme to identify payment account(s) at a service provider. <xref target="PAYID-DISCOVERY"></xref>, on the other hand, defines how to transform a PayID URI into a PayID URL that can be used by other protocols to interact with a PayID-enabled service provider but does not define the protocol(s) to do so.</t>

<t>This document specifies the PayID protocol - an application-layer protocol which can be used to interact with a PayID-enabled service provider identified by a PayID URL using standard HTTP methods over a secure transport. In its most basic mode, a PayID protocol resource returns a JavaScript Object Notation (JSON) object representing the payment account(s) information along with optional metadata corresponding to the queried PayID URI <xref target="PAYID-URI"></xref>. The protocol defines new media formatting types for requests and responses but uses normal HTTP content negotiation mechanisms for selecting alternatives that the PayID client and server may prefer in anticipation of serving different use cases.</t>

<section anchor="design-goals" title="Design Goals">

<t><list style="symbols">
  <t>Extensibility</t>
</list></t>

<t>Although the primary use-case for the payment account(s) information resource returned via Basic PayID protocol is assumed to be for making payments, the PayID protocol is designed to be easily extensible to facilitate creation and retrieval of other resources about the PayID owner, PayID client and/or PayID server that might be required for making payments.</t>

<t><list style="symbols">
  <t>Neutrality: Currency and Network Agnostic</t>
</list></t>

<t>PayID protocol is designed to be a fundamentally neutral protocol. PayID protocol is capable of returning a PayID owner's payment account(s) information for any network that they (or their service) can support. This makes PayID protocol a network and currency agnostic protocol, capable of enabling payments in BTC, XRP, ERC-20 tokens, Lightning, ILP, or even fiat networks like ACH.</t>

<t><list style="symbols">
  <t>Decentralized &amp; Peer-to-Peer</t>
</list></t>

<t>Just like email servers, anyone can run their own PayID server or use third-party hosted services. If self-hosted, PayID protocol introduces no new counterparty risk or changes to a service’s security or privacy model. PayID protocol doesn’t require new, complex, and potentially unreliable peer discovery protocols, instead establishing direct peer-to-peer connections between communicating parties from the start.
   PayID is built on the most successful decentralized network: the web. There is no designated centralized authority, or a risk of a patchwork of different standards in different jurisdictions that make a global solution impossibly complex.</t>

<t><list style="symbols">
  <t>Service Sovereignty</t>
</list></t>

<t>Each service provider that uses PayID for their users maintains full control of its PayID URL space, PayID service and has the ability to incorporate any policy they choose, including privacy, authentication, and security.  They also have full sovereignty over users on their domain, just like in email. PayID is highly generalized and does not prescribe any particular solution outside of the standardized communication, which makes it compatible with existing compliance and user management tools and philosophies.</t>

</section>
</section>
<section anchor="payid-server-discovery" title="PayID Server Discovery">
<t>To support PayID protocol, the PayID client needs to discover the PayID URL corresponding to the PayID URI <xref target="PAYID-URI"></xref>. This can be obtained either using mechanisms described in <xref target="PAYID-DISCOVERY"></xref> or could be entered manually.</t>

</section>
<section anchor="json-format-design" title="JSON Format Design">
<t>JSON as described in [RFC8259][], defines a test format for serializing structured data. Objects are serialized as an unordered collection of name/value pairs. JSON does not define any semantics around the name/value pairs that make up an object. PayID protocol's JSON format defines name/value pairs that annotate a JSON object, property or array for PayID protocol resources.</t>

<t>The PayID client MUST request PayID response in JSON format through the <spanx style="verb">Accept</spanx> header with the media type as defined below, optionally followed by format parameters. One of the optional parameters is the case insensitive <spanx style="verb">q</spanx> value as described in Section 5.3.1 of <xref target="RFC7231"></xref> to indicate relative preference.</t>

<t>Each message body is represented as a single JSON object. This object contains name/value pair whose value is the correct representation for a primitive value as described in [RFC8259][], or an array or object as described in the section below.</t>

<t>If the PayID server does not support JSON format, it MUST reply with an appropriate error response.</t>

<section anchor="http-method" title="HTTP Method">
<t>The PayID protocol payment account(s) information resource is requested using the HTTP GET method.</t>

<t>Following are the media types to request the payment account(s) information resource on different payment-networks and environments.</t>

</section>
<section anchor="media-type-of-payment-accounts-information-resource" title="Media Type of Payment Account(s) Information Resource">
<t>The media type for payment account information resource is <spanx style="verb">application/* + json</spanx>.</t>

</section>
<section anchor="response-for-application-json" title="Response for application/* + json">
<t>The response body for <spanx style="verb">application/* + json</spanx> is a JSON object with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  {  
   optional string payId,
   required Address[] addresses, 
   optional string memo,
   optional string identity,
   optional ProofOfControlSignature proofOfControlSignature
  }
]]></artwork></figure>

<section anchor="payid" title="payId">
<t>The value of <spanx style="verb">payId</spanx> field is the PayID URI in the client request that identifies the payment account information that the JSON object describes.</t>

<t>The <spanx style="verb">payId</spanx> field is an optional field in the response.</t>

</section>
<section anchor="addresses" title="addresses">
<t>The value of <spanx style="verb">addresses</spanx> field is a JSON array of type <spanx style="verb">Address</spanx> of one or more JSON objects with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  { 
   required string paymentNetwork,
   optional string environment, 
   required string addressDetailsType,
   required addressDetailsType addressDetails
  }
]]></artwork></figure>

<t><list style="symbols">
  <t>paymentNetwork: The value of payment-network as specified in the client request's <spanx style="verb">Accept</spanx> header</t>
  <t>environment: The value of environment as specified in the client request's <spanx style="verb">Accept</spanx> header</t>
  <t>addressDetailsType: The value of <spanx style="verb">addressDetailsType</spanx> is one of the following strings.
  <list style="symbols">
      <t>CryptoAddressDetails</t>
      <t>ACHAddressDetails</t>
    </list></t>
  <t>addressDetails: The value of <spanx style="verb">addressDetails</spanx> is the address information necessary to send payment on a specific payment-network and environment.</t>
</list></t>

<t>The <spanx style="verb">addresses</spanx> field MUST be present in the response.</t>

<section anchor="addressdetails" title="addressDetails">
<t>We define the following two types of payment address types.</t>

<t><list style="symbols">
  <t>CryptoAddressDetails: This is a JSON object with the following name/value pairs.  <vspace blankLines='1'/>
{
  required string address,
  optional string tag
}  <list style="symbols">
      <t>address: The value of <spanx style="verb">address</spanx> field contains the on-ledger address corresponding ot this owner.</t>
      <t>tag: The value of <spanx style="verb">tag</spanx> field is the tag value used by some cryptocurrencies to distinguish accounts contained within a singular address. E.g XRP Ledger's destination tag.</t>
    </list></t>
  <t>ACHAddressDetails: This is a JSON object with the following name/value pairs.  <vspace blankLines='1'/>
{
  required string accountNumber,
  required string routingNumber
}  <list style="symbols">
      <t>accountNumber: The value of <spanx style="verb">accountNumber</spanx> is the ACH account number.</t>
      <t>routingNumber: The value of <spanx style="verb">routingNumber</spanx> is the ACH routing number.</t>
    </list></t>
</list></t>

</section>
</section>
<section anchor="memo" title="memo">
<t>The <spanx style="verb">memo</spanx> string may specify additional metadata corresponding to a payment.</t>

<t>The <spanx style="verb">memo</spanx> string is an OPTIONAL field in the response.</t>

</section>
<section anchor="identity" title="identity">
<t>The <spanx style="verb">identity</spanx> string may specify any additional identity information about the PayID owner or PayID server.</t>

<t>The <spanx style="verb">identity</spanx> string is an OPTIONAL field in the response.</t>

</section>
<section anchor="proofofcontrolsignature" title="proofOfControlSignature">
<t>The value of <spanx style="verb">proofOfControlSignature</spanx> field is a JSON object of type <spanx style="verb">ProofOfControlSignature</spanx> with the following name/value pairs.</t>

<figure><artwork><![CDATA[
  {
   required string publicKey,
   required string payID, 
   required string hashAlgorithm,
   required string signature
  }
]]></artwork></figure>

<t><list style="symbols">
  <t>publicKey: On-ledger public key of the Receiving Endpoint</t>
  <t>payID: PayID URI of the PayID owner</t>
  <t>hashAlgorithm: Hash algorithms used to hash the entire contents of the <spanx style="verb">ProofOfControlSignature</spanx> message.</t>
  <t>signature: Digital signature over the hash of the entire contents of the <spanx style="verb">ProofOfControlSignature</spanx> message using the private key corresponding to the public key in <spanx style="verb">publicKey</spanx>. This is a proof that the Receiving Endpoint is the owner of the on-ledger public key in <spanx style="verb">publicKey</spanx>.</t>
</list></t>

<t>The <spanx style="verb">proofOfControlSignature</spanx> is an OPTIONAL field in the response.</t>

</section>
</section>
<section anchor="meaning-of-media-type-application-json" title="Meaning of Media Type application/* + json">
<t><spanx style="verb">*</spanx> may represent different payment-networks and environments. In this document, we propose standards with the media types specific to XRP, ILP, and ACH payment networks. We also propose media type that returns all addresses across all payment networks. Other payment networks MUST establish standard media types for their networks at IANA.</t>

<t><list style="symbols">
  <t>Accept: application/payid-json
  Returns all payment account(s) information correspnding to the requested PayID URI</t>
  <t>Accept: application/xrpl-mainnet+json</t>
</list></t>

<t>Returns XRPL mainnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/xrpl-testnet+json</t>
</list></t>

<t>Returns XRPL testnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/xrpl-devnet+json</t>
</list></t>

<t>Returns XRPL devnet XAddresses</t>

<t><list style="symbols">
  <t>Accept: application/interledger-testnet+json</t>
</list></t>

<t>Returns mainnet payment pointer to initiate SPSP request</t>

<t><list style="symbols">
  <t>Accept: application/interledger-devnet+json</t>
</list></t>

<t>Returns testnet payment pointer to initiate SPSP request</t>

<t><list style="symbols">
  <t>Accept: application/ach+json</t>
</list></t>

<t>Returns account and routing number</t>

<t>The PayID client MAY specify more than one media types along with the preference parameter. The server MUST respond as described in the Content Negotiation section below.</t>

</section>
</section>
<section anchor="header-fields" title="Header Fields">
<t>PayID protocol defines semantics around the following request and response headers. Additional headers MAY be defined, but have no unique semantics defined in the PayID protocol.</t>

<section anchor="common-headers" title="Common Headers">
<t>The following headers are common between PayID requests and responses.</t>

<section anchor="header-content-type" title="Header Content-Type">
<t>PayID requests and responses with a JSON message body MUST have a <spanx style="verb">Content-Type</spanx> header value of <spanx style="verb">application-json</spanx>.</t>

</section>
<section anchor="header-content-length" title="Header Content-Length">
<t>As defined in [RFC7230][], a request or response SHOULD include a <spanx style="verb">Content-Length</spanx> header when the message's length can be determined prior to being transferred. PayID protocol does not add any additional requirements over HTTP for writing Content-Length.</t>

</section>
<section anchor="header-payid-version-todo" title="Header PayID-version (TODO)">
<t>The PayID client MUST include the PayID version request header field to specify the version of the PayID protocol used to generate the request.</t>

<t>If present on a request, the PayID server MUST interpret the request according to the rules defined in the specified version of the PayID protocol or fail the request with an appropriate error response code.</t>

<t>If not specified in a request, the PayID server MUST fail the request with an appropriate error code.</t>

</section>
</section>
<section anchor="request-headers" title="Request Headers">
<t>In addition to common Headers, the PayID client MUST specify the following request header.</t>

<section anchor="header-accept" title="Header Accept">
<t>The PayID client MUST specify the <spanx style="verb">Accept</spanx> request header field with at least one of the registered media types (Section X). The purpose of this header is to indicate what type of content can be understood in the response. It specifies the <spanx style="verb">payment-network</spanx> and <spanx style="verb">environment</spanx> of the payment account and its representation format for which the PayID client wants to receive information. The representation format is always JSON.</t>

<t>PayID server MUST reject formats that specify unknown or unsupported format parameters.</t>

</section>
</section>
<section anchor="response-headers" title="Response Headers">
<t>In addition to the Common Headers, the PayID server MUST specify the following response header.</t>

<section anchor="header-cache-control" title="Header Cache-Control">
<t>PayID server MUST include the <spanx style="verb">Cache-Control</spanx> header with the max-age limit of 0. The intermediate hops or PayID client MUST NOT cache the responses.</t>

</section>
</section>
</section>
<section anchor="extensibility" title="Extensibility">

<section anchor="payload-extensibility" title="Payload Extensibility">
<t>PayID protocol supports extensibility in the payload, according to the specific format.</t>

<t>Regardless of the format, additional content MUST NOT be present if it needs to be understood by the receiver in order to correctly interpret the payload according to the specified PayID-Version header. Thus, clients MUST be prepared to handle or safely ignore any content not specifically defined in the version of the payload specified by the PayID-version header.</t>

</section>
<section anchor="header-field-extensibility" title="Header Field Extensibility">
<t>PayID protocol defines semantics around certain HTTP request and response headers. Services that support a version of PayID protocol conform to the processing requirements for the headers defined by this specification for that version.</t>

<t>Individual services MAY define custom headers. These headers MUST NOT begin with PayID. Custom headers SHOULD be optional when making requests to the service. A service MUST NOT require the PayID client to understand custom headers to accurately interpret the response.</t>

</section>
<section anchor="format-extensibility" title="Format Extensibility">
<t>A PayID service MUST support JSON format as described above and MAY support additional formats response bodies.</t>

</section>
</section>
<section anchor="basic-payid-protocol" title="Basic PayID Protocol">
<t>Basic PayID protocol is used to request payment account(s) information resource identified by a PayID URI from a PayID-enabled service provider identified by a PayID URL using HTTP over secure transport. When successful, PayID protocol always returns the JSON representation of payment account(s) information resource along with optional metadata. This information can be used for any purposes outside the scope of this document, though it is expected the most common application would be making payment.</t>

<t>Basic PayID protocol comprises request and response messages, each of which is defined in more detail below. The following is a visual representation of the basic protocol flow:</t>

<figure><artwork><![CDATA[
PayID client                                         PayID server
   |                                                          |
   |              1.) GET request to PayID URL                |
   |--------------------------------------------------------->|
   |                                                          | |                                                          |
   |              2.) 200 Ok                                  |
   |                  Payment account information response    |
   |<---------------------------------------------------------|
   |                                                          |
   |                                                          | 
]]></artwork></figure>

<section anchor="step-1-http-request-to-payid-url-using-http-get-method" title="Step 1: HTTP Request to PayID URL using HTTP GET Method">
<t>A basic PayID client issues a query using the HTTP GET method to the PayID URL without any query parameters and body.</t>

<t>The PayID client MUST query the PayID server using HTTPS only. <xref target="RFC2818"></xref> defines how HTTPS verifies the PayID server's identity. If the HTTPS connection cannot be established for any reason, then the PayID client MUST accept that the PayID request has failed and MUST NOT attempt to reissue the PayID request using HTTP over a non-secure connection.</t>

</section>
<section anchor="step-2-payment-account-information-response" title="Step 2: Payment Account Information Response">
<t>In response, the PayID server returns a JSON object representation of the payment account(s) information resource for the payment-network and environment requested by PayID client in the request <spanx style="verb">Accept</spanx> header field along with other required and/or optional metadata.</t>

<t>PayID servers MUST be able to process <spanx style="verb">application/payid+json</spanx> header type.</t>

<t>If the PayID server does not contain the payment account information corresponding to the request, the PayID server MUST respond with an appropriate error message.</t>

<t>A PayID server MAY redirect the PayID client; if it does, the redirection MUST only be to an <spanx style="verb">https</spanx> URI and the PayID client MUST perform certificate validation again when redirected.</t>

</section>
<section anchor="step-3-parse-payment-account-information-response" title="Step 3: Parse Payment Account Information Response">
<t>If the PayID server returns a valid response, the response will contain one or more of the fields defined above.</t>

</section>
</section>
<section anchor="example-use-of-basic-payid-protocol" title="Example Use of Basic PayID Protocol">
<t>This section shows sample use of Basic PayID protocol in several hypothetical scenarios.</t>

<section anchor="basic-payid-protocol-by-a-wallet" title="Basic PayID Protocol by a Wallet">
<t>Suppose Alice wishes to send a friend some XRP from a web-based wallet provider that Alice has an account on. Alice would log-in to the wallet provider and enter Bob's PayID (say, <spanx style="verb">bob$receiver.example.com</spanx>) into the wallet UI to start the payment. 
   The Wallet application would first discover the PayID URL for the PayID service-provider using one of the mechanisms described in PayID discovery <xref target="PAYID-DISCOVERY"></xref> protocol.</t>

<t>The Wallet application would then issue an HTTPS GET request:</t>

<figure><artwork><![CDATA[
 GET /users/bob HTTP/1.1
 Host: www.receiver.example.com
 Accept: application/payid+json
 PayID-version: 1.0
]]></artwork></figure>

<t>The PayID server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Content-Type: application/json
 Content-Length: 403
 PayID-version: 1.0
 Cache-Control: max-age=0
 Server: Apache/1.3.11
 {
   "payId" : "bob$receiver.example.com",
   "addresses" :
   [
     {  
       "paymentNetwork" : "xrpl",
       "environment" : "testnet",
       "addressDetailsType" : "CryptoAddressDetails",
       "addressDetails" : {
                    "address" : "XTVQWr6BhgBLW2jbFyqqufgq8T9eN7KresB684ZSHKQ3oDth"
            }
      },
     {
       "paymentNetwork" : "ach",
       "environment" : "mainnet",
       "addressDetailsType" : "ACHAddressDetails",
       "addressDetails" : {
                    "accountNumber" : "5674536253",
                    "routingNumber" : "aYJTDFGLKAJD"
            }
      }
    ],
    "memo" : "Additional optional Information"
 }
]]></artwork></figure>

<t>In the above example we see that the PayID server returned a list of payment accounts identified by PayID <spanx style="verb">bob$receiver.example.com</spanx>. This is because Alice's Wallet asked for all the payment accounts corresponding to the PayID in the <spanx style="verb">Accept</spanx> header. 
  Alice's Wallet MAY then use the payment account information to make payments.</t>

<t>Another example:</t>

<figure><artwork><![CDATA[
 GET /users/bob HTTP/1.1
 Host: www.receiver.example.com
 Accept: application/xrpl-testnet+json; q=0.4,
         application/ach+json; q=0.1
 PayID-version= 1.0
]]></artwork></figure>

<t>The PayID server might respond like this:</t>

<figure><artwork><![CDATA[
 HTTP/1.1 200 OK
 Content-Type: application/json
 Content-Length: 403
 PayID-version: 1.0
 Cache-Control: max-age=0
 Server: Apache/1.3.11
 {
   "payId" : "bob$receiver.example.com",
   "addresses" :
   [
     {  
       "paymentNetwork" : "xrpl",
       "environment" : "testnet",
       "addressDetailsType" : "CryptoAddressDetails",
       "addressDetails" : {
                    "address" : "XTVQWr6BhgBLW2jbFyqqufgq8T9eN7KresB684ZSHKQ3oDth"
            }
      }
    ]
 }
]]></artwork></figure>

</section>
</section>
<section anchor="common-response-status-codes-todo" title="Common Response Status Codes (TODO)">
<t>A PayID server MAY respond to request using any valid HTTP response code appropriate for the request. The PayID server SHOULD be as specific as possible in its choice of an HTTP specific status code.</t>

<section anchor="success-responses" title="Success Responses">
<t>The following response codes represent successful requests.</t>

<section anchor="response-code-200-ok" title="Response Code 200 OK">
<t>A request that does not create a resource returns 200 OK if it is completed successfully and the value of the resource is not null. null. In this case, the response body MUST contain the value of the resource specified in the request URL.</t>

</section>
<section anchor="response-code-3xx-redirection" title="Response Code 3xx Redirection">
<t>As per <xref target="RFC7231"></xref>, a 3xx Redirection indicates that further action needs to be taken by the client in order to fulfill the request. In this case, the response SHOULD include a Location header, as appropriate, with the URL from which the result can be obtained; it MAY include a Retry-After header.</t>

</section>
</section>
<section anchor="client-error-responses" title="Client Error Responses">
<t>Error codes in the 4xx range indicate a client error, such as a malformed request. 
  In the case that a response body is defined for the error code, the body of the error is as defined for the appropriate format.</t>

</section>
</section>
<section anchor="content-negotiation" title="Content Negotiation">

<t>The PayID client MAY choose to query for all possible payment addresses corresponding to a PayID URI</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/all+json                 
]]></artwork></figure>

<t>In this case, the PayID server MAY respond with all payment account(s) information associated with the queried PayID.</t>

<t>Alternatively, the PayID client MAY choose to query for a subset payment account(s) information in the order of preference.</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/xrpl-testnet+json; q=0.4,
         application/xrpl-mainnet+json; q= 0.1
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with the payment account(s) information corresponding to at least one of the payment-networks and environments mentioned in the <spanx style="verb">Accept</spanx> header in the order of client request preference. If none of those exist, PayID server MUST send an appropriate error response.</t>

<t>Alternatively, the PayID client MAY combine the above two approaches.</t>

<figure><artwork><![CDATA[
 GET / HTTP/1.1
 Accept: application/xrpl-testnet+json; q=0.4,
         application/xrpl-mainnet+json; q= 0.1,
         application/payid+json
]]></artwork></figure>

<t>In this case, the PayID server MUST respond with the payment account information corresponding to at least one of the payment-network and environment mentioned in the <spanx style="verb">Accept</spanx> header in the order of PayID client's preference. If none of those exist, then the PayID server MUST respond with payment account(s) information corresponding to all payment accounts associated with the queried PayID URI.</t>

</section>
<section anchor="versioningtodo" title="Versioning(TODO)">

<t>Versioning enables clients and servers to evolve independently. PayID protocol defines semantics for protocol versioning.</t>

<t>PayID requests and responses are versioned according to the PayID-version header.
 PayID clients include the PayID-version header in order to specify the maximum acceptable response version. PayID servers respond with the maximum supported version that is less than or equal to the requested <spanx style="verb">major</spanx></t>

</section>
<section anchor="security-considerations" title="Security Considerations">
<t>This security considerations section only considers PayID clients and servers bound to implementations as defined in this document. Such implementations have the following characteristics:</t>

<t><list style="symbols">
  <t>PayID URIs are static and well-known to the PayID client; PayID server URLs can be static or discovered.</t>
</list></t>

<t>The following is considered out-of-scope:</t>

<t><list style="symbols">
  <t>Communication between the PayID owner and the wallet or exchange (which acts as PayID server) for PayID URI registration, etc.</t>
  <t>Communication between the sender of the transaction and PayID client to transfer information such as PayID URI and other transaction details, etc.</t>
  <t>PayID server URL discovery by PayID client. Implementations using PayID-Discovery <xref target="PAYID-DISCOVERY"></xref> MUST consider the security considerations in the corresponding document.</t>
  <t>PayID server URL resolution by PayID client. Implementations using DNS, DNSSEC, DoH, DoT, etc. MUST consider the security considerations of the corresponding documents.</t>
</list></t>

<section anchor="network-attacks" title="Network Attacks">
<t>Basic PayID protocol's security model assumes the following network attackers:</t>

<t><list style="symbols">
  <t>Off-path attacker: An off-path attacker can be anywhere on the network. She can inject and spoof packets but can not observe, or tamper with the legitimate traffic between the PayID client and the server.</t>
  <t>On-path attacker: An on-path attacker can eavesdrop, inject, spoof and replay packets, but can not drop, delay or tamper with the legitimate traffic.</t>
  <t>In-path or Man-in-the-middle (MiTM) attacker: An MiTM is the most powerful network attacker. An MiTM has full access to the communication path between the PayID client and the server. She can observe, modify, delay and drop network packets.</t>
</list></t>

<t>Additionally we assume that the attacker has enough resources to mount an attack but can not break the security guarantees provided by the cryptographic primitives of the underlying secure transport.</t>

<t>The basic PayID protocol runs over HTTPS and thus relies on the security of the underlying transport. Implementations utilizing TLS 1.3 benefit from the TLS security profile defined in <xref target="RFC8446"></xref> against all the above network attackers.</t>

<section anchor="denial-of-service-dos-attacks" title="Denial-of-Service (DoS) attacks">
<t>As such, cryptography can not defend against DoS attacks because any attacker can stop/interrupt the PayID protocol by:
  * Dropping network packets, 
  * Exhaustion of resources either at the network level or at PayID client and/or server.</t>

<t>The PayID servers are recommended to follow general best network configuration practices to defend against such attacks <xref target="RFC4732"></xref>.</t>

</section>
</section>
<section anchor="information-integrity" title="Information Integrity">
<t>The HTTPS connection provides transport security for the interaction between PayID client and server but does not provide the response integrity of the data provided by PayID server. A PayID client has no way of knowing if data provided in the payment account information resource has been manipulated at the PayID server, either due to malicious behaviour on the part of PayID server administrator or as a result of being compromised by an attacker. As with any information service available on the Internet, PayID clients should be wary of the information received from untrusted sources.</t>

</section>
</section>
<section anchor="privacy-considerations" title="Privacy Considerations">
<t>The PayID client and server should be aware that placing information on the Internet means that any one can access that information. While PayID protocol is an extremely useful tool to discovering payment account(s) information corresponding to a human-rememberable PayID URI, PayID owners should also understand the associated privacy risks. The easy access to payment account information via PayID protocol was a design goal of the protocol, not a limitation.</t>

<section anchor="access-control" title="Access Control">
<t>PayID protocol MUST NOT be used to provide payment account(s) information corresponding to a PayID URI unless providing that data via PayID protocol by the relevant PayID server was explicitly authorized by the PayID owner. If PayID owner wishes to limit access to information, PayID servers MAY provide an interface by which PayID owners can select which information is exposed through the PayID server interface. For example, PayID servers MAY allow PayID owners to mark certain data as <spanx style="verb">public</spanx> and then utilize that marking as a means of determining what information to expose via PayID protocol. The PayID servers MAY also allow PayID owners to provide a whitelist of users who are authorized to access the specific information. In such a case, the PayID server MUST authenticate the PayID client.</t>

</section>
<section anchor="payment-address-rotation" title="Payment Address Rotation">
<t>The power of PayID protocol comes from providing a single place where others can find payment account(s) information corresponding to a PayID URI, but PayID owners should be aware of how easily payment account information that one might publish can be used in unintended ways. As one example, one might query a PayID server only to see if a given PayID URI is valid and if so, get the list of associated payment account information. If the PayID server uses the same payment address each time, it becomes easy for a third-party to track one's entire payment history. The PayID server MUST follow the best practice of payment address rotation for every query to mitigate this privacy concern.</t>

</section>
<section anchor="on-the-wire" title="On the Wire">
<t>PayID protocol over HTTPS encrypts the traffic and requires mutual authentication of the PayID client and the PayID server. This mitigates both passive surveillance <xref target="RFC7258"></xref> and the active attacks that attempt to divert PayID protocol queries to rogue servers.</t>

<t>Additionally, the use of the HTTPS default port 443 and the ability
  to mix PayID protocol traffic with other HTTPS traffic on the same connection can deter unprivileged on-path devices from interfering with PayID operations and make PayID traffic analysis more difficult.</t>

</section>
<section anchor="in-the-payid-server" title="In the PayID Server">
<t>The Basic PayID protocol data contains no information about the PayID client; however, various transports of PayID queries and responses do provide data that can be used to correlate requests. A Basic PayID protocol implementation is built on IP, TCP, TLS and HTTP. Each layer contains one or more common features that can be used to correlate queries to the same identity.</t>

<t>At the IP level, the PayID client address provides obvious correlation information. This can be mitigated by usee of NAT, proxy, VPN, or simple address rotation over time. It may be aggravated  by use of a PayID server that can correlate real-time addressing information with other identifiers, such as when PayID server and other services are operated by the same entity.</t>

<t>PayID client implementations that use one TCP connection for multiple PayID requests directly group those requests. Long-lived connections have better performance behaviours than short-lived connections; however they group more requests, which can expose more information to correlation and consolidation. TCP-based solutions may also seek performance through the use of TCP Fast Open <xref target="RFC7413"></xref>. The cookies used in TCP Fast open may allow PayID servers to correlate TLS connections together.</t>

<t>TCP-based implementations often achieve better handshake performance through the use of some form of session resumption mechanism, such as Section 2.2 of <xref target="RFC8446"></xref>. Session resumption creates a trivial mechanism for a server to correlate TLS connections together.</t>

<t>HTTP's feature set can also be used for identification and tracking in a number of ways. For example, Authentication request header fields explicitly identify profiles in use and HTTP cookies are designed as an explicit state-tracking mechanism and are often used as an authentication mechanism.</t>

<t>Additionally, the <spanx style="verb">User-Agent</spanx> and <spanx style="verb">Accept-Language</spanx> request header fields often convey specific information about the PayID client version or locale. This allows for content-negotiation and operational work-arounds for implementation bugs. Request header fields that control caching can expose state information about a subset of the client's history. Mixing PayID queries with other HTTP requests on the same connection also provides an opportunity for richer data correlation.</t>

<t>The PayID protocol design allows implementations to fully leverage the HTTP ecosystem, including features that are not enumerated in this document. Utilizing the full set of HTTP features enables PayID to be more than HTTP tunnel, but it is at the cost of opening up implementations to the full set of privacy considerations of HTTP.</t>

<t>Implementations of PayID clients and servers need to consider the benefits and privacy impacts of these features, and their deployment context, when deciding whether or not to enable them. Implementations are advised to expose the minimal set of data needed to achieve the desired feature set.</t>

<t>Determining whether or not PayID client implementation requires HTTP cookie <xref target="RFC6265"></xref> support is particularly important because HTTP cookies are the primary state tracking mechanism in HTTP, HTTP cookies SHOULD NOT be accepted by PayID clients unless they are explicitly required by a use case.</t>

<t>Overall, the PayID protocol does not introduce significant additional privacy concerns beyond those associated with using the underlying IP, TCP, TLS and HTTP layers.</t>

</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">
<t>This document defines registries for PayID protocol version and application/* +json media types.</t>

<section anchor="header-field-registration" title="Header Field Registration">
<t>Header field name: PayID-version: major.minor</t>

<t>Applicable Protocol: "PayID protocol"</t>

<t>Status: <spanx style="verb">standard</spanx></t>

<t>Author/Change controller: Refer to the contact details of the authors in this document.</t>

<t>Specification Document: <spanx style="verb">PayID protocol</spanx></t>

</section>
<section anchor="media-type-registration" title="Media Type Registration">
<t>This document registers multiple media types, listed in Table 1.</t>

<texttable>
      <ttcol align='left'>Type</ttcol>
      <ttcol align='left'>Subtype</ttcol>
      <ttcol align='left'>Specification</ttcol>
      <c>application</c>
      <c>xrpl-mainnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>xrpl-testnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>xrpl-devnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>ach+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>interledger-mainnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>interledger-testnet+json</c>
      <c>&#160;</c>
      <c>application</c>
      <c>payid+json</c>
      <c>&#160;</c>
</texttable>

<t>Type Name: application</t>

<t>Subtype name: This document registers multiple subtypes as listed in table 1</t>

<t>Required parameters: n/a</t>

<t>Optional parameters: n/a</t>

<t>Encoding considerations:  Encoding considerations are identical to those specified for the "application/json" media type. See[RFC7159][].</t>

<t>Security considerations: Security considerations relating to the generation and consumption of PayID protocol messages are discussed in Section X.</t>

<t>Interoperability considerations:  This document specifies format of conforming messages and the interpretation thereof.</t>

<t>Published specification: This document is the specification for these media types; see Table 1 for the section documenting each media type.</t>

<t>Applications that use this media type:  PayID servers and PayID clients.</t>

<t>Additional information:</t>

<t>Magic number(s):  n/a</t>

<t>File extension(s):  This document uses the mime type to refer to protocol messages and thus does not require a file extension.</t>

<t>Macintosh file type code(s):  n/a</t>

<t>Person &amp; email address to contact for further information:  See Authors' Addresses section.</t>

<t>Intended usage:  COMMON</t>

<t>Restrictions on usage:  n/a</t>

<t>Author:  See Authors' Addresses section.</t>

<t>Change controller:  Internet Engineering Task Force (mailto:iesg@ietf.org).</t>

</section>
</section>
<section anchor="acknowledgments" title="Acknowledgments">

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC2818;
&RFC8446;
&RFC7258;
&RFC7231;
&RFC7413;
&RFC6265;
<reference anchor="PAYID-URI" target="https://tbd.example.com/">
  <front>
    <title>The 'payid' URI Scheme</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>
<reference anchor="PAYID-DISCOVERY" >
  <front>
    <title>PayID Discovery</title>
    <author initials="D." surname="Fuelling" fullname="David Fuelling">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


    </references>

    <references title='Informative References'>

&RFC4732;


    </references>



  </back>

<!-- ##markdown-source:
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
He7bjAAA

-->

</rfc>

